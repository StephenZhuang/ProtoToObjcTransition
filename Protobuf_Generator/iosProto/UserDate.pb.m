// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "UserDate.pb.h"

@implementation UserDateRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserDateRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MDate ()
@property (retain) NSString* id;
@property (retain) NSString* theme;
@property (retain) NSString* content;
@property (retain) NSString* img;
@property (retain) NSString* time;
@property (retain) NSString* place;
@property (retain) NSString* cost;
@property int32_t friend;
@property (retain) NSString* userid;
@property (retain) NSString* userImg;
@property (retain) NSString* nickname;
@property (retain) NSString* sex;
@property int32_t age;
@property (retain) NSString* distanceShow;
@property (retain) NSString* distanceQuery;
@property (retain) NSString* createTimeShow;
@property (retain) NSString* createTimeQuery;
@property int32_t hasView;
@property int32_t userCnt;
@property int32_t overdue;
@property (retain) NSString* status;
@property (retain) NSString* viewId;
@end

@implementation MDate

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasTheme {
  return !!hasTheme_;
}
- (void) setHasTheme:(BOOL) _value {
  hasTheme_ = !!_value;
}
@synthesize theme;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value {
  hasContent_ = !!_value;
}
@synthesize content;
- (BOOL) hasImg {
  return !!hasImg_;
}
- (void) setHasImg:(BOOL) _value {
  hasImg_ = !!_value;
}
@synthesize img;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value {
  hasTime_ = !!_value;
}
@synthesize time;
- (BOOL) hasPlace {
  return !!hasPlace_;
}
- (void) setHasPlace:(BOOL) _value {
  hasPlace_ = !!_value;
}
@synthesize place;
- (BOOL) hasCost {
  return !!hasCost_;
}
- (void) setHasCost:(BOOL) _value {
  hasCost_ = !!_value;
}
@synthesize cost;
- (BOOL) hasFriend {
  return !!hasFriend_;
}
- (void) setHasFriend:(BOOL) _value {
  hasFriend_ = !!_value;
}
@synthesize friend;
- (BOOL) hasUserid {
  return !!hasUserid_;
}
- (void) setHasUserid:(BOOL) _value {
  hasUserid_ = !!_value;
}
@synthesize userid;
- (BOOL) hasUserImg {
  return !!hasUserImg_;
}
- (void) setHasUserImg:(BOOL) _value {
  hasUserImg_ = !!_value;
}
@synthesize userImg;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value {
  hasNickname_ = !!_value;
}
@synthesize nickname;
- (BOOL) hasSex {
  return !!hasSex_;
}
- (void) setHasSex:(BOOL) _value {
  hasSex_ = !!_value;
}
@synthesize sex;
- (BOOL) hasAge {
  return !!hasAge_;
}
- (void) setHasAge:(BOOL) _value {
  hasAge_ = !!_value;
}
@synthesize age;
- (BOOL) hasDistanceShow {
  return !!hasDistanceShow_;
}
- (void) setHasDistanceShow:(BOOL) _value {
  hasDistanceShow_ = !!_value;
}
@synthesize distanceShow;
- (BOOL) hasDistanceQuery {
  return !!hasDistanceQuery_;
}
- (void) setHasDistanceQuery:(BOOL) _value {
  hasDistanceQuery_ = !!_value;
}
@synthesize distanceQuery;
- (BOOL) hasCreateTimeShow {
  return !!hasCreateTimeShow_;
}
- (void) setHasCreateTimeShow:(BOOL) _value {
  hasCreateTimeShow_ = !!_value;
}
@synthesize createTimeShow;
- (BOOL) hasCreateTimeQuery {
  return !!hasCreateTimeQuery_;
}
- (void) setHasCreateTimeQuery:(BOOL) _value {
  hasCreateTimeQuery_ = !!_value;
}
@synthesize createTimeQuery;
- (BOOL) hasHasView {
  return !!hasHasView_;
}
- (void) setHasHasView:(BOOL) _value {
  hasHasView_ = !!_value;
}
@synthesize hasView;
- (BOOL) hasUserCnt {
  return !!hasUserCnt_;
}
- (void) setHasUserCnt:(BOOL) _value {
  hasUserCnt_ = !!_value;
}
@synthesize userCnt;
- (BOOL) hasOverdue {
  return !!hasOverdue_;
}
- (void) setHasOverdue:(BOOL) _value {
  hasOverdue_ = !!_value;
}
@synthesize overdue;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value {
  hasStatus_ = !!_value;
}
@synthesize status;
- (BOOL) hasViewId {
  return !!hasViewId_;
}
- (void) setHasViewId:(BOOL) _value {
  hasViewId_ = !!_value;
}
@synthesize viewId;
- (void) dealloc {
  self.id = nil;
  self.theme = nil;
  self.content = nil;
  self.img = nil;
  self.time = nil;
  self.place = nil;
  self.cost = nil;
  self.userid = nil;
  self.userImg = nil;
  self.nickname = nil;
  self.sex = nil;
  self.distanceShow = nil;
  self.distanceQuery = nil;
  self.createTimeShow = nil;
  self.createTimeQuery = nil;
  self.status = nil;
  self.viewId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.theme = @"";
    self.content = @"";
    self.img = @"";
    self.time = @"";
    self.place = @"";
    self.cost = @"";
    self.friend = 0;
    self.userid = @"";
    self.userImg = @"";
    self.nickname = @"";
    self.sex = @"";
    self.age = 0;
    self.distanceShow = @"";
    self.distanceQuery = @"";
    self.createTimeShow = @"";
    self.createTimeQuery = @"";
    self.hasView = 0;
    self.userCnt = 0;
    self.overdue = 0;
    self.status = @"";
    self.viewId = @"";
  }
  return self;
}
static MDate* defaultMDateInstance = nil;
+ (void) initialize {
  if (self == [MDate class]) {
    defaultMDateInstance = [[MDate alloc] init];
  }
}
+ (MDate*) defaultInstance {
  return defaultMDateInstance;
}
- (MDate*) defaultInstance {
  return defaultMDateInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasTheme) {
    [output writeString:2 value:self.theme];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasImg) {
    [output writeString:4 value:self.img];
  }
  if (self.hasTime) {
    [output writeString:5 value:self.time];
  }
  if (self.hasPlace) {
    [output writeString:6 value:self.place];
  }
  if (self.hasCost) {
    [output writeString:7 value:self.cost];
  }
  if (self.hasFriend) {
    [output writeInt32:8 value:self.friend];
  }
  if (self.hasUserid) {
    [output writeString:9 value:self.userid];
  }
  if (self.hasUserImg) {
    [output writeString:10 value:self.userImg];
  }
  if (self.hasNickname) {
    [output writeString:11 value:self.nickname];
  }
  if (self.hasSex) {
    [output writeString:12 value:self.sex];
  }
  if (self.hasAge) {
    [output writeInt32:13 value:self.age];
  }
  if (self.hasDistanceShow) {
    [output writeString:14 value:self.distanceShow];
  }
  if (self.hasDistanceQuery) {
    [output writeString:15 value:self.distanceQuery];
  }
  if (self.hasCreateTimeShow) {
    [output writeString:16 value:self.createTimeShow];
  }
  if (self.hasCreateTimeQuery) {
    [output writeString:17 value:self.createTimeQuery];
  }
  if (self.hasHasView) {
    [output writeInt32:18 value:self.hasView];
  }
  if (self.hasUserCnt) {
    [output writeInt32:19 value:self.userCnt];
  }
  if (self.hasOverdue) {
    [output writeInt32:20 value:self.overdue];
  }
  if (self.hasStatus) {
    [output writeString:21 value:self.status];
  }
  if (self.hasViewId) {
    [output writeString:22 value:self.viewId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasTheme) {
    size += computeStringSize(2, self.theme);
  }
  if (self.hasContent) {
    size += computeStringSize(3, self.content);
  }
  if (self.hasImg) {
    size += computeStringSize(4, self.img);
  }
  if (self.hasTime) {
    size += computeStringSize(5, self.time);
  }
  if (self.hasPlace) {
    size += computeStringSize(6, self.place);
  }
  if (self.hasCost) {
    size += computeStringSize(7, self.cost);
  }
  if (self.hasFriend) {
    size += computeInt32Size(8, self.friend);
  }
  if (self.hasUserid) {
    size += computeStringSize(9, self.userid);
  }
  if (self.hasUserImg) {
    size += computeStringSize(10, self.userImg);
  }
  if (self.hasNickname) {
    size += computeStringSize(11, self.nickname);
  }
  if (self.hasSex) {
    size += computeStringSize(12, self.sex);
  }
  if (self.hasAge) {
    size += computeInt32Size(13, self.age);
  }
  if (self.hasDistanceShow) {
    size += computeStringSize(14, self.distanceShow);
  }
  if (self.hasDistanceQuery) {
    size += computeStringSize(15, self.distanceQuery);
  }
  if (self.hasCreateTimeShow) {
    size += computeStringSize(16, self.createTimeShow);
  }
  if (self.hasCreateTimeQuery) {
    size += computeStringSize(17, self.createTimeQuery);
  }
  if (self.hasHasView) {
    size += computeInt32Size(18, self.hasView);
  }
  if (self.hasUserCnt) {
    size += computeInt32Size(19, self.userCnt);
  }
  if (self.hasOverdue) {
    size += computeInt32Size(20, self.overdue);
  }
  if (self.hasStatus) {
    size += computeStringSize(21, self.status);
  }
  if (self.hasViewId) {
    size += computeStringSize(22, self.viewId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MDate*) parseFromData:(NSData*) data {
  return (MDate*)[[[MDate builder] mergeFromData:data] build];
}
+ (MDate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MDate*)[[[MDate builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MDate*) parseFromInputStream:(NSInputStream*) input {
  return (MDate*)[[[MDate builder] mergeFromInputStream:input] build];
}
+ (MDate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MDate*)[[[MDate builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MDate*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MDate*)[[[MDate builder] mergeFromCodedInputStream:input] build];
}
+ (MDate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MDate*)[[[MDate builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MDate_Builder*) builder {
  return [[[MDate_Builder alloc] init] autorelease];
}
+ (MDate_Builder*) builderWithPrototype:(MDate*) prototype {
  return [[MDate builder] mergeFrom:prototype];
}
- (MDate_Builder*) builder {
  return [MDate builder];
}
@end

@interface MDate_Builder()
@property (retain) MDate* protobufBuilderResult;
@end

@implementation MDate_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MDate alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MDate_Builder*) clear {
  self.protobufBuilderResult = [[[MDate alloc] init] autorelease];
  return self;
}
- (MDate_Builder*) clone {
  return [MDate builderWithPrototype:protobufBuilderResult];
}
- (MDate*) defaultInstance {
  return [MDate defaultInstance];
}
- (MDate*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MDate*) buildPartial {
  MDate* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MDate_Builder*) mergeFrom:(MDate*) other {
  if (other == [MDate defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTheme) {
    [self setTheme:other.theme];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasImg) {
    [self setImg:other.img];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasPlace) {
    [self setPlace:other.place];
  }
  if (other.hasCost) {
    [self setCost:other.cost];
  }
  if (other.hasFriend) {
    [self setFriend:other.friend];
  }
  if (other.hasUserid) {
    [self setUserid:other.userid];
  }
  if (other.hasUserImg) {
    [self setUserImg:other.userImg];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasSex) {
    [self setSex:other.sex];
  }
  if (other.hasAge) {
    [self setAge:other.age];
  }
  if (other.hasDistanceShow) {
    [self setDistanceShow:other.distanceShow];
  }
  if (other.hasDistanceQuery) {
    [self setDistanceQuery:other.distanceQuery];
  }
  if (other.hasCreateTimeShow) {
    [self setCreateTimeShow:other.createTimeShow];
  }
  if (other.hasCreateTimeQuery) {
    [self setCreateTimeQuery:other.createTimeQuery];
  }
  if (other.hasHasView) {
    [self setHasView:other.hasView];
  }
  if (other.hasUserCnt) {
    [self setUserCnt:other.userCnt];
  }
  if (other.hasOverdue) {
    [self setOverdue:other.overdue];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasViewId) {
    [self setViewId:other.viewId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MDate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MDate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setTheme:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        [self setImg:[input readString]];
        break;
      }
      case 42: {
        [self setTime:[input readString]];
        break;
      }
      case 50: {
        [self setPlace:[input readString]];
        break;
      }
      case 58: {
        [self setCost:[input readString]];
        break;
      }
      case 64: {
        [self setFriend:[input readInt32]];
        break;
      }
      case 74: {
        [self setUserid:[input readString]];
        break;
      }
      case 82: {
        [self setUserImg:[input readString]];
        break;
      }
      case 90: {
        [self setNickname:[input readString]];
        break;
      }
      case 98: {
        [self setSex:[input readString]];
        break;
      }
      case 104: {
        [self setAge:[input readInt32]];
        break;
      }
      case 114: {
        [self setDistanceShow:[input readString]];
        break;
      }
      case 122: {
        [self setDistanceQuery:[input readString]];
        break;
      }
      case 130: {
        [self setCreateTimeShow:[input readString]];
        break;
      }
      case 138: {
        [self setCreateTimeQuery:[input readString]];
        break;
      }
      case 144: {
        [self setHasView:[input readInt32]];
        break;
      }
      case 152: {
        [self setUserCnt:[input readInt32]];
        break;
      }
      case 160: {
        [self setOverdue:[input readInt32]];
        break;
      }
      case 170: {
        [self setStatus:[input readString]];
        break;
      }
      case 178: {
        [self setViewId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MDate_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MDate_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasTheme {
  return protobufBuilderResult.hasTheme;
}
- (NSString*) theme {
  return protobufBuilderResult.theme;
}
- (MDate_Builder*) setTheme:(NSString*) _value {
  protobufBuilderResult.hasTheme = YES;
  protobufBuilderResult.theme = _value;
  return self;
}
- (MDate_Builder*) clearTheme {
  protobufBuilderResult.hasTheme = NO;
  protobufBuilderResult.theme = @"";
  return self;
}
- (BOOL) hasContent {
  return protobufBuilderResult.hasContent;
}
- (NSString*) content {
  return protobufBuilderResult.content;
}
- (MDate_Builder*) setContent:(NSString*) _value {
  protobufBuilderResult.hasContent = YES;
  protobufBuilderResult.content = _value;
  return self;
}
- (MDate_Builder*) clearContent {
  protobufBuilderResult.hasContent = NO;
  protobufBuilderResult.content = @"";
  return self;
}
- (BOOL) hasImg {
  return protobufBuilderResult.hasImg;
}
- (NSString*) img {
  return protobufBuilderResult.img;
}
- (MDate_Builder*) setImg:(NSString*) _value {
  protobufBuilderResult.hasImg = YES;
  protobufBuilderResult.img = _value;
  return self;
}
- (MDate_Builder*) clearImg {
  protobufBuilderResult.hasImg = NO;
  protobufBuilderResult.img = @"";
  return self;
}
- (BOOL) hasTime {
  return protobufBuilderResult.hasTime;
}
- (NSString*) time {
  return protobufBuilderResult.time;
}
- (MDate_Builder*) setTime:(NSString*) _value {
  protobufBuilderResult.hasTime = YES;
  protobufBuilderResult.time = _value;
  return self;
}
- (MDate_Builder*) clearTime {
  protobufBuilderResult.hasTime = NO;
  protobufBuilderResult.time = @"";
  return self;
}
- (BOOL) hasPlace {
  return protobufBuilderResult.hasPlace;
}
- (NSString*) place {
  return protobufBuilderResult.place;
}
- (MDate_Builder*) setPlace:(NSString*) _value {
  protobufBuilderResult.hasPlace = YES;
  protobufBuilderResult.place = _value;
  return self;
}
- (MDate_Builder*) clearPlace {
  protobufBuilderResult.hasPlace = NO;
  protobufBuilderResult.place = @"";
  return self;
}
- (BOOL) hasCost {
  return protobufBuilderResult.hasCost;
}
- (NSString*) cost {
  return protobufBuilderResult.cost;
}
- (MDate_Builder*) setCost:(NSString*) _value {
  protobufBuilderResult.hasCost = YES;
  protobufBuilderResult.cost = _value;
  return self;
}
- (MDate_Builder*) clearCost {
  protobufBuilderResult.hasCost = NO;
  protobufBuilderResult.cost = @"";
  return self;
}
- (BOOL) hasFriend {
  return protobufBuilderResult.hasFriend;
}
- (int32_t) friend {
  return protobufBuilderResult.friend;
}
- (MDate_Builder*) setFriend:(int32_t) _value {
  protobufBuilderResult.hasFriend = YES;
  protobufBuilderResult.friend = _value;
  return self;
}
- (MDate_Builder*) clearFriend {
  protobufBuilderResult.hasFriend = NO;
  protobufBuilderResult.friend = 0;
  return self;
}
- (BOOL) hasUserid {
  return protobufBuilderResult.hasUserid;
}
- (NSString*) userid {
  return protobufBuilderResult.userid;
}
- (MDate_Builder*) setUserid:(NSString*) _value {
  protobufBuilderResult.hasUserid = YES;
  protobufBuilderResult.userid = _value;
  return self;
}
- (MDate_Builder*) clearUserid {
  protobufBuilderResult.hasUserid = NO;
  protobufBuilderResult.userid = @"";
  return self;
}
- (BOOL) hasUserImg {
  return protobufBuilderResult.hasUserImg;
}
- (NSString*) userImg {
  return protobufBuilderResult.userImg;
}
- (MDate_Builder*) setUserImg:(NSString*) _value {
  protobufBuilderResult.hasUserImg = YES;
  protobufBuilderResult.userImg = _value;
  return self;
}
- (MDate_Builder*) clearUserImg {
  protobufBuilderResult.hasUserImg = NO;
  protobufBuilderResult.userImg = @"";
  return self;
}
- (BOOL) hasNickname {
  return protobufBuilderResult.hasNickname;
}
- (NSString*) nickname {
  return protobufBuilderResult.nickname;
}
- (MDate_Builder*) setNickname:(NSString*) _value {
  protobufBuilderResult.hasNickname = YES;
  protobufBuilderResult.nickname = _value;
  return self;
}
- (MDate_Builder*) clearNickname {
  protobufBuilderResult.hasNickname = NO;
  protobufBuilderResult.nickname = @"";
  return self;
}
- (BOOL) hasSex {
  return protobufBuilderResult.hasSex;
}
- (NSString*) sex {
  return protobufBuilderResult.sex;
}
- (MDate_Builder*) setSex:(NSString*) _value {
  protobufBuilderResult.hasSex = YES;
  protobufBuilderResult.sex = _value;
  return self;
}
- (MDate_Builder*) clearSex {
  protobufBuilderResult.hasSex = NO;
  protobufBuilderResult.sex = @"";
  return self;
}
- (BOOL) hasAge {
  return protobufBuilderResult.hasAge;
}
- (int32_t) age {
  return protobufBuilderResult.age;
}
- (MDate_Builder*) setAge:(int32_t) _value {
  protobufBuilderResult.hasAge = YES;
  protobufBuilderResult.age = _value;
  return self;
}
- (MDate_Builder*) clearAge {
  protobufBuilderResult.hasAge = NO;
  protobufBuilderResult.age = 0;
  return self;
}
- (BOOL) hasDistanceShow {
  return protobufBuilderResult.hasDistanceShow;
}
- (NSString*) distanceShow {
  return protobufBuilderResult.distanceShow;
}
- (MDate_Builder*) setDistanceShow:(NSString*) _value {
  protobufBuilderResult.hasDistanceShow = YES;
  protobufBuilderResult.distanceShow = _value;
  return self;
}
- (MDate_Builder*) clearDistanceShow {
  protobufBuilderResult.hasDistanceShow = NO;
  protobufBuilderResult.distanceShow = @"";
  return self;
}
- (BOOL) hasDistanceQuery {
  return protobufBuilderResult.hasDistanceQuery;
}
- (NSString*) distanceQuery {
  return protobufBuilderResult.distanceQuery;
}
- (MDate_Builder*) setDistanceQuery:(NSString*) _value {
  protobufBuilderResult.hasDistanceQuery = YES;
  protobufBuilderResult.distanceQuery = _value;
  return self;
}
- (MDate_Builder*) clearDistanceQuery {
  protobufBuilderResult.hasDistanceQuery = NO;
  protobufBuilderResult.distanceQuery = @"";
  return self;
}
- (BOOL) hasCreateTimeShow {
  return protobufBuilderResult.hasCreateTimeShow;
}
- (NSString*) createTimeShow {
  return protobufBuilderResult.createTimeShow;
}
- (MDate_Builder*) setCreateTimeShow:(NSString*) _value {
  protobufBuilderResult.hasCreateTimeShow = YES;
  protobufBuilderResult.createTimeShow = _value;
  return self;
}
- (MDate_Builder*) clearCreateTimeShow {
  protobufBuilderResult.hasCreateTimeShow = NO;
  protobufBuilderResult.createTimeShow = @"";
  return self;
}
- (BOOL) hasCreateTimeQuery {
  return protobufBuilderResult.hasCreateTimeQuery;
}
- (NSString*) createTimeQuery {
  return protobufBuilderResult.createTimeQuery;
}
- (MDate_Builder*) setCreateTimeQuery:(NSString*) _value {
  protobufBuilderResult.hasCreateTimeQuery = YES;
  protobufBuilderResult.createTimeQuery = _value;
  return self;
}
- (MDate_Builder*) clearCreateTimeQuery {
  protobufBuilderResult.hasCreateTimeQuery = NO;
  protobufBuilderResult.createTimeQuery = @"";
  return self;
}
- (BOOL) hasHasView {
  return protobufBuilderResult.hasHasView;
}
- (int32_t) hasView {
  return protobufBuilderResult.hasView;
}
- (MDate_Builder*) setHasView:(int32_t) _value {
  protobufBuilderResult.hasHasView = YES;
  protobufBuilderResult.hasView = _value;
  return self;
}
- (MDate_Builder*) clearHasView {
  protobufBuilderResult.hasHasView = NO;
  protobufBuilderResult.hasView = 0;
  return self;
}
- (BOOL) hasUserCnt {
  return protobufBuilderResult.hasUserCnt;
}
- (int32_t) userCnt {
  return protobufBuilderResult.userCnt;
}
- (MDate_Builder*) setUserCnt:(int32_t) _value {
  protobufBuilderResult.hasUserCnt = YES;
  protobufBuilderResult.userCnt = _value;
  return self;
}
- (MDate_Builder*) clearUserCnt {
  protobufBuilderResult.hasUserCnt = NO;
  protobufBuilderResult.userCnt = 0;
  return self;
}
- (BOOL) hasOverdue {
  return protobufBuilderResult.hasOverdue;
}
- (int32_t) overdue {
  return protobufBuilderResult.overdue;
}
- (MDate_Builder*) setOverdue:(int32_t) _value {
  protobufBuilderResult.hasOverdue = YES;
  protobufBuilderResult.overdue = _value;
  return self;
}
- (MDate_Builder*) clearOverdue {
  protobufBuilderResult.hasOverdue = NO;
  protobufBuilderResult.overdue = 0;
  return self;
}
- (BOOL) hasStatus {
  return protobufBuilderResult.hasStatus;
}
- (NSString*) status {
  return protobufBuilderResult.status;
}
- (MDate_Builder*) setStatus:(NSString*) _value {
  protobufBuilderResult.hasStatus = YES;
  protobufBuilderResult.status = _value;
  return self;
}
- (MDate_Builder*) clearStatus {
  protobufBuilderResult.hasStatus = NO;
  protobufBuilderResult.status = @"";
  return self;
}
- (BOOL) hasViewId {
  return protobufBuilderResult.hasViewId;
}
- (NSString*) viewId {
  return protobufBuilderResult.viewId;
}
- (MDate_Builder*) setViewId:(NSString*) _value {
  protobufBuilderResult.hasViewId = YES;
  protobufBuilderResult.viewId = _value;
  return self;
}
- (MDate_Builder*) clearViewId {
  protobufBuilderResult.hasViewId = NO;
  protobufBuilderResult.viewId = @"";
  return self;
}
@end

@interface MDateList ()
@property (retain) NSMutableArray* mutableDateList;
@end

@implementation MDateList

@synthesize mutableDateList;
- (void) dealloc {
  self.mutableDateList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MDateList* defaultMDateListInstance = nil;
+ (void) initialize {
  if (self == [MDateList class]) {
    defaultMDateListInstance = [[MDateList alloc] init];
  }
}
+ (MDateList*) defaultInstance {
  return defaultMDateListInstance;
}
- (MDateList*) defaultInstance {
  return defaultMDateListInstance;
}
- (NSArray*) dateList {
  return mutableDateList;
}
- (MDate*) dateAtIndex:(int32_t) index {
  id _value = [mutableDateList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MDate* element in self.dateList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MDate* element in self.dateList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MDateList*) parseFromData:(NSData*) data {
  return (MDateList*)[[[MDateList builder] mergeFromData:data] build];
}
+ (MDateList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MDateList*)[[[MDateList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MDateList*) parseFromInputStream:(NSInputStream*) input {
  return (MDateList*)[[[MDateList builder] mergeFromInputStream:input] build];
}
+ (MDateList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MDateList*)[[[MDateList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MDateList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MDateList*)[[[MDateList builder] mergeFromCodedInputStream:input] build];
}
+ (MDateList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MDateList*)[[[MDateList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MDateList_Builder*) builder {
  return [[[MDateList_Builder alloc] init] autorelease];
}
+ (MDateList_Builder*) builderWithPrototype:(MDateList*) prototype {
  return [[MDateList builder] mergeFrom:prototype];
}
- (MDateList_Builder*) builder {
  return [MDateList builder];
}
@end

@interface MDateList_Builder()
@property (retain) MDateList* protobufBuilderResult;
@end

@implementation MDateList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MDateList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MDateList_Builder*) clear {
  self.protobufBuilderResult = [[[MDateList alloc] init] autorelease];
  return self;
}
- (MDateList_Builder*) clone {
  return [MDateList builderWithPrototype:protobufBuilderResult];
}
- (MDateList*) defaultInstance {
  return [MDateList defaultInstance];
}
- (MDateList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MDateList*) buildPartial {
  MDateList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MDateList_Builder*) mergeFrom:(MDateList*) other {
  if (other == [MDateList defaultInstance]) {
    return self;
  }
  if (other.mutableDateList.count > 0) {
    if (protobufBuilderResult.mutableDateList == nil) {
      protobufBuilderResult.mutableDateList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableDateList addObjectsFromArray:other.mutableDateList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MDateList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MDateList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MDate_Builder* subBuilder = [MDate builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDate:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) dateList {
  if (protobufBuilderResult.mutableDateList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableDateList;
}
- (MDate*) dateAtIndex:(int32_t) index {
  return [protobufBuilderResult dateAtIndex:index];
}
- (MDateList_Builder*) replaceDateAtIndex:(int32_t) index with:(MDate*) _value {
  [protobufBuilderResult.mutableDateList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MDateList_Builder*) addAllDate:(NSArray*) values {
  if (protobufBuilderResult.mutableDateList == nil) {
    protobufBuilderResult.mutableDateList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableDateList addObjectsFromArray:values];
  return self;
}
- (MDateList_Builder*) clearDateList {
  protobufBuilderResult.mutableDateList = nil;
  return self;
}
- (MDateList_Builder*) addDate:(MDate*) _value {
  if (protobufBuilderResult.mutableDateList == nil) {
    protobufBuilderResult.mutableDateList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableDateList addObject:_value];
  return self;
}
@end

@interface MMarriage ()
@property (retain) NSString* id;
@property (retain) NSString* userid;
@property (retain) NSString* img;
@property (retain) NSString* letter;
@property (retain) NSString* whenMarry;
@property (retain) NSString* parent;
@property (retain) NSString* onlyChild;
@property (retain) NSString* source;
@property (retain) NSString* location;
@property (retain) NSString* height;
@property (retain) NSString* weight;
@property (retain) NSString* job;
@property (retain) NSString* income;
@property (retain) NSString* education;
@property (retain) NSString* history;
@property (retain) NSString* marriageHistory;
@property (retain) NSString* child;
@property (retain) NSString* wine;
@property (retain) NSString* health;
@property (retain) NSString* marriageHousing;
@property (retain) NSString* zodiac;
@property (retain) NSString* constellation;
@property (retain) NSString* blood;
@property (retain) NSString* nation;
@property (retain) NSString* religion;
@property (retain) NSString* school;
@property (retain) NSString* driverLicense;
@property (retain) NSString* smoke;
@property (retain) NSString* trait;
@property (retain) NSString* disease;
@property (retain) NSString* sport;
@property (retain) NSString* travel;
@property (retain) NSString* hobby;
@property (retain) NSString* houseEquity;
@property (retain) NSString* loan;
@property (retain) NSString* car;
@property (retain) NSString* asset;
@property (retain) NSString* targetSource;
@property (retain) NSString* targetIncome;
@property (retain) NSString* targetEducation;
@property (retain) NSString* targetMarriage;
@property (retain) NSString* targetHouse;
@property (retain) NSString* targetChild;
@property (retain) NSString* targetZodiac;
@property (retain) NSString* targetHeight;
@property (retain) NSString* targetWeight;
@property (retain) NSString* distance;
@property (retain) NSString* nickname;
@property int32_t sex;
@property int32_t age;
@property int32_t photoCnt;
@property (retain) NSString* createTime;
@property int32_t hasView;
@property (retain) NSString* viewId;
@end

@implementation MMarriage

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasUserid {
  return !!hasUserid_;
}
- (void) setHasUserid:(BOOL) _value {
  hasUserid_ = !!_value;
}
@synthesize userid;
- (BOOL) hasImg {
  return !!hasImg_;
}
- (void) setHasImg:(BOOL) _value {
  hasImg_ = !!_value;
}
@synthesize img;
- (BOOL) hasLetter {
  return !!hasLetter_;
}
- (void) setHasLetter:(BOOL) _value {
  hasLetter_ = !!_value;
}
@synthesize letter;
- (BOOL) hasWhenMarry {
  return !!hasWhenMarry_;
}
- (void) setHasWhenMarry:(BOOL) _value {
  hasWhenMarry_ = !!_value;
}
@synthesize whenMarry;
- (BOOL) hasParent {
  return !!hasParent_;
}
- (void) setHasParent:(BOOL) _value {
  hasParent_ = !!_value;
}
@synthesize parent;
- (BOOL) hasOnlyChild {
  return !!hasOnlyChild_;
}
- (void) setHasOnlyChild:(BOOL) _value {
  hasOnlyChild_ = !!_value;
}
@synthesize onlyChild;
- (BOOL) hasSource {
  return !!hasSource_;
}
- (void) setHasSource:(BOOL) _value {
  hasSource_ = !!_value;
}
@synthesize source;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) _value {
  hasLocation_ = !!_value;
}
@synthesize location;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) _value {
  hasHeight_ = !!_value;
}
@synthesize height;
- (BOOL) hasWeight {
  return !!hasWeight_;
}
- (void) setHasWeight:(BOOL) _value {
  hasWeight_ = !!_value;
}
@synthesize weight;
- (BOOL) hasJob {
  return !!hasJob_;
}
- (void) setHasJob:(BOOL) _value {
  hasJob_ = !!_value;
}
@synthesize job;
- (BOOL) hasIncome {
  return !!hasIncome_;
}
- (void) setHasIncome:(BOOL) _value {
  hasIncome_ = !!_value;
}
@synthesize income;
- (BOOL) hasEducation {
  return !!hasEducation_;
}
- (void) setHasEducation:(BOOL) _value {
  hasEducation_ = !!_value;
}
@synthesize education;
- (BOOL) hasHistory {
  return !!hasHistory_;
}
- (void) setHasHistory:(BOOL) _value {
  hasHistory_ = !!_value;
}
@synthesize history;
- (BOOL) hasMarriageHistory {
  return !!hasMarriageHistory_;
}
- (void) setHasMarriageHistory:(BOOL) _value {
  hasMarriageHistory_ = !!_value;
}
@synthesize marriageHistory;
- (BOOL) hasChild {
  return !!hasChild_;
}
- (void) setHasChild:(BOOL) _value {
  hasChild_ = !!_value;
}
@synthesize child;
- (BOOL) hasWine {
  return !!hasWine_;
}
- (void) setHasWine:(BOOL) _value {
  hasWine_ = !!_value;
}
@synthesize wine;
- (BOOL) hasHealth {
  return !!hasHealth_;
}
- (void) setHasHealth:(BOOL) _value {
  hasHealth_ = !!_value;
}
@synthesize health;
- (BOOL) hasMarriageHousing {
  return !!hasMarriageHousing_;
}
- (void) setHasMarriageHousing:(BOOL) _value {
  hasMarriageHousing_ = !!_value;
}
@synthesize marriageHousing;
- (BOOL) hasZodiac {
  return !!hasZodiac_;
}
- (void) setHasZodiac:(BOOL) _value {
  hasZodiac_ = !!_value;
}
@synthesize zodiac;
- (BOOL) hasConstellation {
  return !!hasConstellation_;
}
- (void) setHasConstellation:(BOOL) _value {
  hasConstellation_ = !!_value;
}
@synthesize constellation;
- (BOOL) hasBlood {
  return !!hasBlood_;
}
- (void) setHasBlood:(BOOL) _value {
  hasBlood_ = !!_value;
}
@synthesize blood;
- (BOOL) hasNation {
  return !!hasNation_;
}
- (void) setHasNation:(BOOL) _value {
  hasNation_ = !!_value;
}
@synthesize nation;
- (BOOL) hasReligion {
  return !!hasReligion_;
}
- (void) setHasReligion:(BOOL) _value {
  hasReligion_ = !!_value;
}
@synthesize religion;
- (BOOL) hasSchool {
  return !!hasSchool_;
}
- (void) setHasSchool:(BOOL) _value {
  hasSchool_ = !!_value;
}
@synthesize school;
- (BOOL) hasDriverLicense {
  return !!hasDriverLicense_;
}
- (void) setHasDriverLicense:(BOOL) _value {
  hasDriverLicense_ = !!_value;
}
@synthesize driverLicense;
- (BOOL) hasSmoke {
  return !!hasSmoke_;
}
- (void) setHasSmoke:(BOOL) _value {
  hasSmoke_ = !!_value;
}
@synthesize smoke;
- (BOOL) hasTrait {
  return !!hasTrait_;
}
- (void) setHasTrait:(BOOL) _value {
  hasTrait_ = !!_value;
}
@synthesize trait;
- (BOOL) hasDisease {
  return !!hasDisease_;
}
- (void) setHasDisease:(BOOL) _value {
  hasDisease_ = !!_value;
}
@synthesize disease;
- (BOOL) hasSport {
  return !!hasSport_;
}
- (void) setHasSport:(BOOL) _value {
  hasSport_ = !!_value;
}
@synthesize sport;
- (BOOL) hasTravel {
  return !!hasTravel_;
}
- (void) setHasTravel:(BOOL) _value {
  hasTravel_ = !!_value;
}
@synthesize travel;
- (BOOL) hasHobby {
  return !!hasHobby_;
}
- (void) setHasHobby:(BOOL) _value {
  hasHobby_ = !!_value;
}
@synthesize hobby;
- (BOOL) hasHouseEquity {
  return !!hasHouseEquity_;
}
- (void) setHasHouseEquity:(BOOL) _value {
  hasHouseEquity_ = !!_value;
}
@synthesize houseEquity;
- (BOOL) hasLoan {
  return !!hasLoan_;
}
- (void) setHasLoan:(BOOL) _value {
  hasLoan_ = !!_value;
}
@synthesize loan;
- (BOOL) hasCar {
  return !!hasCar_;
}
- (void) setHasCar:(BOOL) _value {
  hasCar_ = !!_value;
}
@synthesize car;
- (BOOL) hasAsset {
  return !!hasAsset_;
}
- (void) setHasAsset:(BOOL) _value {
  hasAsset_ = !!_value;
}
@synthesize asset;
- (BOOL) hasTargetSource {
  return !!hasTargetSource_;
}
- (void) setHasTargetSource:(BOOL) _value {
  hasTargetSource_ = !!_value;
}
@synthesize targetSource;
- (BOOL) hasTargetIncome {
  return !!hasTargetIncome_;
}
- (void) setHasTargetIncome:(BOOL) _value {
  hasTargetIncome_ = !!_value;
}
@synthesize targetIncome;
- (BOOL) hasTargetEducation {
  return !!hasTargetEducation_;
}
- (void) setHasTargetEducation:(BOOL) _value {
  hasTargetEducation_ = !!_value;
}
@synthesize targetEducation;
- (BOOL) hasTargetMarriage {
  return !!hasTargetMarriage_;
}
- (void) setHasTargetMarriage:(BOOL) _value {
  hasTargetMarriage_ = !!_value;
}
@synthesize targetMarriage;
- (BOOL) hasTargetHouse {
  return !!hasTargetHouse_;
}
- (void) setHasTargetHouse:(BOOL) _value {
  hasTargetHouse_ = !!_value;
}
@synthesize targetHouse;
- (BOOL) hasTargetChild {
  return !!hasTargetChild_;
}
- (void) setHasTargetChild:(BOOL) _value {
  hasTargetChild_ = !!_value;
}
@synthesize targetChild;
- (BOOL) hasTargetZodiac {
  return !!hasTargetZodiac_;
}
- (void) setHasTargetZodiac:(BOOL) _value {
  hasTargetZodiac_ = !!_value;
}
@synthesize targetZodiac;
- (BOOL) hasTargetHeight {
  return !!hasTargetHeight_;
}
- (void) setHasTargetHeight:(BOOL) _value {
  hasTargetHeight_ = !!_value;
}
@synthesize targetHeight;
- (BOOL) hasTargetWeight {
  return !!hasTargetWeight_;
}
- (void) setHasTargetWeight:(BOOL) _value {
  hasTargetWeight_ = !!_value;
}
@synthesize targetWeight;
- (BOOL) hasDistance {
  return !!hasDistance_;
}
- (void) setHasDistance:(BOOL) _value {
  hasDistance_ = !!_value;
}
@synthesize distance;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value {
  hasNickname_ = !!_value;
}
@synthesize nickname;
- (BOOL) hasSex {
  return !!hasSex_;
}
- (void) setHasSex:(BOOL) _value {
  hasSex_ = !!_value;
}
@synthesize sex;
- (BOOL) hasAge {
  return !!hasAge_;
}
- (void) setHasAge:(BOOL) _value {
  hasAge_ = !!_value;
}
@synthesize age;
- (BOOL) hasPhotoCnt {
  return !!hasPhotoCnt_;
}
- (void) setHasPhotoCnt:(BOOL) _value {
  hasPhotoCnt_ = !!_value;
}
@synthesize photoCnt;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) _value {
  hasCreateTime_ = !!_value;
}
@synthesize createTime;
- (BOOL) hasHasView {
  return !!hasHasView_;
}
- (void) setHasHasView:(BOOL) _value {
  hasHasView_ = !!_value;
}
@synthesize hasView;
- (BOOL) hasViewId {
  return !!hasViewId_;
}
- (void) setHasViewId:(BOOL) _value {
  hasViewId_ = !!_value;
}
@synthesize viewId;
- (void) dealloc {
  self.id = nil;
  self.userid = nil;
  self.img = nil;
  self.letter = nil;
  self.whenMarry = nil;
  self.parent = nil;
  self.onlyChild = nil;
  self.source = nil;
  self.location = nil;
  self.height = nil;
  self.weight = nil;
  self.job = nil;
  self.income = nil;
  self.education = nil;
  self.history = nil;
  self.marriageHistory = nil;
  self.child = nil;
  self.wine = nil;
  self.health = nil;
  self.marriageHousing = nil;
  self.zodiac = nil;
  self.constellation = nil;
  self.blood = nil;
  self.nation = nil;
  self.religion = nil;
  self.school = nil;
  self.driverLicense = nil;
  self.smoke = nil;
  self.trait = nil;
  self.disease = nil;
  self.sport = nil;
  self.travel = nil;
  self.hobby = nil;
  self.houseEquity = nil;
  self.loan = nil;
  self.car = nil;
  self.asset = nil;
  self.targetSource = nil;
  self.targetIncome = nil;
  self.targetEducation = nil;
  self.targetMarriage = nil;
  self.targetHouse = nil;
  self.targetChild = nil;
  self.targetZodiac = nil;
  self.targetHeight = nil;
  self.targetWeight = nil;
  self.distance = nil;
  self.nickname = nil;
  self.createTime = nil;
  self.viewId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.userid = @"";
    self.img = @"";
    self.letter = @"";
    self.whenMarry = @"";
    self.parent = @"";
    self.onlyChild = @"";
    self.source = @"";
    self.location = @"";
    self.height = @"";
    self.weight = @"";
    self.job = @"";
    self.income = @"";
    self.education = @"";
    self.history = @"";
    self.marriageHistory = @"";
    self.child = @"";
    self.wine = @"";
    self.health = @"";
    self.marriageHousing = @"";
    self.zodiac = @"";
    self.constellation = @"";
    self.blood = @"";
    self.nation = @"";
    self.religion = @"";
    self.school = @"";
    self.driverLicense = @"";
    self.smoke = @"";
    self.trait = @"";
    self.disease = @"";
    self.sport = @"";
    self.travel = @"";
    self.hobby = @"";
    self.houseEquity = @"";
    self.loan = @"";
    self.car = @"";
    self.asset = @"";
    self.targetSource = @"";
    self.targetIncome = @"";
    self.targetEducation = @"";
    self.targetMarriage = @"";
    self.targetHouse = @"";
    self.targetChild = @"";
    self.targetZodiac = @"";
    self.targetHeight = @"";
    self.targetWeight = @"";
    self.distance = @"";
    self.nickname = @"";
    self.sex = 0;
    self.age = 0;
    self.photoCnt = 0;
    self.createTime = @"";
    self.hasView = 0;
    self.viewId = @"";
  }
  return self;
}
static MMarriage* defaultMMarriageInstance = nil;
+ (void) initialize {
  if (self == [MMarriage class]) {
    defaultMMarriageInstance = [[MMarriage alloc] init];
  }
}
+ (MMarriage*) defaultInstance {
  return defaultMMarriageInstance;
}
- (MMarriage*) defaultInstance {
  return defaultMMarriageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasUserid) {
    [output writeString:2 value:self.userid];
  }
  if (self.hasImg) {
    [output writeString:3 value:self.img];
  }
  if (self.hasLetter) {
    [output writeString:4 value:self.letter];
  }
  if (self.hasWhenMarry) {
    [output writeString:5 value:self.whenMarry];
  }
  if (self.hasParent) {
    [output writeString:6 value:self.parent];
  }
  if (self.hasOnlyChild) {
    [output writeString:7 value:self.onlyChild];
  }
  if (self.hasSource) {
    [output writeString:8 value:self.source];
  }
  if (self.hasLocation) {
    [output writeString:9 value:self.location];
  }
  if (self.hasHeight) {
    [output writeString:10 value:self.height];
  }
  if (self.hasWeight) {
    [output writeString:11 value:self.weight];
  }
  if (self.hasJob) {
    [output writeString:12 value:self.job];
  }
  if (self.hasIncome) {
    [output writeString:13 value:self.income];
  }
  if (self.hasEducation) {
    [output writeString:14 value:self.education];
  }
  if (self.hasHistory) {
    [output writeString:15 value:self.history];
  }
  if (self.hasMarriageHistory) {
    [output writeString:16 value:self.marriageHistory];
  }
  if (self.hasChild) {
    [output writeString:17 value:self.child];
  }
  if (self.hasWine) {
    [output writeString:18 value:self.wine];
  }
  if (self.hasHealth) {
    [output writeString:19 value:self.health];
  }
  if (self.hasMarriageHousing) {
    [output writeString:20 value:self.marriageHousing];
  }
  if (self.hasZodiac) {
    [output writeString:21 value:self.zodiac];
  }
  if (self.hasConstellation) {
    [output writeString:22 value:self.constellation];
  }
  if (self.hasBlood) {
    [output writeString:23 value:self.blood];
  }
  if (self.hasNation) {
    [output writeString:24 value:self.nation];
  }
  if (self.hasReligion) {
    [output writeString:25 value:self.religion];
  }
  if (self.hasSchool) {
    [output writeString:26 value:self.school];
  }
  if (self.hasDriverLicense) {
    [output writeString:27 value:self.driverLicense];
  }
  if (self.hasSmoke) {
    [output writeString:28 value:self.smoke];
  }
  if (self.hasTrait) {
    [output writeString:29 value:self.trait];
  }
  if (self.hasDisease) {
    [output writeString:30 value:self.disease];
  }
  if (self.hasSport) {
    [output writeString:31 value:self.sport];
  }
  if (self.hasTravel) {
    [output writeString:32 value:self.travel];
  }
  if (self.hasHobby) {
    [output writeString:33 value:self.hobby];
  }
  if (self.hasHouseEquity) {
    [output writeString:34 value:self.houseEquity];
  }
  if (self.hasLoan) {
    [output writeString:35 value:self.loan];
  }
  if (self.hasCar) {
    [output writeString:36 value:self.car];
  }
  if (self.hasAsset) {
    [output writeString:37 value:self.asset];
  }
  if (self.hasTargetSource) {
    [output writeString:38 value:self.targetSource];
  }
  if (self.hasTargetIncome) {
    [output writeString:39 value:self.targetIncome];
  }
  if (self.hasTargetEducation) {
    [output writeString:40 value:self.targetEducation];
  }
  if (self.hasTargetMarriage) {
    [output writeString:41 value:self.targetMarriage];
  }
  if (self.hasTargetHouse) {
    [output writeString:42 value:self.targetHouse];
  }
  if (self.hasTargetChild) {
    [output writeString:43 value:self.targetChild];
  }
  if (self.hasTargetZodiac) {
    [output writeString:44 value:self.targetZodiac];
  }
  if (self.hasTargetHeight) {
    [output writeString:45 value:self.targetHeight];
  }
  if (self.hasTargetWeight) {
    [output writeString:46 value:self.targetWeight];
  }
  if (self.hasDistance) {
    [output writeString:47 value:self.distance];
  }
  if (self.hasNickname) {
    [output writeString:48 value:self.nickname];
  }
  if (self.hasSex) {
    [output writeInt32:49 value:self.sex];
  }
  if (self.hasAge) {
    [output writeInt32:50 value:self.age];
  }
  if (self.hasPhotoCnt) {
    [output writeInt32:51 value:self.photoCnt];
  }
  if (self.hasCreateTime) {
    [output writeString:52 value:self.createTime];
  }
  if (self.hasHasView) {
    [output writeInt32:53 value:self.hasView];
  }
  if (self.hasViewId) {
    [output writeString:54 value:self.viewId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasUserid) {
    size += computeStringSize(2, self.userid);
  }
  if (self.hasImg) {
    size += computeStringSize(3, self.img);
  }
  if (self.hasLetter) {
    size += computeStringSize(4, self.letter);
  }
  if (self.hasWhenMarry) {
    size += computeStringSize(5, self.whenMarry);
  }
  if (self.hasParent) {
    size += computeStringSize(6, self.parent);
  }
  if (self.hasOnlyChild) {
    size += computeStringSize(7, self.onlyChild);
  }
  if (self.hasSource) {
    size += computeStringSize(8, self.source);
  }
  if (self.hasLocation) {
    size += computeStringSize(9, self.location);
  }
  if (self.hasHeight) {
    size += computeStringSize(10, self.height);
  }
  if (self.hasWeight) {
    size += computeStringSize(11, self.weight);
  }
  if (self.hasJob) {
    size += computeStringSize(12, self.job);
  }
  if (self.hasIncome) {
    size += computeStringSize(13, self.income);
  }
  if (self.hasEducation) {
    size += computeStringSize(14, self.education);
  }
  if (self.hasHistory) {
    size += computeStringSize(15, self.history);
  }
  if (self.hasMarriageHistory) {
    size += computeStringSize(16, self.marriageHistory);
  }
  if (self.hasChild) {
    size += computeStringSize(17, self.child);
  }
  if (self.hasWine) {
    size += computeStringSize(18, self.wine);
  }
  if (self.hasHealth) {
    size += computeStringSize(19, self.health);
  }
  if (self.hasMarriageHousing) {
    size += computeStringSize(20, self.marriageHousing);
  }
  if (self.hasZodiac) {
    size += computeStringSize(21, self.zodiac);
  }
  if (self.hasConstellation) {
    size += computeStringSize(22, self.constellation);
  }
  if (self.hasBlood) {
    size += computeStringSize(23, self.blood);
  }
  if (self.hasNation) {
    size += computeStringSize(24, self.nation);
  }
  if (self.hasReligion) {
    size += computeStringSize(25, self.religion);
  }
  if (self.hasSchool) {
    size += computeStringSize(26, self.school);
  }
  if (self.hasDriverLicense) {
    size += computeStringSize(27, self.driverLicense);
  }
  if (self.hasSmoke) {
    size += computeStringSize(28, self.smoke);
  }
  if (self.hasTrait) {
    size += computeStringSize(29, self.trait);
  }
  if (self.hasDisease) {
    size += computeStringSize(30, self.disease);
  }
  if (self.hasSport) {
    size += computeStringSize(31, self.sport);
  }
  if (self.hasTravel) {
    size += computeStringSize(32, self.travel);
  }
  if (self.hasHobby) {
    size += computeStringSize(33, self.hobby);
  }
  if (self.hasHouseEquity) {
    size += computeStringSize(34, self.houseEquity);
  }
  if (self.hasLoan) {
    size += computeStringSize(35, self.loan);
  }
  if (self.hasCar) {
    size += computeStringSize(36, self.car);
  }
  if (self.hasAsset) {
    size += computeStringSize(37, self.asset);
  }
  if (self.hasTargetSource) {
    size += computeStringSize(38, self.targetSource);
  }
  if (self.hasTargetIncome) {
    size += computeStringSize(39, self.targetIncome);
  }
  if (self.hasTargetEducation) {
    size += computeStringSize(40, self.targetEducation);
  }
  if (self.hasTargetMarriage) {
    size += computeStringSize(41, self.targetMarriage);
  }
  if (self.hasTargetHouse) {
    size += computeStringSize(42, self.targetHouse);
  }
  if (self.hasTargetChild) {
    size += computeStringSize(43, self.targetChild);
  }
  if (self.hasTargetZodiac) {
    size += computeStringSize(44, self.targetZodiac);
  }
  if (self.hasTargetHeight) {
    size += computeStringSize(45, self.targetHeight);
  }
  if (self.hasTargetWeight) {
    size += computeStringSize(46, self.targetWeight);
  }
  if (self.hasDistance) {
    size += computeStringSize(47, self.distance);
  }
  if (self.hasNickname) {
    size += computeStringSize(48, self.nickname);
  }
  if (self.hasSex) {
    size += computeInt32Size(49, self.sex);
  }
  if (self.hasAge) {
    size += computeInt32Size(50, self.age);
  }
  if (self.hasPhotoCnt) {
    size += computeInt32Size(51, self.photoCnt);
  }
  if (self.hasCreateTime) {
    size += computeStringSize(52, self.createTime);
  }
  if (self.hasHasView) {
    size += computeInt32Size(53, self.hasView);
  }
  if (self.hasViewId) {
    size += computeStringSize(54, self.viewId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarriage*) parseFromData:(NSData*) data {
  return (MMarriage*)[[[MMarriage builder] mergeFromData:data] build];
}
+ (MMarriage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriage*)[[[MMarriage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarriage*) parseFromInputStream:(NSInputStream*) input {
  return (MMarriage*)[[[MMarriage builder] mergeFromInputStream:input] build];
}
+ (MMarriage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriage*)[[[MMarriage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarriage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarriage*)[[[MMarriage builder] mergeFromCodedInputStream:input] build];
}
+ (MMarriage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriage*)[[[MMarriage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarriage_Builder*) builder {
  return [[[MMarriage_Builder alloc] init] autorelease];
}
+ (MMarriage_Builder*) builderWithPrototype:(MMarriage*) prototype {
  return [[MMarriage builder] mergeFrom:prototype];
}
- (MMarriage_Builder*) builder {
  return [MMarriage builder];
}
@end

@interface MMarriage_Builder()
@property (retain) MMarriage* protobufBuilderResult;
@end

@implementation MMarriage_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarriage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarriage_Builder*) clear {
  self.protobufBuilderResult = [[[MMarriage alloc] init] autorelease];
  return self;
}
- (MMarriage_Builder*) clone {
  return [MMarriage builderWithPrototype:protobufBuilderResult];
}
- (MMarriage*) defaultInstance {
  return [MMarriage defaultInstance];
}
- (MMarriage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarriage*) buildPartial {
  MMarriage* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarriage_Builder*) mergeFrom:(MMarriage*) other {
  if (other == [MMarriage defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUserid) {
    [self setUserid:other.userid];
  }
  if (other.hasImg) {
    [self setImg:other.img];
  }
  if (other.hasLetter) {
    [self setLetter:other.letter];
  }
  if (other.hasWhenMarry) {
    [self setWhenMarry:other.whenMarry];
  }
  if (other.hasParent) {
    [self setParent:other.parent];
  }
  if (other.hasOnlyChild) {
    [self setOnlyChild:other.onlyChild];
  }
  if (other.hasSource) {
    [self setSource:other.source];
  }
  if (other.hasLocation) {
    [self setLocation:other.location];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  if (other.hasWeight) {
    [self setWeight:other.weight];
  }
  if (other.hasJob) {
    [self setJob:other.job];
  }
  if (other.hasIncome) {
    [self setIncome:other.income];
  }
  if (other.hasEducation) {
    [self setEducation:other.education];
  }
  if (other.hasHistory) {
    [self setHistory:other.history];
  }
  if (other.hasMarriageHistory) {
    [self setMarriageHistory:other.marriageHistory];
  }
  if (other.hasChild) {
    [self setChild:other.child];
  }
  if (other.hasWine) {
    [self setWine:other.wine];
  }
  if (other.hasHealth) {
    [self setHealth:other.health];
  }
  if (other.hasMarriageHousing) {
    [self setMarriageHousing:other.marriageHousing];
  }
  if (other.hasZodiac) {
    [self setZodiac:other.zodiac];
  }
  if (other.hasConstellation) {
    [self setConstellation:other.constellation];
  }
  if (other.hasBlood) {
    [self setBlood:other.blood];
  }
  if (other.hasNation) {
    [self setNation:other.nation];
  }
  if (other.hasReligion) {
    [self setReligion:other.religion];
  }
  if (other.hasSchool) {
    [self setSchool:other.school];
  }
  if (other.hasDriverLicense) {
    [self setDriverLicense:other.driverLicense];
  }
  if (other.hasSmoke) {
    [self setSmoke:other.smoke];
  }
  if (other.hasTrait) {
    [self setTrait:other.trait];
  }
  if (other.hasDisease) {
    [self setDisease:other.disease];
  }
  if (other.hasSport) {
    [self setSport:other.sport];
  }
  if (other.hasTravel) {
    [self setTravel:other.travel];
  }
  if (other.hasHobby) {
    [self setHobby:other.hobby];
  }
  if (other.hasHouseEquity) {
    [self setHouseEquity:other.houseEquity];
  }
  if (other.hasLoan) {
    [self setLoan:other.loan];
  }
  if (other.hasCar) {
    [self setCar:other.car];
  }
  if (other.hasAsset) {
    [self setAsset:other.asset];
  }
  if (other.hasTargetSource) {
    [self setTargetSource:other.targetSource];
  }
  if (other.hasTargetIncome) {
    [self setTargetIncome:other.targetIncome];
  }
  if (other.hasTargetEducation) {
    [self setTargetEducation:other.targetEducation];
  }
  if (other.hasTargetMarriage) {
    [self setTargetMarriage:other.targetMarriage];
  }
  if (other.hasTargetHouse) {
    [self setTargetHouse:other.targetHouse];
  }
  if (other.hasTargetChild) {
    [self setTargetChild:other.targetChild];
  }
  if (other.hasTargetZodiac) {
    [self setTargetZodiac:other.targetZodiac];
  }
  if (other.hasTargetHeight) {
    [self setTargetHeight:other.targetHeight];
  }
  if (other.hasTargetWeight) {
    [self setTargetWeight:other.targetWeight];
  }
  if (other.hasDistance) {
    [self setDistance:other.distance];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasSex) {
    [self setSex:other.sex];
  }
  if (other.hasAge) {
    [self setAge:other.age];
  }
  if (other.hasPhotoCnt) {
    [self setPhotoCnt:other.photoCnt];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasHasView) {
    [self setHasView:other.hasView];
  }
  if (other.hasViewId) {
    [self setViewId:other.viewId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarriage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarriage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setUserid:[input readString]];
        break;
      }
      case 26: {
        [self setImg:[input readString]];
        break;
      }
      case 34: {
        [self setLetter:[input readString]];
        break;
      }
      case 42: {
        [self setWhenMarry:[input readString]];
        break;
      }
      case 50: {
        [self setParent:[input readString]];
        break;
      }
      case 58: {
        [self setOnlyChild:[input readString]];
        break;
      }
      case 66: {
        [self setSource:[input readString]];
        break;
      }
      case 74: {
        [self setLocation:[input readString]];
        break;
      }
      case 82: {
        [self setHeight:[input readString]];
        break;
      }
      case 90: {
        [self setWeight:[input readString]];
        break;
      }
      case 98: {
        [self setJob:[input readString]];
        break;
      }
      case 106: {
        [self setIncome:[input readString]];
        break;
      }
      case 114: {
        [self setEducation:[input readString]];
        break;
      }
      case 122: {
        [self setHistory:[input readString]];
        break;
      }
      case 130: {
        [self setMarriageHistory:[input readString]];
        break;
      }
      case 138: {
        [self setChild:[input readString]];
        break;
      }
      case 146: {
        [self setWine:[input readString]];
        break;
      }
      case 154: {
        [self setHealth:[input readString]];
        break;
      }
      case 162: {
        [self setMarriageHousing:[input readString]];
        break;
      }
      case 170: {
        [self setZodiac:[input readString]];
        break;
      }
      case 178: {
        [self setConstellation:[input readString]];
        break;
      }
      case 186: {
        [self setBlood:[input readString]];
        break;
      }
      case 194: {
        [self setNation:[input readString]];
        break;
      }
      case 202: {
        [self setReligion:[input readString]];
        break;
      }
      case 210: {
        [self setSchool:[input readString]];
        break;
      }
      case 218: {
        [self setDriverLicense:[input readString]];
        break;
      }
      case 226: {
        [self setSmoke:[input readString]];
        break;
      }
      case 234: {
        [self setTrait:[input readString]];
        break;
      }
      case 242: {
        [self setDisease:[input readString]];
        break;
      }
      case 250: {
        [self setSport:[input readString]];
        break;
      }
      case 258: {
        [self setTravel:[input readString]];
        break;
      }
      case 266: {
        [self setHobby:[input readString]];
        break;
      }
      case 274: {
        [self setHouseEquity:[input readString]];
        break;
      }
      case 282: {
        [self setLoan:[input readString]];
        break;
      }
      case 290: {
        [self setCar:[input readString]];
        break;
      }
      case 298: {
        [self setAsset:[input readString]];
        break;
      }
      case 306: {
        [self setTargetSource:[input readString]];
        break;
      }
      case 314: {
        [self setTargetIncome:[input readString]];
        break;
      }
      case 322: {
        [self setTargetEducation:[input readString]];
        break;
      }
      case 330: {
        [self setTargetMarriage:[input readString]];
        break;
      }
      case 338: {
        [self setTargetHouse:[input readString]];
        break;
      }
      case 346: {
        [self setTargetChild:[input readString]];
        break;
      }
      case 354: {
        [self setTargetZodiac:[input readString]];
        break;
      }
      case 362: {
        [self setTargetHeight:[input readString]];
        break;
      }
      case 370: {
        [self setTargetWeight:[input readString]];
        break;
      }
      case 378: {
        [self setDistance:[input readString]];
        break;
      }
      case 386: {
        [self setNickname:[input readString]];
        break;
      }
      case 392: {
        [self setSex:[input readInt32]];
        break;
      }
      case 400: {
        [self setAge:[input readInt32]];
        break;
      }
      case 408: {
        [self setPhotoCnt:[input readInt32]];
        break;
      }
      case 418: {
        [self setCreateTime:[input readString]];
        break;
      }
      case 424: {
        [self setHasView:[input readInt32]];
        break;
      }
      case 434: {
        [self setViewId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MMarriage_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MMarriage_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasUserid {
  return protobufBuilderResult.hasUserid;
}
- (NSString*) userid {
  return protobufBuilderResult.userid;
}
- (MMarriage_Builder*) setUserid:(NSString*) _value {
  protobufBuilderResult.hasUserid = YES;
  protobufBuilderResult.userid = _value;
  return self;
}
- (MMarriage_Builder*) clearUserid {
  protobufBuilderResult.hasUserid = NO;
  protobufBuilderResult.userid = @"";
  return self;
}
- (BOOL) hasImg {
  return protobufBuilderResult.hasImg;
}
- (NSString*) img {
  return protobufBuilderResult.img;
}
- (MMarriage_Builder*) setImg:(NSString*) _value {
  protobufBuilderResult.hasImg = YES;
  protobufBuilderResult.img = _value;
  return self;
}
- (MMarriage_Builder*) clearImg {
  protobufBuilderResult.hasImg = NO;
  protobufBuilderResult.img = @"";
  return self;
}
- (BOOL) hasLetter {
  return protobufBuilderResult.hasLetter;
}
- (NSString*) letter {
  return protobufBuilderResult.letter;
}
- (MMarriage_Builder*) setLetter:(NSString*) _value {
  protobufBuilderResult.hasLetter = YES;
  protobufBuilderResult.letter = _value;
  return self;
}
- (MMarriage_Builder*) clearLetter {
  protobufBuilderResult.hasLetter = NO;
  protobufBuilderResult.letter = @"";
  return self;
}
- (BOOL) hasWhenMarry {
  return protobufBuilderResult.hasWhenMarry;
}
- (NSString*) whenMarry {
  return protobufBuilderResult.whenMarry;
}
- (MMarriage_Builder*) setWhenMarry:(NSString*) _value {
  protobufBuilderResult.hasWhenMarry = YES;
  protobufBuilderResult.whenMarry = _value;
  return self;
}
- (MMarriage_Builder*) clearWhenMarry {
  protobufBuilderResult.hasWhenMarry = NO;
  protobufBuilderResult.whenMarry = @"";
  return self;
}
- (BOOL) hasParent {
  return protobufBuilderResult.hasParent;
}
- (NSString*) parent {
  return protobufBuilderResult.parent;
}
- (MMarriage_Builder*) setParent:(NSString*) _value {
  protobufBuilderResult.hasParent = YES;
  protobufBuilderResult.parent = _value;
  return self;
}
- (MMarriage_Builder*) clearParent {
  protobufBuilderResult.hasParent = NO;
  protobufBuilderResult.parent = @"";
  return self;
}
- (BOOL) hasOnlyChild {
  return protobufBuilderResult.hasOnlyChild;
}
- (NSString*) onlyChild {
  return protobufBuilderResult.onlyChild;
}
- (MMarriage_Builder*) setOnlyChild:(NSString*) _value {
  protobufBuilderResult.hasOnlyChild = YES;
  protobufBuilderResult.onlyChild = _value;
  return self;
}
- (MMarriage_Builder*) clearOnlyChild {
  protobufBuilderResult.hasOnlyChild = NO;
  protobufBuilderResult.onlyChild = @"";
  return self;
}
- (BOOL) hasSource {
  return protobufBuilderResult.hasSource;
}
- (NSString*) source {
  return protobufBuilderResult.source;
}
- (MMarriage_Builder*) setSource:(NSString*) _value {
  protobufBuilderResult.hasSource = YES;
  protobufBuilderResult.source = _value;
  return self;
}
- (MMarriage_Builder*) clearSource {
  protobufBuilderResult.hasSource = NO;
  protobufBuilderResult.source = @"";
  return self;
}
- (BOOL) hasLocation {
  return protobufBuilderResult.hasLocation;
}
- (NSString*) location {
  return protobufBuilderResult.location;
}
- (MMarriage_Builder*) setLocation:(NSString*) _value {
  protobufBuilderResult.hasLocation = YES;
  protobufBuilderResult.location = _value;
  return self;
}
- (MMarriage_Builder*) clearLocation {
  protobufBuilderResult.hasLocation = NO;
  protobufBuilderResult.location = @"";
  return self;
}
- (BOOL) hasHeight {
  return protobufBuilderResult.hasHeight;
}
- (NSString*) height {
  return protobufBuilderResult.height;
}
- (MMarriage_Builder*) setHeight:(NSString*) _value {
  protobufBuilderResult.hasHeight = YES;
  protobufBuilderResult.height = _value;
  return self;
}
- (MMarriage_Builder*) clearHeight {
  protobufBuilderResult.hasHeight = NO;
  protobufBuilderResult.height = @"";
  return self;
}
- (BOOL) hasWeight {
  return protobufBuilderResult.hasWeight;
}
- (NSString*) weight {
  return protobufBuilderResult.weight;
}
- (MMarriage_Builder*) setWeight:(NSString*) _value {
  protobufBuilderResult.hasWeight = YES;
  protobufBuilderResult.weight = _value;
  return self;
}
- (MMarriage_Builder*) clearWeight {
  protobufBuilderResult.hasWeight = NO;
  protobufBuilderResult.weight = @"";
  return self;
}
- (BOOL) hasJob {
  return protobufBuilderResult.hasJob;
}
- (NSString*) job {
  return protobufBuilderResult.job;
}
- (MMarriage_Builder*) setJob:(NSString*) _value {
  protobufBuilderResult.hasJob = YES;
  protobufBuilderResult.job = _value;
  return self;
}
- (MMarriage_Builder*) clearJob {
  protobufBuilderResult.hasJob = NO;
  protobufBuilderResult.job = @"";
  return self;
}
- (BOOL) hasIncome {
  return protobufBuilderResult.hasIncome;
}
- (NSString*) income {
  return protobufBuilderResult.income;
}
- (MMarriage_Builder*) setIncome:(NSString*) _value {
  protobufBuilderResult.hasIncome = YES;
  protobufBuilderResult.income = _value;
  return self;
}
- (MMarriage_Builder*) clearIncome {
  protobufBuilderResult.hasIncome = NO;
  protobufBuilderResult.income = @"";
  return self;
}
- (BOOL) hasEducation {
  return protobufBuilderResult.hasEducation;
}
- (NSString*) education {
  return protobufBuilderResult.education;
}
- (MMarriage_Builder*) setEducation:(NSString*) _value {
  protobufBuilderResult.hasEducation = YES;
  protobufBuilderResult.education = _value;
  return self;
}
- (MMarriage_Builder*) clearEducation {
  protobufBuilderResult.hasEducation = NO;
  protobufBuilderResult.education = @"";
  return self;
}
- (BOOL) hasHistory {
  return protobufBuilderResult.hasHistory;
}
- (NSString*) history {
  return protobufBuilderResult.history;
}
- (MMarriage_Builder*) setHistory:(NSString*) _value {
  protobufBuilderResult.hasHistory = YES;
  protobufBuilderResult.history = _value;
  return self;
}
- (MMarriage_Builder*) clearHistory {
  protobufBuilderResult.hasHistory = NO;
  protobufBuilderResult.history = @"";
  return self;
}
- (BOOL) hasMarriageHistory {
  return protobufBuilderResult.hasMarriageHistory;
}
- (NSString*) marriageHistory {
  return protobufBuilderResult.marriageHistory;
}
- (MMarriage_Builder*) setMarriageHistory:(NSString*) _value {
  protobufBuilderResult.hasMarriageHistory = YES;
  protobufBuilderResult.marriageHistory = _value;
  return self;
}
- (MMarriage_Builder*) clearMarriageHistory {
  protobufBuilderResult.hasMarriageHistory = NO;
  protobufBuilderResult.marriageHistory = @"";
  return self;
}
- (BOOL) hasChild {
  return protobufBuilderResult.hasChild;
}
- (NSString*) child {
  return protobufBuilderResult.child;
}
- (MMarriage_Builder*) setChild:(NSString*) _value {
  protobufBuilderResult.hasChild = YES;
  protobufBuilderResult.child = _value;
  return self;
}
- (MMarriage_Builder*) clearChild {
  protobufBuilderResult.hasChild = NO;
  protobufBuilderResult.child = @"";
  return self;
}
- (BOOL) hasWine {
  return protobufBuilderResult.hasWine;
}
- (NSString*) wine {
  return protobufBuilderResult.wine;
}
- (MMarriage_Builder*) setWine:(NSString*) _value {
  protobufBuilderResult.hasWine = YES;
  protobufBuilderResult.wine = _value;
  return self;
}
- (MMarriage_Builder*) clearWine {
  protobufBuilderResult.hasWine = NO;
  protobufBuilderResult.wine = @"";
  return self;
}
- (BOOL) hasHealth {
  return protobufBuilderResult.hasHealth;
}
- (NSString*) health {
  return protobufBuilderResult.health;
}
- (MMarriage_Builder*) setHealth:(NSString*) _value {
  protobufBuilderResult.hasHealth = YES;
  protobufBuilderResult.health = _value;
  return self;
}
- (MMarriage_Builder*) clearHealth {
  protobufBuilderResult.hasHealth = NO;
  protobufBuilderResult.health = @"";
  return self;
}
- (BOOL) hasMarriageHousing {
  return protobufBuilderResult.hasMarriageHousing;
}
- (NSString*) marriageHousing {
  return protobufBuilderResult.marriageHousing;
}
- (MMarriage_Builder*) setMarriageHousing:(NSString*) _value {
  protobufBuilderResult.hasMarriageHousing = YES;
  protobufBuilderResult.marriageHousing = _value;
  return self;
}
- (MMarriage_Builder*) clearMarriageHousing {
  protobufBuilderResult.hasMarriageHousing = NO;
  protobufBuilderResult.marriageHousing = @"";
  return self;
}
- (BOOL) hasZodiac {
  return protobufBuilderResult.hasZodiac;
}
- (NSString*) zodiac {
  return protobufBuilderResult.zodiac;
}
- (MMarriage_Builder*) setZodiac:(NSString*) _value {
  protobufBuilderResult.hasZodiac = YES;
  protobufBuilderResult.zodiac = _value;
  return self;
}
- (MMarriage_Builder*) clearZodiac {
  protobufBuilderResult.hasZodiac = NO;
  protobufBuilderResult.zodiac = @"";
  return self;
}
- (BOOL) hasConstellation {
  return protobufBuilderResult.hasConstellation;
}
- (NSString*) constellation {
  return protobufBuilderResult.constellation;
}
- (MMarriage_Builder*) setConstellation:(NSString*) _value {
  protobufBuilderResult.hasConstellation = YES;
  protobufBuilderResult.constellation = _value;
  return self;
}
- (MMarriage_Builder*) clearConstellation {
  protobufBuilderResult.hasConstellation = NO;
  protobufBuilderResult.constellation = @"";
  return self;
}
- (BOOL) hasBlood {
  return protobufBuilderResult.hasBlood;
}
- (NSString*) blood {
  return protobufBuilderResult.blood;
}
- (MMarriage_Builder*) setBlood:(NSString*) _value {
  protobufBuilderResult.hasBlood = YES;
  protobufBuilderResult.blood = _value;
  return self;
}
- (MMarriage_Builder*) clearBlood {
  protobufBuilderResult.hasBlood = NO;
  protobufBuilderResult.blood = @"";
  return self;
}
- (BOOL) hasNation {
  return protobufBuilderResult.hasNation;
}
- (NSString*) nation {
  return protobufBuilderResult.nation;
}
- (MMarriage_Builder*) setNation:(NSString*) _value {
  protobufBuilderResult.hasNation = YES;
  protobufBuilderResult.nation = _value;
  return self;
}
- (MMarriage_Builder*) clearNation {
  protobufBuilderResult.hasNation = NO;
  protobufBuilderResult.nation = @"";
  return self;
}
- (BOOL) hasReligion {
  return protobufBuilderResult.hasReligion;
}
- (NSString*) religion {
  return protobufBuilderResult.religion;
}
- (MMarriage_Builder*) setReligion:(NSString*) _value {
  protobufBuilderResult.hasReligion = YES;
  protobufBuilderResult.religion = _value;
  return self;
}
- (MMarriage_Builder*) clearReligion {
  protobufBuilderResult.hasReligion = NO;
  protobufBuilderResult.religion = @"";
  return self;
}
- (BOOL) hasSchool {
  return protobufBuilderResult.hasSchool;
}
- (NSString*) school {
  return protobufBuilderResult.school;
}
- (MMarriage_Builder*) setSchool:(NSString*) _value {
  protobufBuilderResult.hasSchool = YES;
  protobufBuilderResult.school = _value;
  return self;
}
- (MMarriage_Builder*) clearSchool {
  protobufBuilderResult.hasSchool = NO;
  protobufBuilderResult.school = @"";
  return self;
}
- (BOOL) hasDriverLicense {
  return protobufBuilderResult.hasDriverLicense;
}
- (NSString*) driverLicense {
  return protobufBuilderResult.driverLicense;
}
- (MMarriage_Builder*) setDriverLicense:(NSString*) _value {
  protobufBuilderResult.hasDriverLicense = YES;
  protobufBuilderResult.driverLicense = _value;
  return self;
}
- (MMarriage_Builder*) clearDriverLicense {
  protobufBuilderResult.hasDriverLicense = NO;
  protobufBuilderResult.driverLicense = @"";
  return self;
}
- (BOOL) hasSmoke {
  return protobufBuilderResult.hasSmoke;
}
- (NSString*) smoke {
  return protobufBuilderResult.smoke;
}
- (MMarriage_Builder*) setSmoke:(NSString*) _value {
  protobufBuilderResult.hasSmoke = YES;
  protobufBuilderResult.smoke = _value;
  return self;
}
- (MMarriage_Builder*) clearSmoke {
  protobufBuilderResult.hasSmoke = NO;
  protobufBuilderResult.smoke = @"";
  return self;
}
- (BOOL) hasTrait {
  return protobufBuilderResult.hasTrait;
}
- (NSString*) trait {
  return protobufBuilderResult.trait;
}
- (MMarriage_Builder*) setTrait:(NSString*) _value {
  protobufBuilderResult.hasTrait = YES;
  protobufBuilderResult.trait = _value;
  return self;
}
- (MMarriage_Builder*) clearTrait {
  protobufBuilderResult.hasTrait = NO;
  protobufBuilderResult.trait = @"";
  return self;
}
- (BOOL) hasDisease {
  return protobufBuilderResult.hasDisease;
}
- (NSString*) disease {
  return protobufBuilderResult.disease;
}
- (MMarriage_Builder*) setDisease:(NSString*) _value {
  protobufBuilderResult.hasDisease = YES;
  protobufBuilderResult.disease = _value;
  return self;
}
- (MMarriage_Builder*) clearDisease {
  protobufBuilderResult.hasDisease = NO;
  protobufBuilderResult.disease = @"";
  return self;
}
- (BOOL) hasSport {
  return protobufBuilderResult.hasSport;
}
- (NSString*) sport {
  return protobufBuilderResult.sport;
}
- (MMarriage_Builder*) setSport:(NSString*) _value {
  protobufBuilderResult.hasSport = YES;
  protobufBuilderResult.sport = _value;
  return self;
}
- (MMarriage_Builder*) clearSport {
  protobufBuilderResult.hasSport = NO;
  protobufBuilderResult.sport = @"";
  return self;
}
- (BOOL) hasTravel {
  return protobufBuilderResult.hasTravel;
}
- (NSString*) travel {
  return protobufBuilderResult.travel;
}
- (MMarriage_Builder*) setTravel:(NSString*) _value {
  protobufBuilderResult.hasTravel = YES;
  protobufBuilderResult.travel = _value;
  return self;
}
- (MMarriage_Builder*) clearTravel {
  protobufBuilderResult.hasTravel = NO;
  protobufBuilderResult.travel = @"";
  return self;
}
- (BOOL) hasHobby {
  return protobufBuilderResult.hasHobby;
}
- (NSString*) hobby {
  return protobufBuilderResult.hobby;
}
- (MMarriage_Builder*) setHobby:(NSString*) _value {
  protobufBuilderResult.hasHobby = YES;
  protobufBuilderResult.hobby = _value;
  return self;
}
- (MMarriage_Builder*) clearHobby {
  protobufBuilderResult.hasHobby = NO;
  protobufBuilderResult.hobby = @"";
  return self;
}
- (BOOL) hasHouseEquity {
  return protobufBuilderResult.hasHouseEquity;
}
- (NSString*) houseEquity {
  return protobufBuilderResult.houseEquity;
}
- (MMarriage_Builder*) setHouseEquity:(NSString*) _value {
  protobufBuilderResult.hasHouseEquity = YES;
  protobufBuilderResult.houseEquity = _value;
  return self;
}
- (MMarriage_Builder*) clearHouseEquity {
  protobufBuilderResult.hasHouseEquity = NO;
  protobufBuilderResult.houseEquity = @"";
  return self;
}
- (BOOL) hasLoan {
  return protobufBuilderResult.hasLoan;
}
- (NSString*) loan {
  return protobufBuilderResult.loan;
}
- (MMarriage_Builder*) setLoan:(NSString*) _value {
  protobufBuilderResult.hasLoan = YES;
  protobufBuilderResult.loan = _value;
  return self;
}
- (MMarriage_Builder*) clearLoan {
  protobufBuilderResult.hasLoan = NO;
  protobufBuilderResult.loan = @"";
  return self;
}
- (BOOL) hasCar {
  return protobufBuilderResult.hasCar;
}
- (NSString*) car {
  return protobufBuilderResult.car;
}
- (MMarriage_Builder*) setCar:(NSString*) _value {
  protobufBuilderResult.hasCar = YES;
  protobufBuilderResult.car = _value;
  return self;
}
- (MMarriage_Builder*) clearCar {
  protobufBuilderResult.hasCar = NO;
  protobufBuilderResult.car = @"";
  return self;
}
- (BOOL) hasAsset {
  return protobufBuilderResult.hasAsset;
}
- (NSString*) asset {
  return protobufBuilderResult.asset;
}
- (MMarriage_Builder*) setAsset:(NSString*) _value {
  protobufBuilderResult.hasAsset = YES;
  protobufBuilderResult.asset = _value;
  return self;
}
- (MMarriage_Builder*) clearAsset {
  protobufBuilderResult.hasAsset = NO;
  protobufBuilderResult.asset = @"";
  return self;
}
- (BOOL) hasTargetSource {
  return protobufBuilderResult.hasTargetSource;
}
- (NSString*) targetSource {
  return protobufBuilderResult.targetSource;
}
- (MMarriage_Builder*) setTargetSource:(NSString*) _value {
  protobufBuilderResult.hasTargetSource = YES;
  protobufBuilderResult.targetSource = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetSource {
  protobufBuilderResult.hasTargetSource = NO;
  protobufBuilderResult.targetSource = @"";
  return self;
}
- (BOOL) hasTargetIncome {
  return protobufBuilderResult.hasTargetIncome;
}
- (NSString*) targetIncome {
  return protobufBuilderResult.targetIncome;
}
- (MMarriage_Builder*) setTargetIncome:(NSString*) _value {
  protobufBuilderResult.hasTargetIncome = YES;
  protobufBuilderResult.targetIncome = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetIncome {
  protobufBuilderResult.hasTargetIncome = NO;
  protobufBuilderResult.targetIncome = @"";
  return self;
}
- (BOOL) hasTargetEducation {
  return protobufBuilderResult.hasTargetEducation;
}
- (NSString*) targetEducation {
  return protobufBuilderResult.targetEducation;
}
- (MMarriage_Builder*) setTargetEducation:(NSString*) _value {
  protobufBuilderResult.hasTargetEducation = YES;
  protobufBuilderResult.targetEducation = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetEducation {
  protobufBuilderResult.hasTargetEducation = NO;
  protobufBuilderResult.targetEducation = @"";
  return self;
}
- (BOOL) hasTargetMarriage {
  return protobufBuilderResult.hasTargetMarriage;
}
- (NSString*) targetMarriage {
  return protobufBuilderResult.targetMarriage;
}
- (MMarriage_Builder*) setTargetMarriage:(NSString*) _value {
  protobufBuilderResult.hasTargetMarriage = YES;
  protobufBuilderResult.targetMarriage = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetMarriage {
  protobufBuilderResult.hasTargetMarriage = NO;
  protobufBuilderResult.targetMarriage = @"";
  return self;
}
- (BOOL) hasTargetHouse {
  return protobufBuilderResult.hasTargetHouse;
}
- (NSString*) targetHouse {
  return protobufBuilderResult.targetHouse;
}
- (MMarriage_Builder*) setTargetHouse:(NSString*) _value {
  protobufBuilderResult.hasTargetHouse = YES;
  protobufBuilderResult.targetHouse = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetHouse {
  protobufBuilderResult.hasTargetHouse = NO;
  protobufBuilderResult.targetHouse = @"";
  return self;
}
- (BOOL) hasTargetChild {
  return protobufBuilderResult.hasTargetChild;
}
- (NSString*) targetChild {
  return protobufBuilderResult.targetChild;
}
- (MMarriage_Builder*) setTargetChild:(NSString*) _value {
  protobufBuilderResult.hasTargetChild = YES;
  protobufBuilderResult.targetChild = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetChild {
  protobufBuilderResult.hasTargetChild = NO;
  protobufBuilderResult.targetChild = @"";
  return self;
}
- (BOOL) hasTargetZodiac {
  return protobufBuilderResult.hasTargetZodiac;
}
- (NSString*) targetZodiac {
  return protobufBuilderResult.targetZodiac;
}
- (MMarriage_Builder*) setTargetZodiac:(NSString*) _value {
  protobufBuilderResult.hasTargetZodiac = YES;
  protobufBuilderResult.targetZodiac = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetZodiac {
  protobufBuilderResult.hasTargetZodiac = NO;
  protobufBuilderResult.targetZodiac = @"";
  return self;
}
- (BOOL) hasTargetHeight {
  return protobufBuilderResult.hasTargetHeight;
}
- (NSString*) targetHeight {
  return protobufBuilderResult.targetHeight;
}
- (MMarriage_Builder*) setTargetHeight:(NSString*) _value {
  protobufBuilderResult.hasTargetHeight = YES;
  protobufBuilderResult.targetHeight = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetHeight {
  protobufBuilderResult.hasTargetHeight = NO;
  protobufBuilderResult.targetHeight = @"";
  return self;
}
- (BOOL) hasTargetWeight {
  return protobufBuilderResult.hasTargetWeight;
}
- (NSString*) targetWeight {
  return protobufBuilderResult.targetWeight;
}
- (MMarriage_Builder*) setTargetWeight:(NSString*) _value {
  protobufBuilderResult.hasTargetWeight = YES;
  protobufBuilderResult.targetWeight = _value;
  return self;
}
- (MMarriage_Builder*) clearTargetWeight {
  protobufBuilderResult.hasTargetWeight = NO;
  protobufBuilderResult.targetWeight = @"";
  return self;
}
- (BOOL) hasDistance {
  return protobufBuilderResult.hasDistance;
}
- (NSString*) distance {
  return protobufBuilderResult.distance;
}
- (MMarriage_Builder*) setDistance:(NSString*) _value {
  protobufBuilderResult.hasDistance = YES;
  protobufBuilderResult.distance = _value;
  return self;
}
- (MMarriage_Builder*) clearDistance {
  protobufBuilderResult.hasDistance = NO;
  protobufBuilderResult.distance = @"";
  return self;
}
- (BOOL) hasNickname {
  return protobufBuilderResult.hasNickname;
}
- (NSString*) nickname {
  return protobufBuilderResult.nickname;
}
- (MMarriage_Builder*) setNickname:(NSString*) _value {
  protobufBuilderResult.hasNickname = YES;
  protobufBuilderResult.nickname = _value;
  return self;
}
- (MMarriage_Builder*) clearNickname {
  protobufBuilderResult.hasNickname = NO;
  protobufBuilderResult.nickname = @"";
  return self;
}
- (BOOL) hasSex {
  return protobufBuilderResult.hasSex;
}
- (int32_t) sex {
  return protobufBuilderResult.sex;
}
- (MMarriage_Builder*) setSex:(int32_t) _value {
  protobufBuilderResult.hasSex = YES;
  protobufBuilderResult.sex = _value;
  return self;
}
- (MMarriage_Builder*) clearSex {
  protobufBuilderResult.hasSex = NO;
  protobufBuilderResult.sex = 0;
  return self;
}
- (BOOL) hasAge {
  return protobufBuilderResult.hasAge;
}
- (int32_t) age {
  return protobufBuilderResult.age;
}
- (MMarriage_Builder*) setAge:(int32_t) _value {
  protobufBuilderResult.hasAge = YES;
  protobufBuilderResult.age = _value;
  return self;
}
- (MMarriage_Builder*) clearAge {
  protobufBuilderResult.hasAge = NO;
  protobufBuilderResult.age = 0;
  return self;
}
- (BOOL) hasPhotoCnt {
  return protobufBuilderResult.hasPhotoCnt;
}
- (int32_t) photoCnt {
  return protobufBuilderResult.photoCnt;
}
- (MMarriage_Builder*) setPhotoCnt:(int32_t) _value {
  protobufBuilderResult.hasPhotoCnt = YES;
  protobufBuilderResult.photoCnt = _value;
  return self;
}
- (MMarriage_Builder*) clearPhotoCnt {
  protobufBuilderResult.hasPhotoCnt = NO;
  protobufBuilderResult.photoCnt = 0;
  return self;
}
- (BOOL) hasCreateTime {
  return protobufBuilderResult.hasCreateTime;
}
- (NSString*) createTime {
  return protobufBuilderResult.createTime;
}
- (MMarriage_Builder*) setCreateTime:(NSString*) _value {
  protobufBuilderResult.hasCreateTime = YES;
  protobufBuilderResult.createTime = _value;
  return self;
}
- (MMarriage_Builder*) clearCreateTime {
  protobufBuilderResult.hasCreateTime = NO;
  protobufBuilderResult.createTime = @"";
  return self;
}
- (BOOL) hasHasView {
  return protobufBuilderResult.hasHasView;
}
- (int32_t) hasView {
  return protobufBuilderResult.hasView;
}
- (MMarriage_Builder*) setHasView:(int32_t) _value {
  protobufBuilderResult.hasHasView = YES;
  protobufBuilderResult.hasView = _value;
  return self;
}
- (MMarriage_Builder*) clearHasView {
  protobufBuilderResult.hasHasView = NO;
  protobufBuilderResult.hasView = 0;
  return self;
}
- (BOOL) hasViewId {
  return protobufBuilderResult.hasViewId;
}
- (NSString*) viewId {
  return protobufBuilderResult.viewId;
}
- (MMarriage_Builder*) setViewId:(NSString*) _value {
  protobufBuilderResult.hasViewId = YES;
  protobufBuilderResult.viewId = _value;
  return self;
}
- (MMarriage_Builder*) clearViewId {
  protobufBuilderResult.hasViewId = NO;
  protobufBuilderResult.viewId = @"";
  return self;
}
@end

@interface MMarriageMini ()
@property (retain) NSString* id;
@property (retain) NSString* userid;
@property (retain) NSString* userImg;
@property (retain) NSString* nickname;
@property int32_t sex;
@property int32_t age;
@property (retain) NSString* height;
@property (retain) NSString* weight;
@property (retain) NSString* job;
@property (retain) NSString* letter;
@property (retain) NSString* img;
@property (retain) NSString* createTimeShow;
@property (retain) NSString* createTimeQuery;
@property (retain) NSString* distanceShow;
@property (retain) NSString* distanceQuery;
@property int32_t userCnt;
@property (retain) NSString* status;
@end

@implementation MMarriageMini

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasUserid {
  return !!hasUserid_;
}
- (void) setHasUserid:(BOOL) _value {
  hasUserid_ = !!_value;
}
@synthesize userid;
- (BOOL) hasUserImg {
  return !!hasUserImg_;
}
- (void) setHasUserImg:(BOOL) _value {
  hasUserImg_ = !!_value;
}
@synthesize userImg;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value {
  hasNickname_ = !!_value;
}
@synthesize nickname;
- (BOOL) hasSex {
  return !!hasSex_;
}
- (void) setHasSex:(BOOL) _value {
  hasSex_ = !!_value;
}
@synthesize sex;
- (BOOL) hasAge {
  return !!hasAge_;
}
- (void) setHasAge:(BOOL) _value {
  hasAge_ = !!_value;
}
@synthesize age;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) _value {
  hasHeight_ = !!_value;
}
@synthesize height;
- (BOOL) hasWeight {
  return !!hasWeight_;
}
- (void) setHasWeight:(BOOL) _value {
  hasWeight_ = !!_value;
}
@synthesize weight;
- (BOOL) hasJob {
  return !!hasJob_;
}
- (void) setHasJob:(BOOL) _value {
  hasJob_ = !!_value;
}
@synthesize job;
- (BOOL) hasLetter {
  return !!hasLetter_;
}
- (void) setHasLetter:(BOOL) _value {
  hasLetter_ = !!_value;
}
@synthesize letter;
- (BOOL) hasImg {
  return !!hasImg_;
}
- (void) setHasImg:(BOOL) _value {
  hasImg_ = !!_value;
}
@synthesize img;
- (BOOL) hasCreateTimeShow {
  return !!hasCreateTimeShow_;
}
- (void) setHasCreateTimeShow:(BOOL) _value {
  hasCreateTimeShow_ = !!_value;
}
@synthesize createTimeShow;
- (BOOL) hasCreateTimeQuery {
  return !!hasCreateTimeQuery_;
}
- (void) setHasCreateTimeQuery:(BOOL) _value {
  hasCreateTimeQuery_ = !!_value;
}
@synthesize createTimeQuery;
- (BOOL) hasDistanceShow {
  return !!hasDistanceShow_;
}
- (void) setHasDistanceShow:(BOOL) _value {
  hasDistanceShow_ = !!_value;
}
@synthesize distanceShow;
- (BOOL) hasDistanceQuery {
  return !!hasDistanceQuery_;
}
- (void) setHasDistanceQuery:(BOOL) _value {
  hasDistanceQuery_ = !!_value;
}
@synthesize distanceQuery;
- (BOOL) hasUserCnt {
  return !!hasUserCnt_;
}
- (void) setHasUserCnt:(BOOL) _value {
  hasUserCnt_ = !!_value;
}
@synthesize userCnt;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value {
  hasStatus_ = !!_value;
}
@synthesize status;
- (void) dealloc {
  self.id = nil;
  self.userid = nil;
  self.userImg = nil;
  self.nickname = nil;
  self.height = nil;
  self.weight = nil;
  self.job = nil;
  self.letter = nil;
  self.img = nil;
  self.createTimeShow = nil;
  self.createTimeQuery = nil;
  self.distanceShow = nil;
  self.distanceQuery = nil;
  self.status = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.userid = @"";
    self.userImg = @"";
    self.nickname = @"";
    self.sex = 0;
    self.age = 0;
    self.height = @"";
    self.weight = @"";
    self.job = @"";
    self.letter = @"";
    self.img = @"";
    self.createTimeShow = @"";
    self.createTimeQuery = @"";
    self.distanceShow = @"";
    self.distanceQuery = @"";
    self.userCnt = 0;
    self.status = @"";
  }
  return self;
}
static MMarriageMini* defaultMMarriageMiniInstance = nil;
+ (void) initialize {
  if (self == [MMarriageMini class]) {
    defaultMMarriageMiniInstance = [[MMarriageMini alloc] init];
  }
}
+ (MMarriageMini*) defaultInstance {
  return defaultMMarriageMiniInstance;
}
- (MMarriageMini*) defaultInstance {
  return defaultMMarriageMiniInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasUserid) {
    [output writeString:2 value:self.userid];
  }
  if (self.hasUserImg) {
    [output writeString:3 value:self.userImg];
  }
  if (self.hasNickname) {
    [output writeString:4 value:self.nickname];
  }
  if (self.hasSex) {
    [output writeInt32:5 value:self.sex];
  }
  if (self.hasAge) {
    [output writeInt32:6 value:self.age];
  }
  if (self.hasHeight) {
    [output writeString:7 value:self.height];
  }
  if (self.hasWeight) {
    [output writeString:8 value:self.weight];
  }
  if (self.hasJob) {
    [output writeString:9 value:self.job];
  }
  if (self.hasLetter) {
    [output writeString:10 value:self.letter];
  }
  if (self.hasImg) {
    [output writeString:11 value:self.img];
  }
  if (self.hasCreateTimeShow) {
    [output writeString:12 value:self.createTimeShow];
  }
  if (self.hasCreateTimeQuery) {
    [output writeString:13 value:self.createTimeQuery];
  }
  if (self.hasDistanceShow) {
    [output writeString:14 value:self.distanceShow];
  }
  if (self.hasDistanceQuery) {
    [output writeString:15 value:self.distanceQuery];
  }
  if (self.hasUserCnt) {
    [output writeInt32:16 value:self.userCnt];
  }
  if (self.hasStatus) {
    [output writeString:17 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasUserid) {
    size += computeStringSize(2, self.userid);
  }
  if (self.hasUserImg) {
    size += computeStringSize(3, self.userImg);
  }
  if (self.hasNickname) {
    size += computeStringSize(4, self.nickname);
  }
  if (self.hasSex) {
    size += computeInt32Size(5, self.sex);
  }
  if (self.hasAge) {
    size += computeInt32Size(6, self.age);
  }
  if (self.hasHeight) {
    size += computeStringSize(7, self.height);
  }
  if (self.hasWeight) {
    size += computeStringSize(8, self.weight);
  }
  if (self.hasJob) {
    size += computeStringSize(9, self.job);
  }
  if (self.hasLetter) {
    size += computeStringSize(10, self.letter);
  }
  if (self.hasImg) {
    size += computeStringSize(11, self.img);
  }
  if (self.hasCreateTimeShow) {
    size += computeStringSize(12, self.createTimeShow);
  }
  if (self.hasCreateTimeQuery) {
    size += computeStringSize(13, self.createTimeQuery);
  }
  if (self.hasDistanceShow) {
    size += computeStringSize(14, self.distanceShow);
  }
  if (self.hasDistanceQuery) {
    size += computeStringSize(15, self.distanceQuery);
  }
  if (self.hasUserCnt) {
    size += computeInt32Size(16, self.userCnt);
  }
  if (self.hasStatus) {
    size += computeStringSize(17, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarriageMini*) parseFromData:(NSData*) data {
  return (MMarriageMini*)[[[MMarriageMini builder] mergeFromData:data] build];
}
+ (MMarriageMini*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriageMini*)[[[MMarriageMini builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarriageMini*) parseFromInputStream:(NSInputStream*) input {
  return (MMarriageMini*)[[[MMarriageMini builder] mergeFromInputStream:input] build];
}
+ (MMarriageMini*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriageMini*)[[[MMarriageMini builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarriageMini*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarriageMini*)[[[MMarriageMini builder] mergeFromCodedInputStream:input] build];
}
+ (MMarriageMini*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriageMini*)[[[MMarriageMini builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarriageMini_Builder*) builder {
  return [[[MMarriageMini_Builder alloc] init] autorelease];
}
+ (MMarriageMini_Builder*) builderWithPrototype:(MMarriageMini*) prototype {
  return [[MMarriageMini builder] mergeFrom:prototype];
}
- (MMarriageMini_Builder*) builder {
  return [MMarriageMini builder];
}
@end

@interface MMarriageMini_Builder()
@property (retain) MMarriageMini* protobufBuilderResult;
@end

@implementation MMarriageMini_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarriageMini alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarriageMini_Builder*) clear {
  self.protobufBuilderResult = [[[MMarriageMini alloc] init] autorelease];
  return self;
}
- (MMarriageMini_Builder*) clone {
  return [MMarriageMini builderWithPrototype:protobufBuilderResult];
}
- (MMarriageMini*) defaultInstance {
  return [MMarriageMini defaultInstance];
}
- (MMarriageMini*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarriageMini*) buildPartial {
  MMarriageMini* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarriageMini_Builder*) mergeFrom:(MMarriageMini*) other {
  if (other == [MMarriageMini defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUserid) {
    [self setUserid:other.userid];
  }
  if (other.hasUserImg) {
    [self setUserImg:other.userImg];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasSex) {
    [self setSex:other.sex];
  }
  if (other.hasAge) {
    [self setAge:other.age];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  if (other.hasWeight) {
    [self setWeight:other.weight];
  }
  if (other.hasJob) {
    [self setJob:other.job];
  }
  if (other.hasLetter) {
    [self setLetter:other.letter];
  }
  if (other.hasImg) {
    [self setImg:other.img];
  }
  if (other.hasCreateTimeShow) {
    [self setCreateTimeShow:other.createTimeShow];
  }
  if (other.hasCreateTimeQuery) {
    [self setCreateTimeQuery:other.createTimeQuery];
  }
  if (other.hasDistanceShow) {
    [self setDistanceShow:other.distanceShow];
  }
  if (other.hasDistanceQuery) {
    [self setDistanceQuery:other.distanceQuery];
  }
  if (other.hasUserCnt) {
    [self setUserCnt:other.userCnt];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarriageMini_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarriageMini_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setUserid:[input readString]];
        break;
      }
      case 26: {
        [self setUserImg:[input readString]];
        break;
      }
      case 34: {
        [self setNickname:[input readString]];
        break;
      }
      case 40: {
        [self setSex:[input readInt32]];
        break;
      }
      case 48: {
        [self setAge:[input readInt32]];
        break;
      }
      case 58: {
        [self setHeight:[input readString]];
        break;
      }
      case 66: {
        [self setWeight:[input readString]];
        break;
      }
      case 74: {
        [self setJob:[input readString]];
        break;
      }
      case 82: {
        [self setLetter:[input readString]];
        break;
      }
      case 90: {
        [self setImg:[input readString]];
        break;
      }
      case 98: {
        [self setCreateTimeShow:[input readString]];
        break;
      }
      case 106: {
        [self setCreateTimeQuery:[input readString]];
        break;
      }
      case 114: {
        [self setDistanceShow:[input readString]];
        break;
      }
      case 122: {
        [self setDistanceQuery:[input readString]];
        break;
      }
      case 128: {
        [self setUserCnt:[input readInt32]];
        break;
      }
      case 138: {
        [self setStatus:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MMarriageMini_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MMarriageMini_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasUserid {
  return protobufBuilderResult.hasUserid;
}
- (NSString*) userid {
  return protobufBuilderResult.userid;
}
- (MMarriageMini_Builder*) setUserid:(NSString*) _value {
  protobufBuilderResult.hasUserid = YES;
  protobufBuilderResult.userid = _value;
  return self;
}
- (MMarriageMini_Builder*) clearUserid {
  protobufBuilderResult.hasUserid = NO;
  protobufBuilderResult.userid = @"";
  return self;
}
- (BOOL) hasUserImg {
  return protobufBuilderResult.hasUserImg;
}
- (NSString*) userImg {
  return protobufBuilderResult.userImg;
}
- (MMarriageMini_Builder*) setUserImg:(NSString*) _value {
  protobufBuilderResult.hasUserImg = YES;
  protobufBuilderResult.userImg = _value;
  return self;
}
- (MMarriageMini_Builder*) clearUserImg {
  protobufBuilderResult.hasUserImg = NO;
  protobufBuilderResult.userImg = @"";
  return self;
}
- (BOOL) hasNickname {
  return protobufBuilderResult.hasNickname;
}
- (NSString*) nickname {
  return protobufBuilderResult.nickname;
}
- (MMarriageMini_Builder*) setNickname:(NSString*) _value {
  protobufBuilderResult.hasNickname = YES;
  protobufBuilderResult.nickname = _value;
  return self;
}
- (MMarriageMini_Builder*) clearNickname {
  protobufBuilderResult.hasNickname = NO;
  protobufBuilderResult.nickname = @"";
  return self;
}
- (BOOL) hasSex {
  return protobufBuilderResult.hasSex;
}
- (int32_t) sex {
  return protobufBuilderResult.sex;
}
- (MMarriageMini_Builder*) setSex:(int32_t) _value {
  protobufBuilderResult.hasSex = YES;
  protobufBuilderResult.sex = _value;
  return self;
}
- (MMarriageMini_Builder*) clearSex {
  protobufBuilderResult.hasSex = NO;
  protobufBuilderResult.sex = 0;
  return self;
}
- (BOOL) hasAge {
  return protobufBuilderResult.hasAge;
}
- (int32_t) age {
  return protobufBuilderResult.age;
}
- (MMarriageMini_Builder*) setAge:(int32_t) _value {
  protobufBuilderResult.hasAge = YES;
  protobufBuilderResult.age = _value;
  return self;
}
- (MMarriageMini_Builder*) clearAge {
  protobufBuilderResult.hasAge = NO;
  protobufBuilderResult.age = 0;
  return self;
}
- (BOOL) hasHeight {
  return protobufBuilderResult.hasHeight;
}
- (NSString*) height {
  return protobufBuilderResult.height;
}
- (MMarriageMini_Builder*) setHeight:(NSString*) _value {
  protobufBuilderResult.hasHeight = YES;
  protobufBuilderResult.height = _value;
  return self;
}
- (MMarriageMini_Builder*) clearHeight {
  protobufBuilderResult.hasHeight = NO;
  protobufBuilderResult.height = @"";
  return self;
}
- (BOOL) hasWeight {
  return protobufBuilderResult.hasWeight;
}
- (NSString*) weight {
  return protobufBuilderResult.weight;
}
- (MMarriageMini_Builder*) setWeight:(NSString*) _value {
  protobufBuilderResult.hasWeight = YES;
  protobufBuilderResult.weight = _value;
  return self;
}
- (MMarriageMini_Builder*) clearWeight {
  protobufBuilderResult.hasWeight = NO;
  protobufBuilderResult.weight = @"";
  return self;
}
- (BOOL) hasJob {
  return protobufBuilderResult.hasJob;
}
- (NSString*) job {
  return protobufBuilderResult.job;
}
- (MMarriageMini_Builder*) setJob:(NSString*) _value {
  protobufBuilderResult.hasJob = YES;
  protobufBuilderResult.job = _value;
  return self;
}
- (MMarriageMini_Builder*) clearJob {
  protobufBuilderResult.hasJob = NO;
  protobufBuilderResult.job = @"";
  return self;
}
- (BOOL) hasLetter {
  return protobufBuilderResult.hasLetter;
}
- (NSString*) letter {
  return protobufBuilderResult.letter;
}
- (MMarriageMini_Builder*) setLetter:(NSString*) _value {
  protobufBuilderResult.hasLetter = YES;
  protobufBuilderResult.letter = _value;
  return self;
}
- (MMarriageMini_Builder*) clearLetter {
  protobufBuilderResult.hasLetter = NO;
  protobufBuilderResult.letter = @"";
  return self;
}
- (BOOL) hasImg {
  return protobufBuilderResult.hasImg;
}
- (NSString*) img {
  return protobufBuilderResult.img;
}
- (MMarriageMini_Builder*) setImg:(NSString*) _value {
  protobufBuilderResult.hasImg = YES;
  protobufBuilderResult.img = _value;
  return self;
}
- (MMarriageMini_Builder*) clearImg {
  protobufBuilderResult.hasImg = NO;
  protobufBuilderResult.img = @"";
  return self;
}
- (BOOL) hasCreateTimeShow {
  return protobufBuilderResult.hasCreateTimeShow;
}
- (NSString*) createTimeShow {
  return protobufBuilderResult.createTimeShow;
}
- (MMarriageMini_Builder*) setCreateTimeShow:(NSString*) _value {
  protobufBuilderResult.hasCreateTimeShow = YES;
  protobufBuilderResult.createTimeShow = _value;
  return self;
}
- (MMarriageMini_Builder*) clearCreateTimeShow {
  protobufBuilderResult.hasCreateTimeShow = NO;
  protobufBuilderResult.createTimeShow = @"";
  return self;
}
- (BOOL) hasCreateTimeQuery {
  return protobufBuilderResult.hasCreateTimeQuery;
}
- (NSString*) createTimeQuery {
  return protobufBuilderResult.createTimeQuery;
}
- (MMarriageMini_Builder*) setCreateTimeQuery:(NSString*) _value {
  protobufBuilderResult.hasCreateTimeQuery = YES;
  protobufBuilderResult.createTimeQuery = _value;
  return self;
}
- (MMarriageMini_Builder*) clearCreateTimeQuery {
  protobufBuilderResult.hasCreateTimeQuery = NO;
  protobufBuilderResult.createTimeQuery = @"";
  return self;
}
- (BOOL) hasDistanceShow {
  return protobufBuilderResult.hasDistanceShow;
}
- (NSString*) distanceShow {
  return protobufBuilderResult.distanceShow;
}
- (MMarriageMini_Builder*) setDistanceShow:(NSString*) _value {
  protobufBuilderResult.hasDistanceShow = YES;
  protobufBuilderResult.distanceShow = _value;
  return self;
}
- (MMarriageMini_Builder*) clearDistanceShow {
  protobufBuilderResult.hasDistanceShow = NO;
  protobufBuilderResult.distanceShow = @"";
  return self;
}
- (BOOL) hasDistanceQuery {
  return protobufBuilderResult.hasDistanceQuery;
}
- (NSString*) distanceQuery {
  return protobufBuilderResult.distanceQuery;
}
- (MMarriageMini_Builder*) setDistanceQuery:(NSString*) _value {
  protobufBuilderResult.hasDistanceQuery = YES;
  protobufBuilderResult.distanceQuery = _value;
  return self;
}
- (MMarriageMini_Builder*) clearDistanceQuery {
  protobufBuilderResult.hasDistanceQuery = NO;
  protobufBuilderResult.distanceQuery = @"";
  return self;
}
- (BOOL) hasUserCnt {
  return protobufBuilderResult.hasUserCnt;
}
- (int32_t) userCnt {
  return protobufBuilderResult.userCnt;
}
- (MMarriageMini_Builder*) setUserCnt:(int32_t) _value {
  protobufBuilderResult.hasUserCnt = YES;
  protobufBuilderResult.userCnt = _value;
  return self;
}
- (MMarriageMini_Builder*) clearUserCnt {
  protobufBuilderResult.hasUserCnt = NO;
  protobufBuilderResult.userCnt = 0;
  return self;
}
- (BOOL) hasStatus {
  return protobufBuilderResult.hasStatus;
}
- (NSString*) status {
  return protobufBuilderResult.status;
}
- (MMarriageMini_Builder*) setStatus:(NSString*) _value {
  protobufBuilderResult.hasStatus = YES;
  protobufBuilderResult.status = _value;
  return self;
}
- (MMarriageMini_Builder*) clearStatus {
  protobufBuilderResult.hasStatus = NO;
  protobufBuilderResult.status = @"";
  return self;
}
@end

@interface MMarriageMiniList ()
@property (retain) MMarriageMini* list;
@end

@implementation MMarriageMiniList

- (BOOL) hasList {
  return !!hasList_;
}
- (void) setHasList:(BOOL) _value {
  hasList_ = !!_value;
}
@synthesize list;
- (void) dealloc {
  self.list = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.list = [MMarriageMini defaultInstance];
  }
  return self;
}
static MMarriageMiniList* defaultMMarriageMiniListInstance = nil;
+ (void) initialize {
  if (self == [MMarriageMiniList class]) {
    defaultMMarriageMiniListInstance = [[MMarriageMiniList alloc] init];
  }
}
+ (MMarriageMiniList*) defaultInstance {
  return defaultMMarriageMiniListInstance;
}
- (MMarriageMiniList*) defaultInstance {
  return defaultMMarriageMiniListInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasList) {
    [output writeMessage:1 value:self.list];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasList) {
    size += computeMessageSize(1, self.list);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarriageMiniList*) parseFromData:(NSData*) data {
  return (MMarriageMiniList*)[[[MMarriageMiniList builder] mergeFromData:data] build];
}
+ (MMarriageMiniList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriageMiniList*)[[[MMarriageMiniList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarriageMiniList*) parseFromInputStream:(NSInputStream*) input {
  return (MMarriageMiniList*)[[[MMarriageMiniList builder] mergeFromInputStream:input] build];
}
+ (MMarriageMiniList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriageMiniList*)[[[MMarriageMiniList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarriageMiniList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarriageMiniList*)[[[MMarriageMiniList builder] mergeFromCodedInputStream:input] build];
}
+ (MMarriageMiniList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarriageMiniList*)[[[MMarriageMiniList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarriageMiniList_Builder*) builder {
  return [[[MMarriageMiniList_Builder alloc] init] autorelease];
}
+ (MMarriageMiniList_Builder*) builderWithPrototype:(MMarriageMiniList*) prototype {
  return [[MMarriageMiniList builder] mergeFrom:prototype];
}
- (MMarriageMiniList_Builder*) builder {
  return [MMarriageMiniList builder];
}
@end

@interface MMarriageMiniList_Builder()
@property (retain) MMarriageMiniList* protobufBuilderResult;
@end

@implementation MMarriageMiniList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarriageMiniList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarriageMiniList_Builder*) clear {
  self.protobufBuilderResult = [[[MMarriageMiniList alloc] init] autorelease];
  return self;
}
- (MMarriageMiniList_Builder*) clone {
  return [MMarriageMiniList builderWithPrototype:protobufBuilderResult];
}
- (MMarriageMiniList*) defaultInstance {
  return [MMarriageMiniList defaultInstance];
}
- (MMarriageMiniList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarriageMiniList*) buildPartial {
  MMarriageMiniList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarriageMiniList_Builder*) mergeFrom:(MMarriageMiniList*) other {
  if (other == [MMarriageMiniList defaultInstance]) {
    return self;
  }
  if (other.hasList) {
    [self mergeList:other.list];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarriageMiniList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarriageMiniList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MMarriageMini_Builder* subBuilder = [MMarriageMini builder];
        if (self.hasList) {
          [subBuilder mergeFrom:self.list];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasList {
  return protobufBuilderResult.hasList;
}
- (MMarriageMini*) list {
  return protobufBuilderResult.list;
}
- (MMarriageMiniList_Builder*) setList:(MMarriageMini*) _value {
  protobufBuilderResult.hasList = YES;
  protobufBuilderResult.list = _value;
  return self;
}
- (MMarriageMiniList_Builder*) setListBuilder:(MMarriageMini_Builder*) builderForValue {
  return [self setList:[builderForValue build]];
}
- (MMarriageMiniList_Builder*) mergeList:(MMarriageMini*) _value {
  if (protobufBuilderResult.hasList &&
      protobufBuilderResult.list != [MMarriageMini defaultInstance]) {
    protobufBuilderResult.list =
      [[[MMarriageMini builderWithPrototype:protobufBuilderResult.list] mergeFrom:_value] buildPartial];
  } else {
    protobufBuilderResult.list = _value;
  }
  protobufBuilderResult.hasList = YES;
  return self;
}
- (MMarriageMiniList_Builder*) clearList {
  protobufBuilderResult.hasList = NO;
  protobufBuilderResult.list = [MMarriageMini defaultInstance];
  return self;
}
@end

@interface MUserDatePage ()
@property (retain) NSMutableArray* mutableMarriageList;
@property (retain) NSMutableArray* mutableDateList;
@end

@implementation MUserDatePage

@synthesize mutableMarriageList;
@synthesize mutableDateList;
- (void) dealloc {
  self.mutableMarriageList = nil;
  self.mutableDateList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MUserDatePage* defaultMUserDatePageInstance = nil;
+ (void) initialize {
  if (self == [MUserDatePage class]) {
    defaultMUserDatePageInstance = [[MUserDatePage alloc] init];
  }
}
+ (MUserDatePage*) defaultInstance {
  return defaultMUserDatePageInstance;
}
- (MUserDatePage*) defaultInstance {
  return defaultMUserDatePageInstance;
}
- (NSArray*) marriageList {
  return mutableMarriageList;
}
- (MMarriageMini*) marriageAtIndex:(int32_t) index {
  id _value = [mutableMarriageList objectAtIndex:index];
  return _value;
}
- (NSArray*) dateList {
  return mutableDateList;
}
- (MDate*) dateAtIndex:(int32_t) index {
  id _value = [mutableDateList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MMarriageMini* element in self.marriageList) {
    [output writeMessage:1 value:element];
  }
  for (MDate* element in self.dateList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MMarriageMini* element in self.marriageList) {
    size += computeMessageSize(1, element);
  }
  for (MDate* element in self.dateList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MUserDatePage*) parseFromData:(NSData*) data {
  return (MUserDatePage*)[[[MUserDatePage builder] mergeFromData:data] build];
}
+ (MUserDatePage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserDatePage*)[[[MUserDatePage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MUserDatePage*) parseFromInputStream:(NSInputStream*) input {
  return (MUserDatePage*)[[[MUserDatePage builder] mergeFromInputStream:input] build];
}
+ (MUserDatePage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserDatePage*)[[[MUserDatePage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUserDatePage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MUserDatePage*)[[[MUserDatePage builder] mergeFromCodedInputStream:input] build];
}
+ (MUserDatePage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserDatePage*)[[[MUserDatePage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUserDatePage_Builder*) builder {
  return [[[MUserDatePage_Builder alloc] init] autorelease];
}
+ (MUserDatePage_Builder*) builderWithPrototype:(MUserDatePage*) prototype {
  return [[MUserDatePage builder] mergeFrom:prototype];
}
- (MUserDatePage_Builder*) builder {
  return [MUserDatePage builder];
}
@end

@interface MUserDatePage_Builder()
@property (retain) MUserDatePage* protobufBuilderResult;
@end

@implementation MUserDatePage_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MUserDatePage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MUserDatePage_Builder*) clear {
  self.protobufBuilderResult = [[[MUserDatePage alloc] init] autorelease];
  return self;
}
- (MUserDatePage_Builder*) clone {
  return [MUserDatePage builderWithPrototype:protobufBuilderResult];
}
- (MUserDatePage*) defaultInstance {
  return [MUserDatePage defaultInstance];
}
- (MUserDatePage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MUserDatePage*) buildPartial {
  MUserDatePage* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MUserDatePage_Builder*) mergeFrom:(MUserDatePage*) other {
  if (other == [MUserDatePage defaultInstance]) {
    return self;
  }
  if (other.mutableMarriageList.count > 0) {
    if (protobufBuilderResult.mutableMarriageList == nil) {
      protobufBuilderResult.mutableMarriageList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableMarriageList addObjectsFromArray:other.mutableMarriageList];
  }
  if (other.mutableDateList.count > 0) {
    if (protobufBuilderResult.mutableDateList == nil) {
      protobufBuilderResult.mutableDateList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableDateList addObjectsFromArray:other.mutableDateList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MUserDatePage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MUserDatePage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MMarriageMini_Builder* subBuilder = [MMarriageMini builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMarriage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MDate_Builder* subBuilder = [MDate builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDate:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) marriageList {
  if (protobufBuilderResult.mutableMarriageList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableMarriageList;
}
- (MMarriageMini*) marriageAtIndex:(int32_t) index {
  return [protobufBuilderResult marriageAtIndex:index];
}
- (MUserDatePage_Builder*) replaceMarriageAtIndex:(int32_t) index with:(MMarriageMini*) _value {
  [protobufBuilderResult.mutableMarriageList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MUserDatePage_Builder*) addAllMarriage:(NSArray*) values {
  if (protobufBuilderResult.mutableMarriageList == nil) {
    protobufBuilderResult.mutableMarriageList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableMarriageList addObjectsFromArray:values];
  return self;
}
- (MUserDatePage_Builder*) clearMarriageList {
  protobufBuilderResult.mutableMarriageList = nil;
  return self;
}
- (MUserDatePage_Builder*) addMarriage:(MMarriageMini*) _value {
  if (protobufBuilderResult.mutableMarriageList == nil) {
    protobufBuilderResult.mutableMarriageList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableMarriageList addObject:_value];
  return self;
}
- (NSArray*) dateList {
  if (protobufBuilderResult.mutableDateList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableDateList;
}
- (MDate*) dateAtIndex:(int32_t) index {
  return [protobufBuilderResult dateAtIndex:index];
}
- (MUserDatePage_Builder*) replaceDateAtIndex:(int32_t) index with:(MDate*) _value {
  [protobufBuilderResult.mutableDateList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MUserDatePage_Builder*) addAllDate:(NSArray*) values {
  if (protobufBuilderResult.mutableDateList == nil) {
    protobufBuilderResult.mutableDateList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableDateList addObjectsFromArray:values];
  return self;
}
- (MUserDatePage_Builder*) clearDateList {
  protobufBuilderResult.mutableDateList = nil;
  return self;
}
- (MUserDatePage_Builder*) addDate:(MDate*) _value {
  if (protobufBuilderResult.mutableDateList == nil) {
    protobufBuilderResult.mutableDateList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableDateList addObject:_value];
  return self;
}
@end

