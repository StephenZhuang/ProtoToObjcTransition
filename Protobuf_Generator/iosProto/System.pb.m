// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "System.pb.h"

@implementation SystemRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SystemRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MRet ()
@property int32_t code;
@property (retain) NSString* msg;
@end

@implementation MRet

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value {
  hasCode_ = !!_value;
}
@synthesize code;
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) _value {
  hasMsg_ = !!_value;
}
@synthesize msg;
- (void) dealloc {
  self.msg = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.code = 0;
    self.msg = @"";
  }
  return self;
}
static MRet* defaultMRetInstance = nil;
+ (void) initialize {
  if (self == [MRet class]) {
    defaultMRetInstance = [[MRet alloc] init];
  }
}
+ (MRet*) defaultInstance {
  return defaultMRetInstance;
}
- (MRet*) defaultInstance {
  return defaultMRetInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeInt32:1 value:self.code];
  }
  if (self.hasMsg) {
    [output writeString:2 value:self.msg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCode) {
    size += computeInt32Size(1, self.code);
  }
  if (self.hasMsg) {
    size += computeStringSize(2, self.msg);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MRet*) parseFromData:(NSData*) data {
  return (MRet*)[[[MRet builder] mergeFromData:data] build];
}
+ (MRet*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MRet*)[[[MRet builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MRet*) parseFromInputStream:(NSInputStream*) input {
  return (MRet*)[[[MRet builder] mergeFromInputStream:input] build];
}
+ (MRet*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MRet*)[[[MRet builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MRet*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MRet*)[[[MRet builder] mergeFromCodedInputStream:input] build];
}
+ (MRet*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MRet*)[[[MRet builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MRet_Builder*) builder {
  return [[[MRet_Builder alloc] init] autorelease];
}
+ (MRet_Builder*) builderWithPrototype:(MRet*) prototype {
  return [[MRet builder] mergeFrom:prototype];
}
- (MRet_Builder*) builder {
  return [MRet builder];
}
@end

@interface MRet_Builder()
@property (retain) MRet* protobufBuilderResult;
@end

@implementation MRet_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MRet alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MRet_Builder*) clear {
  self.protobufBuilderResult = [[[MRet alloc] init] autorelease];
  return self;
}
- (MRet_Builder*) clone {
  return [MRet builderWithPrototype:protobufBuilderResult];
}
- (MRet*) defaultInstance {
  return [MRet defaultInstance];
}
- (MRet*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MRet*) buildPartial {
  MRet* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MRet_Builder*) mergeFrom:(MRet*) other {
  if (other == [MRet defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MRet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MRet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setMsg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return protobufBuilderResult.hasCode;
}
- (int32_t) code {
  return protobufBuilderResult.code;
}
- (MRet_Builder*) setCode:(int32_t) _value {
  protobufBuilderResult.hasCode = YES;
  protobufBuilderResult.code = _value;
  return self;
}
- (MRet_Builder*) clearCode {
  protobufBuilderResult.hasCode = NO;
  protobufBuilderResult.code = 0;
  return self;
}
- (BOOL) hasMsg {
  return protobufBuilderResult.hasMsg;
}
- (NSString*) msg {
  return protobufBuilderResult.msg;
}
- (MRet_Builder*) setMsg:(NSString*) _value {
  protobufBuilderResult.hasMsg = YES;
  protobufBuilderResult.msg = _value;
  return self;
}
- (MRet_Builder*) clearMsg {
  protobufBuilderResult.hasMsg = NO;
  protobufBuilderResult.msg = @"";
  return self;
}
@end

@interface MFile ()
@property (retain) NSData* file;
@property (retain) NSString* name;
@end

@implementation MFile

- (BOOL) hasFile {
  return !!hasFile_;
}
- (void) setHasFile:(BOOL) _value {
  hasFile_ = !!_value;
}
@synthesize file;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value {
  hasName_ = !!_value;
}
@synthesize name;
- (void) dealloc {
  self.file = nil;
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.file = [NSData data];
    self.name = @"";
  }
  return self;
}
static MFile* defaultMFileInstance = nil;
+ (void) initialize {
  if (self == [MFile class]) {
    defaultMFileInstance = [[MFile alloc] init];
  }
}
+ (MFile*) defaultInstance {
  return defaultMFileInstance;
}
- (MFile*) defaultInstance {
  return defaultMFileInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFile) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFile) {
    [output writeData:1 value:self.file];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFile) {
    size += computeDataSize(1, self.file);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MFile*) parseFromData:(NSData*) data {
  return (MFile*)[[[MFile builder] mergeFromData:data] build];
}
+ (MFile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFile*)[[[MFile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MFile*) parseFromInputStream:(NSInputStream*) input {
  return (MFile*)[[[MFile builder] mergeFromInputStream:input] build];
}
+ (MFile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFile*)[[[MFile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MFile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MFile*)[[[MFile builder] mergeFromCodedInputStream:input] build];
}
+ (MFile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFile*)[[[MFile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MFile_Builder*) builder {
  return [[[MFile_Builder alloc] init] autorelease];
}
+ (MFile_Builder*) builderWithPrototype:(MFile*) prototype {
  return [[MFile builder] mergeFrom:prototype];
}
- (MFile_Builder*) builder {
  return [MFile builder];
}
@end

@interface MFile_Builder()
@property (retain) MFile* protobufBuilderResult;
@end

@implementation MFile_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MFile alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MFile_Builder*) clear {
  self.protobufBuilderResult = [[[MFile alloc] init] autorelease];
  return self;
}
- (MFile_Builder*) clone {
  return [MFile builderWithPrototype:protobufBuilderResult];
}
- (MFile*) defaultInstance {
  return [MFile defaultInstance];
}
- (MFile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MFile*) buildPartial {
  MFile* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MFile_Builder*) mergeFrom:(MFile*) other {
  if (other == [MFile defaultInstance]) {
    return self;
  }
  if (other.hasFile) {
    [self setFile:other.file];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MFile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MFile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFile:[input readData]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFile {
  return protobufBuilderResult.hasFile;
}
- (NSData*) file {
  return protobufBuilderResult.file;
}
- (MFile_Builder*) setFile:(NSData*) _value {
  protobufBuilderResult.hasFile = YES;
  protobufBuilderResult.file = _value;
  return self;
}
- (MFile_Builder*) clearFile {
  protobufBuilderResult.hasFile = NO;
  protobufBuilderResult.file = [NSData data];
  return self;
}
- (BOOL) hasName {
  return protobufBuilderResult.hasName;
}
- (NSString*) name {
  return protobufBuilderResult.name;
}
- (MFile_Builder*) setName:(NSString*) _value {
  protobufBuilderResult.hasName = YES;
  protobufBuilderResult.name = _value;
  return self;
}
- (MFile_Builder*) clearName {
  protobufBuilderResult.hasName = NO;
  protobufBuilderResult.name = @"";
  return self;
}
@end

@interface MPunish ()
@property (retain) NSString* id;
@property (retain) NSString* userid;
@property int32_t sex;
@property int32_t age;
@property (retain) NSString* location;
@property (retain) NSString* content;
@property (retain) NSString* time;
@property (retain) NSString* createTime;
@end

@implementation MPunish

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasUserid {
  return !!hasUserid_;
}
- (void) setHasUserid:(BOOL) _value {
  hasUserid_ = !!_value;
}
@synthesize userid;
- (BOOL) hasSex {
  return !!hasSex_;
}
- (void) setHasSex:(BOOL) _value {
  hasSex_ = !!_value;
}
@synthesize sex;
- (BOOL) hasAge {
  return !!hasAge_;
}
- (void) setHasAge:(BOOL) _value {
  hasAge_ = !!_value;
}
@synthesize age;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) _value {
  hasLocation_ = !!_value;
}
@synthesize location;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value {
  hasContent_ = !!_value;
}
@synthesize content;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value {
  hasTime_ = !!_value;
}
@synthesize time;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) _value {
  hasCreateTime_ = !!_value;
}
@synthesize createTime;
- (void) dealloc {
  self.id = nil;
  self.userid = nil;
  self.location = nil;
  self.content = nil;
  self.time = nil;
  self.createTime = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.userid = @"";
    self.sex = 0;
    self.age = 0;
    self.location = @"";
    self.content = @"";
    self.time = @"";
    self.createTime = @"";
  }
  return self;
}
static MPunish* defaultMPunishInstance = nil;
+ (void) initialize {
  if (self == [MPunish class]) {
    defaultMPunishInstance = [[MPunish alloc] init];
  }
}
+ (MPunish*) defaultInstance {
  return defaultMPunishInstance;
}
- (MPunish*) defaultInstance {
  return defaultMPunishInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasUserid) {
    [output writeString:2 value:self.userid];
  }
  if (self.hasSex) {
    [output writeInt32:3 value:self.sex];
  }
  if (self.hasAge) {
    [output writeInt32:4 value:self.age];
  }
  if (self.hasLocation) {
    [output writeString:5 value:self.location];
  }
  if (self.hasContent) {
    [output writeString:6 value:self.content];
  }
  if (self.hasTime) {
    [output writeString:7 value:self.time];
  }
  if (self.hasCreateTime) {
    [output writeString:8 value:self.createTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasUserid) {
    size += computeStringSize(2, self.userid);
  }
  if (self.hasSex) {
    size += computeInt32Size(3, self.sex);
  }
  if (self.hasAge) {
    size += computeInt32Size(4, self.age);
  }
  if (self.hasLocation) {
    size += computeStringSize(5, self.location);
  }
  if (self.hasContent) {
    size += computeStringSize(6, self.content);
  }
  if (self.hasTime) {
    size += computeStringSize(7, self.time);
  }
  if (self.hasCreateTime) {
    size += computeStringSize(8, self.createTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MPunish*) parseFromData:(NSData*) data {
  return (MPunish*)[[[MPunish builder] mergeFromData:data] build];
}
+ (MPunish*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MPunish*)[[[MPunish builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MPunish*) parseFromInputStream:(NSInputStream*) input {
  return (MPunish*)[[[MPunish builder] mergeFromInputStream:input] build];
}
+ (MPunish*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MPunish*)[[[MPunish builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MPunish*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MPunish*)[[[MPunish builder] mergeFromCodedInputStream:input] build];
}
+ (MPunish*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MPunish*)[[[MPunish builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MPunish_Builder*) builder {
  return [[[MPunish_Builder alloc] init] autorelease];
}
+ (MPunish_Builder*) builderWithPrototype:(MPunish*) prototype {
  return [[MPunish builder] mergeFrom:prototype];
}
- (MPunish_Builder*) builder {
  return [MPunish builder];
}
@end

@interface MPunish_Builder()
@property (retain) MPunish* protobufBuilderResult;
@end

@implementation MPunish_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MPunish alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MPunish_Builder*) clear {
  self.protobufBuilderResult = [[[MPunish alloc] init] autorelease];
  return self;
}
- (MPunish_Builder*) clone {
  return [MPunish builderWithPrototype:protobufBuilderResult];
}
- (MPunish*) defaultInstance {
  return [MPunish defaultInstance];
}
- (MPunish*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MPunish*) buildPartial {
  MPunish* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MPunish_Builder*) mergeFrom:(MPunish*) other {
  if (other == [MPunish defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUserid) {
    [self setUserid:other.userid];
  }
  if (other.hasSex) {
    [self setSex:other.sex];
  }
  if (other.hasAge) {
    [self setAge:other.age];
  }
  if (other.hasLocation) {
    [self setLocation:other.location];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MPunish_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MPunish_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setUserid:[input readString]];
        break;
      }
      case 24: {
        [self setSex:[input readInt32]];
        break;
      }
      case 32: {
        [self setAge:[input readInt32]];
        break;
      }
      case 42: {
        [self setLocation:[input readString]];
        break;
      }
      case 50: {
        [self setContent:[input readString]];
        break;
      }
      case 58: {
        [self setTime:[input readString]];
        break;
      }
      case 66: {
        [self setCreateTime:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MPunish_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MPunish_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasUserid {
  return protobufBuilderResult.hasUserid;
}
- (NSString*) userid {
  return protobufBuilderResult.userid;
}
- (MPunish_Builder*) setUserid:(NSString*) _value {
  protobufBuilderResult.hasUserid = YES;
  protobufBuilderResult.userid = _value;
  return self;
}
- (MPunish_Builder*) clearUserid {
  protobufBuilderResult.hasUserid = NO;
  protobufBuilderResult.userid = @"";
  return self;
}
- (BOOL) hasSex {
  return protobufBuilderResult.hasSex;
}
- (int32_t) sex {
  return protobufBuilderResult.sex;
}
- (MPunish_Builder*) setSex:(int32_t) _value {
  protobufBuilderResult.hasSex = YES;
  protobufBuilderResult.sex = _value;
  return self;
}
- (MPunish_Builder*) clearSex {
  protobufBuilderResult.hasSex = NO;
  protobufBuilderResult.sex = 0;
  return self;
}
- (BOOL) hasAge {
  return protobufBuilderResult.hasAge;
}
- (int32_t) age {
  return protobufBuilderResult.age;
}
- (MPunish_Builder*) setAge:(int32_t) _value {
  protobufBuilderResult.hasAge = YES;
  protobufBuilderResult.age = _value;
  return self;
}
- (MPunish_Builder*) clearAge {
  protobufBuilderResult.hasAge = NO;
  protobufBuilderResult.age = 0;
  return self;
}
- (BOOL) hasLocation {
  return protobufBuilderResult.hasLocation;
}
- (NSString*) location {
  return protobufBuilderResult.location;
}
- (MPunish_Builder*) setLocation:(NSString*) _value {
  protobufBuilderResult.hasLocation = YES;
  protobufBuilderResult.location = _value;
  return self;
}
- (MPunish_Builder*) clearLocation {
  protobufBuilderResult.hasLocation = NO;
  protobufBuilderResult.location = @"";
  return self;
}
- (BOOL) hasContent {
  return protobufBuilderResult.hasContent;
}
- (NSString*) content {
  return protobufBuilderResult.content;
}
- (MPunish_Builder*) setContent:(NSString*) _value {
  protobufBuilderResult.hasContent = YES;
  protobufBuilderResult.content = _value;
  return self;
}
- (MPunish_Builder*) clearContent {
  protobufBuilderResult.hasContent = NO;
  protobufBuilderResult.content = @"";
  return self;
}
- (BOOL) hasTime {
  return protobufBuilderResult.hasTime;
}
- (NSString*) time {
  return protobufBuilderResult.time;
}
- (MPunish_Builder*) setTime:(NSString*) _value {
  protobufBuilderResult.hasTime = YES;
  protobufBuilderResult.time = _value;
  return self;
}
- (MPunish_Builder*) clearTime {
  protobufBuilderResult.hasTime = NO;
  protobufBuilderResult.time = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return protobufBuilderResult.hasCreateTime;
}
- (NSString*) createTime {
  return protobufBuilderResult.createTime;
}
- (MPunish_Builder*) setCreateTime:(NSString*) _value {
  protobufBuilderResult.hasCreateTime = YES;
  protobufBuilderResult.createTime = _value;
  return self;
}
- (MPunish_Builder*) clearCreateTime {
  protobufBuilderResult.hasCreateTime = NO;
  protobufBuilderResult.createTime = @"";
  return self;
}
@end

@interface MPunishList ()
@property (retain) NSMutableArray* mutableListList;
@end

@implementation MPunishList

@synthesize mutableListList;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MPunishList* defaultMPunishListInstance = nil;
+ (void) initialize {
  if (self == [MPunishList class]) {
    defaultMPunishListInstance = [[MPunishList alloc] init];
  }
}
+ (MPunishList*) defaultInstance {
  return defaultMPunishListInstance;
}
- (MPunishList*) defaultInstance {
  return defaultMPunishListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (MPunish*) listAtIndex:(int32_t) index {
  id _value = [mutableListList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MPunish* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MPunish* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MPunishList*) parseFromData:(NSData*) data {
  return (MPunishList*)[[[MPunishList builder] mergeFromData:data] build];
}
+ (MPunishList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MPunishList*)[[[MPunishList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MPunishList*) parseFromInputStream:(NSInputStream*) input {
  return (MPunishList*)[[[MPunishList builder] mergeFromInputStream:input] build];
}
+ (MPunishList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MPunishList*)[[[MPunishList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MPunishList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MPunishList*)[[[MPunishList builder] mergeFromCodedInputStream:input] build];
}
+ (MPunishList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MPunishList*)[[[MPunishList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MPunishList_Builder*) builder {
  return [[[MPunishList_Builder alloc] init] autorelease];
}
+ (MPunishList_Builder*) builderWithPrototype:(MPunishList*) prototype {
  return [[MPunishList builder] mergeFrom:prototype];
}
- (MPunishList_Builder*) builder {
  return [MPunishList builder];
}
@end

@interface MPunishList_Builder()
@property (retain) MPunishList* protobufBuilderResult;
@end

@implementation MPunishList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MPunishList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MPunishList_Builder*) clear {
  self.protobufBuilderResult = [[[MPunishList alloc] init] autorelease];
  return self;
}
- (MPunishList_Builder*) clone {
  return [MPunishList builderWithPrototype:protobufBuilderResult];
}
- (MPunishList*) defaultInstance {
  return [MPunishList defaultInstance];
}
- (MPunishList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MPunishList*) buildPartial {
  MPunishList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MPunishList_Builder*) mergeFrom:(MPunishList*) other {
  if (other == [MPunishList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (protobufBuilderResult.mutableListList == nil) {
      protobufBuilderResult.mutableListList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableListList addObjectsFromArray:other.mutableListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MPunishList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MPunishList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MPunish_Builder* subBuilder = [MPunish builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (protobufBuilderResult.mutableListList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableListList;
}
- (MPunish*) listAtIndex:(int32_t) index {
  return [protobufBuilderResult listAtIndex:index];
}
- (MPunishList_Builder*) replaceListAtIndex:(int32_t) index with:(MPunish*) _value {
  [protobufBuilderResult.mutableListList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MPunishList_Builder*) addAllList:(NSArray*) values {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObjectsFromArray:values];
  return self;
}
- (MPunishList_Builder*) clearListList {
  protobufBuilderResult.mutableListList = nil;
  return self;
}
- (MPunishList_Builder*) addList:(MPunish*) _value {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObject:_value];
  return self;
}
@end

@interface MCity ()
@property (retain) NSString* code;
@property (retain) NSString* name;
@property int32_t hot;
@end

@implementation MCity

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value {
  hasCode_ = !!_value;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value {
  hasName_ = !!_value;
}
@synthesize name;
- (BOOL) hasHot {
  return !!hasHot_;
}
- (void) setHasHot:(BOOL) _value {
  hasHot_ = !!_value;
}
@synthesize hot;
- (void) dealloc {
  self.code = nil;
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.code = @"";
    self.name = @"";
    self.hot = 0;
  }
  return self;
}
static MCity* defaultMCityInstance = nil;
+ (void) initialize {
  if (self == [MCity class]) {
    defaultMCityInstance = [[MCity alloc] init];
  }
}
+ (MCity*) defaultInstance {
  return defaultMCityInstance;
}
- (MCity*) defaultInstance {
  return defaultMCityInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasHot) {
    [output writeInt32:3 value:self.hot];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCode) {
    size += computeStringSize(1, self.code);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasHot) {
    size += computeInt32Size(3, self.hot);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MCity*) parseFromData:(NSData*) data {
  return (MCity*)[[[MCity builder] mergeFromData:data] build];
}
+ (MCity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCity*)[[[MCity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MCity*) parseFromInputStream:(NSInputStream*) input {
  return (MCity*)[[[MCity builder] mergeFromInputStream:input] build];
}
+ (MCity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCity*)[[[MCity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MCity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MCity*)[[[MCity builder] mergeFromCodedInputStream:input] build];
}
+ (MCity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCity*)[[[MCity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MCity_Builder*) builder {
  return [[[MCity_Builder alloc] init] autorelease];
}
+ (MCity_Builder*) builderWithPrototype:(MCity*) prototype {
  return [[MCity builder] mergeFrom:prototype];
}
- (MCity_Builder*) builder {
  return [MCity builder];
}
@end

@interface MCity_Builder()
@property (retain) MCity* protobufBuilderResult;
@end

@implementation MCity_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MCity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MCity_Builder*) clear {
  self.protobufBuilderResult = [[[MCity alloc] init] autorelease];
  return self;
}
- (MCity_Builder*) clone {
  return [MCity builderWithPrototype:protobufBuilderResult];
}
- (MCity*) defaultInstance {
  return [MCity defaultInstance];
}
- (MCity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MCity*) buildPartial {
  MCity* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MCity_Builder*) mergeFrom:(MCity*) other {
  if (other == [MCity defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasHot) {
    [self setHot:other.hot];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MCity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MCity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setHot:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return protobufBuilderResult.hasCode;
}
- (NSString*) code {
  return protobufBuilderResult.code;
}
- (MCity_Builder*) setCode:(NSString*) _value {
  protobufBuilderResult.hasCode = YES;
  protobufBuilderResult.code = _value;
  return self;
}
- (MCity_Builder*) clearCode {
  protobufBuilderResult.hasCode = NO;
  protobufBuilderResult.code = @"";
  return self;
}
- (BOOL) hasName {
  return protobufBuilderResult.hasName;
}
- (NSString*) name {
  return protobufBuilderResult.name;
}
- (MCity_Builder*) setName:(NSString*) _value {
  protobufBuilderResult.hasName = YES;
  protobufBuilderResult.name = _value;
  return self;
}
- (MCity_Builder*) clearName {
  protobufBuilderResult.hasName = NO;
  protobufBuilderResult.name = @"";
  return self;
}
- (BOOL) hasHot {
  return protobufBuilderResult.hasHot;
}
- (int32_t) hot {
  return protobufBuilderResult.hot;
}
- (MCity_Builder*) setHot:(int32_t) _value {
  protobufBuilderResult.hasHot = YES;
  protobufBuilderResult.hot = _value;
  return self;
}
- (MCity_Builder*) clearHot {
  protobufBuilderResult.hasHot = NO;
  protobufBuilderResult.hot = 0;
  return self;
}
@end

@interface MCityList ()
@property (retain) NSMutableArray* mutableListList;
@end

@implementation MCityList

@synthesize mutableListList;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MCityList* defaultMCityListInstance = nil;
+ (void) initialize {
  if (self == [MCityList class]) {
    defaultMCityListInstance = [[MCityList alloc] init];
  }
}
+ (MCityList*) defaultInstance {
  return defaultMCityListInstance;
}
- (MCityList*) defaultInstance {
  return defaultMCityListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (MCity*) listAtIndex:(int32_t) index {
  id _value = [mutableListList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MCity* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MCity* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MCityList*) parseFromData:(NSData*) data {
  return (MCityList*)[[[MCityList builder] mergeFromData:data] build];
}
+ (MCityList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCityList*)[[[MCityList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MCityList*) parseFromInputStream:(NSInputStream*) input {
  return (MCityList*)[[[MCityList builder] mergeFromInputStream:input] build];
}
+ (MCityList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCityList*)[[[MCityList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MCityList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MCityList*)[[[MCityList builder] mergeFromCodedInputStream:input] build];
}
+ (MCityList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCityList*)[[[MCityList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MCityList_Builder*) builder {
  return [[[MCityList_Builder alloc] init] autorelease];
}
+ (MCityList_Builder*) builderWithPrototype:(MCityList*) prototype {
  return [[MCityList builder] mergeFrom:prototype];
}
- (MCityList_Builder*) builder {
  return [MCityList builder];
}
@end

@interface MCityList_Builder()
@property (retain) MCityList* protobufBuilderResult;
@end

@implementation MCityList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MCityList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MCityList_Builder*) clear {
  self.protobufBuilderResult = [[[MCityList alloc] init] autorelease];
  return self;
}
- (MCityList_Builder*) clone {
  return [MCityList builderWithPrototype:protobufBuilderResult];
}
- (MCityList*) defaultInstance {
  return [MCityList defaultInstance];
}
- (MCityList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MCityList*) buildPartial {
  MCityList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MCityList_Builder*) mergeFrom:(MCityList*) other {
  if (other == [MCityList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (protobufBuilderResult.mutableListList == nil) {
      protobufBuilderResult.mutableListList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableListList addObjectsFromArray:other.mutableListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MCityList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MCityList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MCity_Builder* subBuilder = [MCity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (protobufBuilderResult.mutableListList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableListList;
}
- (MCity*) listAtIndex:(int32_t) index {
  return [protobufBuilderResult listAtIndex:index];
}
- (MCityList_Builder*) replaceListAtIndex:(int32_t) index with:(MCity*) _value {
  [protobufBuilderResult.mutableListList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MCityList_Builder*) addAllList:(NSArray*) values {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObjectsFromArray:values];
  return self;
}
- (MCityList_Builder*) clearListList {
  protobufBuilderResult.mutableListList = nil;
  return self;
}
- (MCityList_Builder*) addList:(MCity*) _value {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObject:_value];
  return self;
}
@end

