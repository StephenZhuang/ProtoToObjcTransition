// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Market.pb.h"

@implementation MarketRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MarketRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MMarketType ()
@property (retain) NSString* id;
@property (retain) NSString* name;
@property (retain) NSString* img;
@end

@implementation MMarketType

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value {
  hasName_ = !!_value;
}
@synthesize name;
- (BOOL) hasImg {
  return !!hasImg_;
}
- (void) setHasImg:(BOOL) _value {
  hasImg_ = !!_value;
}
@synthesize img;
- (void) dealloc {
  self.id = nil;
  self.name = nil;
  self.img = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.name = @"";
    self.img = @"";
  }
  return self;
}
static MMarketType* defaultMMarketTypeInstance = nil;
+ (void) initialize {
  if (self == [MMarketType class]) {
    defaultMMarketTypeInstance = [[MMarketType alloc] init];
  }
}
+ (MMarketType*) defaultInstance {
  return defaultMMarketTypeInstance;
}
- (MMarketType*) defaultInstance {
  return defaultMMarketTypeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasImg) {
    [output writeString:3 value:self.img];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasImg) {
    size += computeStringSize(3, self.img);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarketType*) parseFromData:(NSData*) data {
  return (MMarketType*)[[[MMarketType builder] mergeFromData:data] build];
}
+ (MMarketType*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketType*)[[[MMarketType builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarketType*) parseFromInputStream:(NSInputStream*) input {
  return (MMarketType*)[[[MMarketType builder] mergeFromInputStream:input] build];
}
+ (MMarketType*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketType*)[[[MMarketType builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketType*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarketType*)[[[MMarketType builder] mergeFromCodedInputStream:input] build];
}
+ (MMarketType*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketType*)[[[MMarketType builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketType_Builder*) builder {
  return [[[MMarketType_Builder alloc] init] autorelease];
}
+ (MMarketType_Builder*) builderWithPrototype:(MMarketType*) prototype {
  return [[MMarketType builder] mergeFrom:prototype];
}
- (MMarketType_Builder*) builder {
  return [MMarketType builder];
}
@end

@interface MMarketType_Builder()
@property (retain) MMarketType* protobufBuilderResult;
@end

@implementation MMarketType_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarketType alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarketType_Builder*) clear {
  self.protobufBuilderResult = [[[MMarketType alloc] init] autorelease];
  return self;
}
- (MMarketType_Builder*) clone {
  return [MMarketType builderWithPrototype:protobufBuilderResult];
}
- (MMarketType*) defaultInstance {
  return [MMarketType defaultInstance];
}
- (MMarketType*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarketType*) buildPartial {
  MMarketType* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarketType_Builder*) mergeFrom:(MMarketType*) other {
  if (other == [MMarketType defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasImg) {
    [self setImg:other.img];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarketType_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarketType_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setImg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MMarketType_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MMarketType_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasName {
  return protobufBuilderResult.hasName;
}
- (NSString*) name {
  return protobufBuilderResult.name;
}
- (MMarketType_Builder*) setName:(NSString*) _value {
  protobufBuilderResult.hasName = YES;
  protobufBuilderResult.name = _value;
  return self;
}
- (MMarketType_Builder*) clearName {
  protobufBuilderResult.hasName = NO;
  protobufBuilderResult.name = @"";
  return self;
}
- (BOOL) hasImg {
  return protobufBuilderResult.hasImg;
}
- (NSString*) img {
  return protobufBuilderResult.img;
}
- (MMarketType_Builder*) setImg:(NSString*) _value {
  protobufBuilderResult.hasImg = YES;
  protobufBuilderResult.img = _value;
  return self;
}
- (MMarketType_Builder*) clearImg {
  protobufBuilderResult.hasImg = NO;
  protobufBuilderResult.img = @"";
  return self;
}
@end

@interface MMarketTypeList ()
@property (retain) NSMutableArray* mutableListList;
@end

@implementation MMarketTypeList

@synthesize mutableListList;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MMarketTypeList* defaultMMarketTypeListInstance = nil;
+ (void) initialize {
  if (self == [MMarketTypeList class]) {
    defaultMMarketTypeListInstance = [[MMarketTypeList alloc] init];
  }
}
+ (MMarketTypeList*) defaultInstance {
  return defaultMMarketTypeListInstance;
}
- (MMarketTypeList*) defaultInstance {
  return defaultMMarketTypeListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (MMarketType*) listAtIndex:(int32_t) index {
  id _value = [mutableListList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MMarketType* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MMarketType* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarketTypeList*) parseFromData:(NSData*) data {
  return (MMarketTypeList*)[[[MMarketTypeList builder] mergeFromData:data] build];
}
+ (MMarketTypeList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketTypeList*)[[[MMarketTypeList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarketTypeList*) parseFromInputStream:(NSInputStream*) input {
  return (MMarketTypeList*)[[[MMarketTypeList builder] mergeFromInputStream:input] build];
}
+ (MMarketTypeList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketTypeList*)[[[MMarketTypeList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketTypeList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarketTypeList*)[[[MMarketTypeList builder] mergeFromCodedInputStream:input] build];
}
+ (MMarketTypeList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketTypeList*)[[[MMarketTypeList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketTypeList_Builder*) builder {
  return [[[MMarketTypeList_Builder alloc] init] autorelease];
}
+ (MMarketTypeList_Builder*) builderWithPrototype:(MMarketTypeList*) prototype {
  return [[MMarketTypeList builder] mergeFrom:prototype];
}
- (MMarketTypeList_Builder*) builder {
  return [MMarketTypeList builder];
}
@end

@interface MMarketTypeList_Builder()
@property (retain) MMarketTypeList* protobufBuilderResult;
@end

@implementation MMarketTypeList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarketTypeList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarketTypeList_Builder*) clear {
  self.protobufBuilderResult = [[[MMarketTypeList alloc] init] autorelease];
  return self;
}
- (MMarketTypeList_Builder*) clone {
  return [MMarketTypeList builderWithPrototype:protobufBuilderResult];
}
- (MMarketTypeList*) defaultInstance {
  return [MMarketTypeList defaultInstance];
}
- (MMarketTypeList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarketTypeList*) buildPartial {
  MMarketTypeList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarketTypeList_Builder*) mergeFrom:(MMarketTypeList*) other {
  if (other == [MMarketTypeList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (protobufBuilderResult.mutableListList == nil) {
      protobufBuilderResult.mutableListList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableListList addObjectsFromArray:other.mutableListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarketTypeList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarketTypeList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MMarketType_Builder* subBuilder = [MMarketType builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (protobufBuilderResult.mutableListList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableListList;
}
- (MMarketType*) listAtIndex:(int32_t) index {
  return [protobufBuilderResult listAtIndex:index];
}
- (MMarketTypeList_Builder*) replaceListAtIndex:(int32_t) index with:(MMarketType*) _value {
  [protobufBuilderResult.mutableListList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MMarketTypeList_Builder*) addAllList:(NSArray*) values {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObjectsFromArray:values];
  return self;
}
- (MMarketTypeList_Builder*) clearListList {
  protobufBuilderResult.mutableListList = nil;
  return self;
}
- (MMarketTypeList_Builder*) addList:(MMarketType*) _value {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObject:_value];
  return self;
}
@end

@interface MMarketGoods ()
@property (retain) NSString* id;
@property (retain) NSString* name;
@property (retain) NSString* img;
@property (retain) NSString* price;
@end

@implementation MMarketGoods

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value {
  hasName_ = !!_value;
}
@synthesize name;
- (BOOL) hasImg {
  return !!hasImg_;
}
- (void) setHasImg:(BOOL) _value {
  hasImg_ = !!_value;
}
@synthesize img;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) _value {
  hasPrice_ = !!_value;
}
@synthesize price;
- (void) dealloc {
  self.id = nil;
  self.name = nil;
  self.img = nil;
  self.price = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.name = @"";
    self.img = @"";
    self.price = @"";
  }
  return self;
}
static MMarketGoods* defaultMMarketGoodsInstance = nil;
+ (void) initialize {
  if (self == [MMarketGoods class]) {
    defaultMMarketGoodsInstance = [[MMarketGoods alloc] init];
  }
}
+ (MMarketGoods*) defaultInstance {
  return defaultMMarketGoodsInstance;
}
- (MMarketGoods*) defaultInstance {
  return defaultMMarketGoodsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasImg) {
    [output writeString:3 value:self.img];
  }
  if (self.hasPrice) {
    [output writeString:4 value:self.price];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasImg) {
    size += computeStringSize(3, self.img);
  }
  if (self.hasPrice) {
    size += computeStringSize(4, self.price);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarketGoods*) parseFromData:(NSData*) data {
  return (MMarketGoods*)[[[MMarketGoods builder] mergeFromData:data] build];
}
+ (MMarketGoods*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketGoods*)[[[MMarketGoods builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarketGoods*) parseFromInputStream:(NSInputStream*) input {
  return (MMarketGoods*)[[[MMarketGoods builder] mergeFromInputStream:input] build];
}
+ (MMarketGoods*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketGoods*)[[[MMarketGoods builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketGoods*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarketGoods*)[[[MMarketGoods builder] mergeFromCodedInputStream:input] build];
}
+ (MMarketGoods*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketGoods*)[[[MMarketGoods builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketGoods_Builder*) builder {
  return [[[MMarketGoods_Builder alloc] init] autorelease];
}
+ (MMarketGoods_Builder*) builderWithPrototype:(MMarketGoods*) prototype {
  return [[MMarketGoods builder] mergeFrom:prototype];
}
- (MMarketGoods_Builder*) builder {
  return [MMarketGoods builder];
}
@end

@interface MMarketGoods_Builder()
@property (retain) MMarketGoods* protobufBuilderResult;
@end

@implementation MMarketGoods_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarketGoods alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarketGoods_Builder*) clear {
  self.protobufBuilderResult = [[[MMarketGoods alloc] init] autorelease];
  return self;
}
- (MMarketGoods_Builder*) clone {
  return [MMarketGoods builderWithPrototype:protobufBuilderResult];
}
- (MMarketGoods*) defaultInstance {
  return [MMarketGoods defaultInstance];
}
- (MMarketGoods*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarketGoods*) buildPartial {
  MMarketGoods* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarketGoods_Builder*) mergeFrom:(MMarketGoods*) other {
  if (other == [MMarketGoods defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasImg) {
    [self setImg:other.img];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarketGoods_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarketGoods_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setImg:[input readString]];
        break;
      }
      case 34: {
        [self setPrice:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MMarketGoods_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MMarketGoods_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasName {
  return protobufBuilderResult.hasName;
}
- (NSString*) name {
  return protobufBuilderResult.name;
}
- (MMarketGoods_Builder*) setName:(NSString*) _value {
  protobufBuilderResult.hasName = YES;
  protobufBuilderResult.name = _value;
  return self;
}
- (MMarketGoods_Builder*) clearName {
  protobufBuilderResult.hasName = NO;
  protobufBuilderResult.name = @"";
  return self;
}
- (BOOL) hasImg {
  return protobufBuilderResult.hasImg;
}
- (NSString*) img {
  return protobufBuilderResult.img;
}
- (MMarketGoods_Builder*) setImg:(NSString*) _value {
  protobufBuilderResult.hasImg = YES;
  protobufBuilderResult.img = _value;
  return self;
}
- (MMarketGoods_Builder*) clearImg {
  protobufBuilderResult.hasImg = NO;
  protobufBuilderResult.img = @"";
  return self;
}
- (BOOL) hasPrice {
  return protobufBuilderResult.hasPrice;
}
- (NSString*) price {
  return protobufBuilderResult.price;
}
- (MMarketGoods_Builder*) setPrice:(NSString*) _value {
  protobufBuilderResult.hasPrice = YES;
  protobufBuilderResult.price = _value;
  return self;
}
- (MMarketGoods_Builder*) clearPrice {
  protobufBuilderResult.hasPrice = NO;
  protobufBuilderResult.price = @"";
  return self;
}
@end

@interface MMarketGoodsList ()
@property (retain) NSMutableArray* mutableListList;
@end

@implementation MMarketGoodsList

@synthesize mutableListList;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MMarketGoodsList* defaultMMarketGoodsListInstance = nil;
+ (void) initialize {
  if (self == [MMarketGoodsList class]) {
    defaultMMarketGoodsListInstance = [[MMarketGoodsList alloc] init];
  }
}
+ (MMarketGoodsList*) defaultInstance {
  return defaultMMarketGoodsListInstance;
}
- (MMarketGoodsList*) defaultInstance {
  return defaultMMarketGoodsListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (MMarketGoods*) listAtIndex:(int32_t) index {
  id _value = [mutableListList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MMarketGoods* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MMarketGoods* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarketGoodsList*) parseFromData:(NSData*) data {
  return (MMarketGoodsList*)[[[MMarketGoodsList builder] mergeFromData:data] build];
}
+ (MMarketGoodsList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketGoodsList*)[[[MMarketGoodsList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarketGoodsList*) parseFromInputStream:(NSInputStream*) input {
  return (MMarketGoodsList*)[[[MMarketGoodsList builder] mergeFromInputStream:input] build];
}
+ (MMarketGoodsList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketGoodsList*)[[[MMarketGoodsList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketGoodsList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarketGoodsList*)[[[MMarketGoodsList builder] mergeFromCodedInputStream:input] build];
}
+ (MMarketGoodsList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketGoodsList*)[[[MMarketGoodsList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketGoodsList_Builder*) builder {
  return [[[MMarketGoodsList_Builder alloc] init] autorelease];
}
+ (MMarketGoodsList_Builder*) builderWithPrototype:(MMarketGoodsList*) prototype {
  return [[MMarketGoodsList builder] mergeFrom:prototype];
}
- (MMarketGoodsList_Builder*) builder {
  return [MMarketGoodsList builder];
}
@end

@interface MMarketGoodsList_Builder()
@property (retain) MMarketGoodsList* protobufBuilderResult;
@end

@implementation MMarketGoodsList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarketGoodsList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarketGoodsList_Builder*) clear {
  self.protobufBuilderResult = [[[MMarketGoodsList alloc] init] autorelease];
  return self;
}
- (MMarketGoodsList_Builder*) clone {
  return [MMarketGoodsList builderWithPrototype:protobufBuilderResult];
}
- (MMarketGoodsList*) defaultInstance {
  return [MMarketGoodsList defaultInstance];
}
- (MMarketGoodsList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarketGoodsList*) buildPartial {
  MMarketGoodsList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarketGoodsList_Builder*) mergeFrom:(MMarketGoodsList*) other {
  if (other == [MMarketGoodsList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (protobufBuilderResult.mutableListList == nil) {
      protobufBuilderResult.mutableListList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableListList addObjectsFromArray:other.mutableListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarketGoodsList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarketGoodsList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MMarketGoods_Builder* subBuilder = [MMarketGoods builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (protobufBuilderResult.mutableListList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableListList;
}
- (MMarketGoods*) listAtIndex:(int32_t) index {
  return [protobufBuilderResult listAtIndex:index];
}
- (MMarketGoodsList_Builder*) replaceListAtIndex:(int32_t) index with:(MMarketGoods*) _value {
  [protobufBuilderResult.mutableListList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MMarketGoodsList_Builder*) addAllList:(NSArray*) values {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObjectsFromArray:values];
  return self;
}
- (MMarketGoodsList_Builder*) clearListList {
  protobufBuilderResult.mutableListList = nil;
  return self;
}
- (MMarketGoodsList_Builder*) addList:(MMarketGoods*) _value {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObject:_value];
  return self;
}
@end

@interface MMarketAct ()
@property (retain) NSString* id;
@property (retain) NSString* title;
@property (retain) NSString* img;
@property (retain) NSString* time;
@property (retain) NSString* url;
@end

@implementation MMarketAct

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value {
  hasTitle_ = !!_value;
}
@synthesize title;
- (BOOL) hasImg {
  return !!hasImg_;
}
- (void) setHasImg:(BOOL) _value {
  hasImg_ = !!_value;
}
@synthesize img;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value {
  hasTime_ = !!_value;
}
@synthesize time;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value {
  hasUrl_ = !!_value;
}
@synthesize url;
- (void) dealloc {
  self.id = nil;
  self.title = nil;
  self.img = nil;
  self.time = nil;
  self.url = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.title = @"";
    self.img = @"";
    self.time = @"";
    self.url = @"";
  }
  return self;
}
static MMarketAct* defaultMMarketActInstance = nil;
+ (void) initialize {
  if (self == [MMarketAct class]) {
    defaultMMarketActInstance = [[MMarketAct alloc] init];
  }
}
+ (MMarketAct*) defaultInstance {
  return defaultMMarketActInstance;
}
- (MMarketAct*) defaultInstance {
  return defaultMMarketActInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasImg) {
    [output writeString:3 value:self.img];
  }
  if (self.hasTime) {
    [output writeString:4 value:self.time];
  }
  if (self.hasUrl) {
    [output writeString:5 value:self.url];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasTitle) {
    size += computeStringSize(2, self.title);
  }
  if (self.hasImg) {
    size += computeStringSize(3, self.img);
  }
  if (self.hasTime) {
    size += computeStringSize(4, self.time);
  }
  if (self.hasUrl) {
    size += computeStringSize(5, self.url);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarketAct*) parseFromData:(NSData*) data {
  return (MMarketAct*)[[[MMarketAct builder] mergeFromData:data] build];
}
+ (MMarketAct*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketAct*)[[[MMarketAct builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarketAct*) parseFromInputStream:(NSInputStream*) input {
  return (MMarketAct*)[[[MMarketAct builder] mergeFromInputStream:input] build];
}
+ (MMarketAct*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketAct*)[[[MMarketAct builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketAct*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarketAct*)[[[MMarketAct builder] mergeFromCodedInputStream:input] build];
}
+ (MMarketAct*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketAct*)[[[MMarketAct builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketAct_Builder*) builder {
  return [[[MMarketAct_Builder alloc] init] autorelease];
}
+ (MMarketAct_Builder*) builderWithPrototype:(MMarketAct*) prototype {
  return [[MMarketAct builder] mergeFrom:prototype];
}
- (MMarketAct_Builder*) builder {
  return [MMarketAct builder];
}
@end

@interface MMarketAct_Builder()
@property (retain) MMarketAct* protobufBuilderResult;
@end

@implementation MMarketAct_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarketAct alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarketAct_Builder*) clear {
  self.protobufBuilderResult = [[[MMarketAct alloc] init] autorelease];
  return self;
}
- (MMarketAct_Builder*) clone {
  return [MMarketAct builderWithPrototype:protobufBuilderResult];
}
- (MMarketAct*) defaultInstance {
  return [MMarketAct defaultInstance];
}
- (MMarketAct*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarketAct*) buildPartial {
  MMarketAct* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarketAct_Builder*) mergeFrom:(MMarketAct*) other {
  if (other == [MMarketAct defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasImg) {
    [self setImg:other.img];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarketAct_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarketAct_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self setImg:[input readString]];
        break;
      }
      case 34: {
        [self setTime:[input readString]];
        break;
      }
      case 42: {
        [self setUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MMarketAct_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MMarketAct_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasTitle {
  return protobufBuilderResult.hasTitle;
}
- (NSString*) title {
  return protobufBuilderResult.title;
}
- (MMarketAct_Builder*) setTitle:(NSString*) _value {
  protobufBuilderResult.hasTitle = YES;
  protobufBuilderResult.title = _value;
  return self;
}
- (MMarketAct_Builder*) clearTitle {
  protobufBuilderResult.hasTitle = NO;
  protobufBuilderResult.title = @"";
  return self;
}
- (BOOL) hasImg {
  return protobufBuilderResult.hasImg;
}
- (NSString*) img {
  return protobufBuilderResult.img;
}
- (MMarketAct_Builder*) setImg:(NSString*) _value {
  protobufBuilderResult.hasImg = YES;
  protobufBuilderResult.img = _value;
  return self;
}
- (MMarketAct_Builder*) clearImg {
  protobufBuilderResult.hasImg = NO;
  protobufBuilderResult.img = @"";
  return self;
}
- (BOOL) hasTime {
  return protobufBuilderResult.hasTime;
}
- (NSString*) time {
  return protobufBuilderResult.time;
}
- (MMarketAct_Builder*) setTime:(NSString*) _value {
  protobufBuilderResult.hasTime = YES;
  protobufBuilderResult.time = _value;
  return self;
}
- (MMarketAct_Builder*) clearTime {
  protobufBuilderResult.hasTime = NO;
  protobufBuilderResult.time = @"";
  return self;
}
- (BOOL) hasUrl {
  return protobufBuilderResult.hasUrl;
}
- (NSString*) url {
  return protobufBuilderResult.url;
}
- (MMarketAct_Builder*) setUrl:(NSString*) _value {
  protobufBuilderResult.hasUrl = YES;
  protobufBuilderResult.url = _value;
  return self;
}
- (MMarketAct_Builder*) clearUrl {
  protobufBuilderResult.hasUrl = NO;
  protobufBuilderResult.url = @"";
  return self;
}
@end

@interface MMarketActList ()
@property (retain) NSMutableArray* mutableListList;
@end

@implementation MMarketActList

@synthesize mutableListList;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MMarketActList* defaultMMarketActListInstance = nil;
+ (void) initialize {
  if (self == [MMarketActList class]) {
    defaultMMarketActListInstance = [[MMarketActList alloc] init];
  }
}
+ (MMarketActList*) defaultInstance {
  return defaultMMarketActListInstance;
}
- (MMarketActList*) defaultInstance {
  return defaultMMarketActListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (MMarketAct*) listAtIndex:(int32_t) index {
  id _value = [mutableListList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MMarketAct* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MMarketAct* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarketActList*) parseFromData:(NSData*) data {
  return (MMarketActList*)[[[MMarketActList builder] mergeFromData:data] build];
}
+ (MMarketActList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketActList*)[[[MMarketActList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarketActList*) parseFromInputStream:(NSInputStream*) input {
  return (MMarketActList*)[[[MMarketActList builder] mergeFromInputStream:input] build];
}
+ (MMarketActList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketActList*)[[[MMarketActList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketActList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarketActList*)[[[MMarketActList builder] mergeFromCodedInputStream:input] build];
}
+ (MMarketActList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketActList*)[[[MMarketActList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketActList_Builder*) builder {
  return [[[MMarketActList_Builder alloc] init] autorelease];
}
+ (MMarketActList_Builder*) builderWithPrototype:(MMarketActList*) prototype {
  return [[MMarketActList builder] mergeFrom:prototype];
}
- (MMarketActList_Builder*) builder {
  return [MMarketActList builder];
}
@end

@interface MMarketActList_Builder()
@property (retain) MMarketActList* protobufBuilderResult;
@end

@implementation MMarketActList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarketActList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarketActList_Builder*) clear {
  self.protobufBuilderResult = [[[MMarketActList alloc] init] autorelease];
  return self;
}
- (MMarketActList_Builder*) clone {
  return [MMarketActList builderWithPrototype:protobufBuilderResult];
}
- (MMarketActList*) defaultInstance {
  return [MMarketActList defaultInstance];
}
- (MMarketActList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarketActList*) buildPartial {
  MMarketActList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarketActList_Builder*) mergeFrom:(MMarketActList*) other {
  if (other == [MMarketActList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (protobufBuilderResult.mutableListList == nil) {
      protobufBuilderResult.mutableListList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableListList addObjectsFromArray:other.mutableListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarketActList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarketActList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MMarketAct_Builder* subBuilder = [MMarketAct builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (protobufBuilderResult.mutableListList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableListList;
}
- (MMarketAct*) listAtIndex:(int32_t) index {
  return [protobufBuilderResult listAtIndex:index];
}
- (MMarketActList_Builder*) replaceListAtIndex:(int32_t) index with:(MMarketAct*) _value {
  [protobufBuilderResult.mutableListList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MMarketActList_Builder*) addAllList:(NSArray*) values {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObjectsFromArray:values];
  return self;
}
- (MMarketActList_Builder*) clearListList {
  protobufBuilderResult.mutableListList = nil;
  return self;
}
- (MMarketActList_Builder*) addList:(MMarketAct*) _value {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObject:_value];
  return self;
}
@end

@interface MMarket ()
@property (retain) NSString* id;
@property (retain) NSString* title;
@property (retain) NSString* distance;
@end

@implementation MMarket

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value {
  hasTitle_ = !!_value;
}
@synthesize title;
- (BOOL) hasDistance {
  return !!hasDistance_;
}
- (void) setHasDistance:(BOOL) _value {
  hasDistance_ = !!_value;
}
@synthesize distance;
- (void) dealloc {
  self.id = nil;
  self.title = nil;
  self.distance = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.title = @"";
    self.distance = @"";
  }
  return self;
}
static MMarket* defaultMMarketInstance = nil;
+ (void) initialize {
  if (self == [MMarket class]) {
    defaultMMarketInstance = [[MMarket alloc] init];
  }
}
+ (MMarket*) defaultInstance {
  return defaultMMarketInstance;
}
- (MMarket*) defaultInstance {
  return defaultMMarketInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasDistance) {
    [output writeString:3 value:self.distance];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasTitle) {
    size += computeStringSize(2, self.title);
  }
  if (self.hasDistance) {
    size += computeStringSize(3, self.distance);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarket*) parseFromData:(NSData*) data {
  return (MMarket*)[[[MMarket builder] mergeFromData:data] build];
}
+ (MMarket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarket*)[[[MMarket builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarket*) parseFromInputStream:(NSInputStream*) input {
  return (MMarket*)[[[MMarket builder] mergeFromInputStream:input] build];
}
+ (MMarket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarket*)[[[MMarket builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarket*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarket*)[[[MMarket builder] mergeFromCodedInputStream:input] build];
}
+ (MMarket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarket*)[[[MMarket builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarket_Builder*) builder {
  return [[[MMarket_Builder alloc] init] autorelease];
}
+ (MMarket_Builder*) builderWithPrototype:(MMarket*) prototype {
  return [[MMarket builder] mergeFrom:prototype];
}
- (MMarket_Builder*) builder {
  return [MMarket builder];
}
@end

@interface MMarket_Builder()
@property (retain) MMarket* protobufBuilderResult;
@end

@implementation MMarket_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarket alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarket_Builder*) clear {
  self.protobufBuilderResult = [[[MMarket alloc] init] autorelease];
  return self;
}
- (MMarket_Builder*) clone {
  return [MMarket builderWithPrototype:protobufBuilderResult];
}
- (MMarket*) defaultInstance {
  return [MMarket defaultInstance];
}
- (MMarket*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarket*) buildPartial {
  MMarket* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarket_Builder*) mergeFrom:(MMarket*) other {
  if (other == [MMarket defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasDistance) {
    [self setDistance:other.distance];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarket_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarket_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self setDistance:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MMarket_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MMarket_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasTitle {
  return protobufBuilderResult.hasTitle;
}
- (NSString*) title {
  return protobufBuilderResult.title;
}
- (MMarket_Builder*) setTitle:(NSString*) _value {
  protobufBuilderResult.hasTitle = YES;
  protobufBuilderResult.title = _value;
  return self;
}
- (MMarket_Builder*) clearTitle {
  protobufBuilderResult.hasTitle = NO;
  protobufBuilderResult.title = @"";
  return self;
}
- (BOOL) hasDistance {
  return protobufBuilderResult.hasDistance;
}
- (NSString*) distance {
  return protobufBuilderResult.distance;
}
- (MMarket_Builder*) setDistance:(NSString*) _value {
  protobufBuilderResult.hasDistance = YES;
  protobufBuilderResult.distance = _value;
  return self;
}
- (MMarket_Builder*) clearDistance {
  protobufBuilderResult.hasDistance = NO;
  protobufBuilderResult.distance = @"";
  return self;
}
@end

@interface MMarketList ()
@property (retain) NSMutableArray* mutableListList;
@end

@implementation MMarketList

@synthesize mutableListList;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MMarketList* defaultMMarketListInstance = nil;
+ (void) initialize {
  if (self == [MMarketList class]) {
    defaultMMarketListInstance = [[MMarketList alloc] init];
  }
}
+ (MMarketList*) defaultInstance {
  return defaultMMarketListInstance;
}
- (MMarketList*) defaultInstance {
  return defaultMMarketListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (MMarket*) listAtIndex:(int32_t) index {
  id _value = [mutableListList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MMarket* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MMarket* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMarketList*) parseFromData:(NSData*) data {
  return (MMarketList*)[[[MMarketList builder] mergeFromData:data] build];
}
+ (MMarketList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketList*)[[[MMarketList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMarketList*) parseFromInputStream:(NSInputStream*) input {
  return (MMarketList*)[[[MMarketList builder] mergeFromInputStream:input] build];
}
+ (MMarketList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketList*)[[[MMarketList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMarketList*)[[[MMarketList builder] mergeFromCodedInputStream:input] build];
}
+ (MMarketList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMarketList*)[[[MMarketList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMarketList_Builder*) builder {
  return [[[MMarketList_Builder alloc] init] autorelease];
}
+ (MMarketList_Builder*) builderWithPrototype:(MMarketList*) prototype {
  return [[MMarketList builder] mergeFrom:prototype];
}
- (MMarketList_Builder*) builder {
  return [MMarketList builder];
}
@end

@interface MMarketList_Builder()
@property (retain) MMarketList* protobufBuilderResult;
@end

@implementation MMarketList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MMarketList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MMarketList_Builder*) clear {
  self.protobufBuilderResult = [[[MMarketList alloc] init] autorelease];
  return self;
}
- (MMarketList_Builder*) clone {
  return [MMarketList builderWithPrototype:protobufBuilderResult];
}
- (MMarketList*) defaultInstance {
  return [MMarketList defaultInstance];
}
- (MMarketList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMarketList*) buildPartial {
  MMarketList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MMarketList_Builder*) mergeFrom:(MMarketList*) other {
  if (other == [MMarketList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (protobufBuilderResult.mutableListList == nil) {
      protobufBuilderResult.mutableListList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableListList addObjectsFromArray:other.mutableListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMarketList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMarketList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MMarket_Builder* subBuilder = [MMarket builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (protobufBuilderResult.mutableListList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableListList;
}
- (MMarket*) listAtIndex:(int32_t) index {
  return [protobufBuilderResult listAtIndex:index];
}
- (MMarketList_Builder*) replaceListAtIndex:(int32_t) index with:(MMarket*) _value {
  [protobufBuilderResult.mutableListList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MMarketList_Builder*) addAllList:(NSArray*) values {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObjectsFromArray:values];
  return self;
}
- (MMarketList_Builder*) clearListList {
  protobufBuilderResult.mutableListList = nil;
  return self;
}
- (MMarketList_Builder*) addList:(MMarket*) _value {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObject:_value];
  return self;
}
@end

