// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "My.pb.h"

@implementation MyRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MyRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MCreditsLog ()
@property (retain) NSString* id;
@property int32_t type;
@property (retain) NSString* item;
@property (retain) NSString* info;
@property (retain) NSString* num;
@property (retain) NSString* time;
@end

@implementation MCreditsLog

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value {
  hasType_ = !!_value;
}
@synthesize type;
- (BOOL) hasItem {
  return !!hasItem_;
}
- (void) setHasItem:(BOOL) _value {
  hasItem_ = !!_value;
}
@synthesize item;
- (BOOL) hasInfo {
  return !!hasInfo_;
}
- (void) setHasInfo:(BOOL) _value {
  hasInfo_ = !!_value;
}
@synthesize info;
- (BOOL) hasNum {
  return !!hasNum_;
}
- (void) setHasNum:(BOOL) _value {
  hasNum_ = !!_value;
}
@synthesize num;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value {
  hasTime_ = !!_value;
}
@synthesize time;
- (void) dealloc {
  self.id = nil;
  self.item = nil;
  self.info = nil;
  self.num = nil;
  self.time = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.type = 0;
    self.item = @"";
    self.info = @"";
    self.num = @"";
    self.time = @"";
  }
  return self;
}
static MCreditsLog* defaultMCreditsLogInstance = nil;
+ (void) initialize {
  if (self == [MCreditsLog class]) {
    defaultMCreditsLogInstance = [[MCreditsLog alloc] init];
  }
}
+ (MCreditsLog*) defaultInstance {
  return defaultMCreditsLogInstance;
}
- (MCreditsLog*) defaultInstance {
  return defaultMCreditsLogInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasType) {
    [output writeInt32:2 value:self.type];
  }
  if (self.hasItem) {
    [output writeString:3 value:self.item];
  }
  if (self.hasInfo) {
    [output writeString:4 value:self.info];
  }
  if (self.hasNum) {
    [output writeString:5 value:self.num];
  }
  if (self.hasTime) {
    [output writeString:6 value:self.time];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasType) {
    size += computeInt32Size(2, self.type);
  }
  if (self.hasItem) {
    size += computeStringSize(3, self.item);
  }
  if (self.hasInfo) {
    size += computeStringSize(4, self.info);
  }
  if (self.hasNum) {
    size += computeStringSize(5, self.num);
  }
  if (self.hasTime) {
    size += computeStringSize(6, self.time);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MCreditsLog*) parseFromData:(NSData*) data {
  return (MCreditsLog*)[[[MCreditsLog builder] mergeFromData:data] build];
}
+ (MCreditsLog*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCreditsLog*)[[[MCreditsLog builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MCreditsLog*) parseFromInputStream:(NSInputStream*) input {
  return (MCreditsLog*)[[[MCreditsLog builder] mergeFromInputStream:input] build];
}
+ (MCreditsLog*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCreditsLog*)[[[MCreditsLog builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MCreditsLog*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MCreditsLog*)[[[MCreditsLog builder] mergeFromCodedInputStream:input] build];
}
+ (MCreditsLog*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCreditsLog*)[[[MCreditsLog builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MCreditsLog_Builder*) builder {
  return [[[MCreditsLog_Builder alloc] init] autorelease];
}
+ (MCreditsLog_Builder*) builderWithPrototype:(MCreditsLog*) prototype {
  return [[MCreditsLog builder] mergeFrom:prototype];
}
- (MCreditsLog_Builder*) builder {
  return [MCreditsLog builder];
}
@end

@interface MCreditsLog_Builder()
@property (retain) MCreditsLog* protobufBuilderResult;
@end

@implementation MCreditsLog_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MCreditsLog alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MCreditsLog_Builder*) clear {
  self.protobufBuilderResult = [[[MCreditsLog alloc] init] autorelease];
  return self;
}
- (MCreditsLog_Builder*) clone {
  return [MCreditsLog builderWithPrototype:protobufBuilderResult];
}
- (MCreditsLog*) defaultInstance {
  return [MCreditsLog defaultInstance];
}
- (MCreditsLog*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MCreditsLog*) buildPartial {
  MCreditsLog* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MCreditsLog_Builder*) mergeFrom:(MCreditsLog*) other {
  if (other == [MCreditsLog defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasItem) {
    [self setItem:other.item];
  }
  if (other.hasInfo) {
    [self setInfo:other.info];
  }
  if (other.hasNum) {
    [self setNum:other.num];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MCreditsLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MCreditsLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 16: {
        [self setType:[input readInt32]];
        break;
      }
      case 26: {
        [self setItem:[input readString]];
        break;
      }
      case 34: {
        [self setInfo:[input readString]];
        break;
      }
      case 42: {
        [self setNum:[input readString]];
        break;
      }
      case 50: {
        [self setTime:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MCreditsLog_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MCreditsLog_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasType {
  return protobufBuilderResult.hasType;
}
- (int32_t) type {
  return protobufBuilderResult.type;
}
- (MCreditsLog_Builder*) setType:(int32_t) _value {
  protobufBuilderResult.hasType = YES;
  protobufBuilderResult.type = _value;
  return self;
}
- (MCreditsLog_Builder*) clearType {
  protobufBuilderResult.hasType = NO;
  protobufBuilderResult.type = 0;
  return self;
}
- (BOOL) hasItem {
  return protobufBuilderResult.hasItem;
}
- (NSString*) item {
  return protobufBuilderResult.item;
}
- (MCreditsLog_Builder*) setItem:(NSString*) _value {
  protobufBuilderResult.hasItem = YES;
  protobufBuilderResult.item = _value;
  return self;
}
- (MCreditsLog_Builder*) clearItem {
  protobufBuilderResult.hasItem = NO;
  protobufBuilderResult.item = @"";
  return self;
}
- (BOOL) hasInfo {
  return protobufBuilderResult.hasInfo;
}
- (NSString*) info {
  return protobufBuilderResult.info;
}
- (MCreditsLog_Builder*) setInfo:(NSString*) _value {
  protobufBuilderResult.hasInfo = YES;
  protobufBuilderResult.info = _value;
  return self;
}
- (MCreditsLog_Builder*) clearInfo {
  protobufBuilderResult.hasInfo = NO;
  protobufBuilderResult.info = @"";
  return self;
}
- (BOOL) hasNum {
  return protobufBuilderResult.hasNum;
}
- (NSString*) num {
  return protobufBuilderResult.num;
}
- (MCreditsLog_Builder*) setNum:(NSString*) _value {
  protobufBuilderResult.hasNum = YES;
  protobufBuilderResult.num = _value;
  return self;
}
- (MCreditsLog_Builder*) clearNum {
  protobufBuilderResult.hasNum = NO;
  protobufBuilderResult.num = @"";
  return self;
}
- (BOOL) hasTime {
  return protobufBuilderResult.hasTime;
}
- (NSString*) time {
  return protobufBuilderResult.time;
}
- (MCreditsLog_Builder*) setTime:(NSString*) _value {
  protobufBuilderResult.hasTime = YES;
  protobufBuilderResult.time = _value;
  return self;
}
- (MCreditsLog_Builder*) clearTime {
  protobufBuilderResult.hasTime = NO;
  protobufBuilderResult.time = @"";
  return self;
}
@end

@interface MCreditsLogList ()
@property (retain) NSMutableArray* mutableListList;
@end

@implementation MCreditsLogList

@synthesize mutableListList;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MCreditsLogList* defaultMCreditsLogListInstance = nil;
+ (void) initialize {
  if (self == [MCreditsLogList class]) {
    defaultMCreditsLogListInstance = [[MCreditsLogList alloc] init];
  }
}
+ (MCreditsLogList*) defaultInstance {
  return defaultMCreditsLogListInstance;
}
- (MCreditsLogList*) defaultInstance {
  return defaultMCreditsLogListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (MCreditsLog*) listAtIndex:(int32_t) index {
  id _value = [mutableListList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MCreditsLog* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MCreditsLog* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MCreditsLogList*) parseFromData:(NSData*) data {
  return (MCreditsLogList*)[[[MCreditsLogList builder] mergeFromData:data] build];
}
+ (MCreditsLogList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCreditsLogList*)[[[MCreditsLogList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MCreditsLogList*) parseFromInputStream:(NSInputStream*) input {
  return (MCreditsLogList*)[[[MCreditsLogList builder] mergeFromInputStream:input] build];
}
+ (MCreditsLogList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCreditsLogList*)[[[MCreditsLogList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MCreditsLogList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MCreditsLogList*)[[[MCreditsLogList builder] mergeFromCodedInputStream:input] build];
}
+ (MCreditsLogList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MCreditsLogList*)[[[MCreditsLogList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MCreditsLogList_Builder*) builder {
  return [[[MCreditsLogList_Builder alloc] init] autorelease];
}
+ (MCreditsLogList_Builder*) builderWithPrototype:(MCreditsLogList*) prototype {
  return [[MCreditsLogList builder] mergeFrom:prototype];
}
- (MCreditsLogList_Builder*) builder {
  return [MCreditsLogList builder];
}
@end

@interface MCreditsLogList_Builder()
@property (retain) MCreditsLogList* protobufBuilderResult;
@end

@implementation MCreditsLogList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MCreditsLogList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MCreditsLogList_Builder*) clear {
  self.protobufBuilderResult = [[[MCreditsLogList alloc] init] autorelease];
  return self;
}
- (MCreditsLogList_Builder*) clone {
  return [MCreditsLogList builderWithPrototype:protobufBuilderResult];
}
- (MCreditsLogList*) defaultInstance {
  return [MCreditsLogList defaultInstance];
}
- (MCreditsLogList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MCreditsLogList*) buildPartial {
  MCreditsLogList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MCreditsLogList_Builder*) mergeFrom:(MCreditsLogList*) other {
  if (other == [MCreditsLogList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (protobufBuilderResult.mutableListList == nil) {
      protobufBuilderResult.mutableListList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableListList addObjectsFromArray:other.mutableListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MCreditsLogList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MCreditsLogList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MCreditsLog_Builder* subBuilder = [MCreditsLog builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (protobufBuilderResult.mutableListList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableListList;
}
- (MCreditsLog*) listAtIndex:(int32_t) index {
  return [protobufBuilderResult listAtIndex:index];
}
- (MCreditsLogList_Builder*) replaceListAtIndex:(int32_t) index with:(MCreditsLog*) _value {
  [protobufBuilderResult.mutableListList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MCreditsLogList_Builder*) addAllList:(NSArray*) values {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObjectsFromArray:values];
  return self;
}
- (MCreditsLogList_Builder*) clearListList {
  protobufBuilderResult.mutableListList = nil;
  return self;
}
- (MCreditsLogList_Builder*) addList:(MCreditsLog*) _value {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObject:_value];
  return self;
}
@end

