// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "User.pb.h"

@implementation UserRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MUser ()
@property (retain) NSString* id;
@property (retain) NSString* nickname;
@property int32_t isVerify;
@property int32_t sex;
@property (retain) NSString* headImg;
@property (retain) NSString* theme;
@property (retain) NSString* time;
@property (retain) NSString* distance;
@property (retain) NSString* createTime;
@property int32_t age;
@end

@implementation MUser

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value {
  hasNickname_ = !!_value;
}
@synthesize nickname;
- (BOOL) hasIsVerify {
  return !!hasIsVerify_;
}
- (void) setHasIsVerify:(BOOL) _value {
  hasIsVerify_ = !!_value;
}
@synthesize isVerify;
- (BOOL) hasSex {
  return !!hasSex_;
}
- (void) setHasSex:(BOOL) _value {
  hasSex_ = !!_value;
}
@synthesize sex;
- (BOOL) hasHeadImg {
  return !!hasHeadImg_;
}
- (void) setHasHeadImg:(BOOL) _value {
  hasHeadImg_ = !!_value;
}
@synthesize headImg;
- (BOOL) hasTheme {
  return !!hasTheme_;
}
- (void) setHasTheme:(BOOL) _value {
  hasTheme_ = !!_value;
}
@synthesize theme;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value {
  hasTime_ = !!_value;
}
@synthesize time;
- (BOOL) hasDistance {
  return !!hasDistance_;
}
- (void) setHasDistance:(BOOL) _value {
  hasDistance_ = !!_value;
}
@synthesize distance;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) _value {
  hasCreateTime_ = !!_value;
}
@synthesize createTime;
- (BOOL) hasAge {
  return !!hasAge_;
}
- (void) setHasAge:(BOOL) _value {
  hasAge_ = !!_value;
}
@synthesize age;
- (void) dealloc {
  self.id = nil;
  self.nickname = nil;
  self.headImg = nil;
  self.theme = nil;
  self.time = nil;
  self.distance = nil;
  self.createTime = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.nickname = @"";
    self.isVerify = 0;
    self.sex = 0;
    self.headImg = @"";
    self.theme = @"";
    self.time = @"";
    self.distance = @"";
    self.createTime = @"";
    self.age = 0;
  }
  return self;
}
static MUser* defaultMUserInstance = nil;
+ (void) initialize {
  if (self == [MUser class]) {
    defaultMUserInstance = [[MUser alloc] init];
  }
}
+ (MUser*) defaultInstance {
  return defaultMUserInstance;
}
- (MUser*) defaultInstance {
  return defaultMUserInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasNickname) {
    [output writeString:2 value:self.nickname];
  }
  if (self.hasIsVerify) {
    [output writeInt32:3 value:self.isVerify];
  }
  if (self.hasSex) {
    [output writeInt32:4 value:self.sex];
  }
  if (self.hasHeadImg) {
    [output writeString:5 value:self.headImg];
  }
  if (self.hasTheme) {
    [output writeString:6 value:self.theme];
  }
  if (self.hasTime) {
    [output writeString:7 value:self.time];
  }
  if (self.hasDistance) {
    [output writeString:8 value:self.distance];
  }
  if (self.hasCreateTime) {
    [output writeString:9 value:self.createTime];
  }
  if (self.hasAge) {
    [output writeInt32:10 value:self.age];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasNickname) {
    size += computeStringSize(2, self.nickname);
  }
  if (self.hasIsVerify) {
    size += computeInt32Size(3, self.isVerify);
  }
  if (self.hasSex) {
    size += computeInt32Size(4, self.sex);
  }
  if (self.hasHeadImg) {
    size += computeStringSize(5, self.headImg);
  }
  if (self.hasTheme) {
    size += computeStringSize(6, self.theme);
  }
  if (self.hasTime) {
    size += computeStringSize(7, self.time);
  }
  if (self.hasDistance) {
    size += computeStringSize(8, self.distance);
  }
  if (self.hasCreateTime) {
    size += computeStringSize(9, self.createTime);
  }
  if (self.hasAge) {
    size += computeInt32Size(10, self.age);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MUser*) parseFromData:(NSData*) data {
  return (MUser*)[[[MUser builder] mergeFromData:data] build];
}
+ (MUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUser*)[[[MUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MUser*) parseFromInputStream:(NSInputStream*) input {
  return (MUser*)[[[MUser builder] mergeFromInputStream:input] build];
}
+ (MUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUser*)[[[MUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MUser*)[[[MUser builder] mergeFromCodedInputStream:input] build];
}
+ (MUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUser*)[[[MUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUser_Builder*) builder {
  return [[[MUser_Builder alloc] init] autorelease];
}
+ (MUser_Builder*) builderWithPrototype:(MUser*) prototype {
  return [[MUser builder] mergeFrom:prototype];
}
- (MUser_Builder*) builder {
  return [MUser builder];
}
@end

@interface MUser_Builder()
@property (retain) MUser* protobufBuilderResult;
@end

@implementation MUser_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MUser alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MUser_Builder*) clear {
  self.protobufBuilderResult = [[[MUser alloc] init] autorelease];
  return self;
}
- (MUser_Builder*) clone {
  return [MUser builderWithPrototype:protobufBuilderResult];
}
- (MUser*) defaultInstance {
  return [MUser defaultInstance];
}
- (MUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MUser*) buildPartial {
  MUser* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MUser_Builder*) mergeFrom:(MUser*) other {
  if (other == [MUser defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasIsVerify) {
    [self setIsVerify:other.isVerify];
  }
  if (other.hasSex) {
    [self setSex:other.sex];
  }
  if (other.hasHeadImg) {
    [self setHeadImg:other.headImg];
  }
  if (other.hasTheme) {
    [self setTheme:other.theme];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasDistance) {
    [self setDistance:other.distance];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasAge) {
    [self setAge:other.age];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setNickname:[input readString]];
        break;
      }
      case 24: {
        [self setIsVerify:[input readInt32]];
        break;
      }
      case 32: {
        [self setSex:[input readInt32]];
        break;
      }
      case 42: {
        [self setHeadImg:[input readString]];
        break;
      }
      case 50: {
        [self setTheme:[input readString]];
        break;
      }
      case 58: {
        [self setTime:[input readString]];
        break;
      }
      case 66: {
        [self setDistance:[input readString]];
        break;
      }
      case 74: {
        [self setCreateTime:[input readString]];
        break;
      }
      case 80: {
        [self setAge:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MUser_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MUser_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasNickname {
  return protobufBuilderResult.hasNickname;
}
- (NSString*) nickname {
  return protobufBuilderResult.nickname;
}
- (MUser_Builder*) setNickname:(NSString*) _value {
  protobufBuilderResult.hasNickname = YES;
  protobufBuilderResult.nickname = _value;
  return self;
}
- (MUser_Builder*) clearNickname {
  protobufBuilderResult.hasNickname = NO;
  protobufBuilderResult.nickname = @"";
  return self;
}
- (BOOL) hasIsVerify {
  return protobufBuilderResult.hasIsVerify;
}
- (int32_t) isVerify {
  return protobufBuilderResult.isVerify;
}
- (MUser_Builder*) setIsVerify:(int32_t) _value {
  protobufBuilderResult.hasIsVerify = YES;
  protobufBuilderResult.isVerify = _value;
  return self;
}
- (MUser_Builder*) clearIsVerify {
  protobufBuilderResult.hasIsVerify = NO;
  protobufBuilderResult.isVerify = 0;
  return self;
}
- (BOOL) hasSex {
  return protobufBuilderResult.hasSex;
}
- (int32_t) sex {
  return protobufBuilderResult.sex;
}
- (MUser_Builder*) setSex:(int32_t) _value {
  protobufBuilderResult.hasSex = YES;
  protobufBuilderResult.sex = _value;
  return self;
}
- (MUser_Builder*) clearSex {
  protobufBuilderResult.hasSex = NO;
  protobufBuilderResult.sex = 0;
  return self;
}
- (BOOL) hasHeadImg {
  return protobufBuilderResult.hasHeadImg;
}
- (NSString*) headImg {
  return protobufBuilderResult.headImg;
}
- (MUser_Builder*) setHeadImg:(NSString*) _value {
  protobufBuilderResult.hasHeadImg = YES;
  protobufBuilderResult.headImg = _value;
  return self;
}
- (MUser_Builder*) clearHeadImg {
  protobufBuilderResult.hasHeadImg = NO;
  protobufBuilderResult.headImg = @"";
  return self;
}
- (BOOL) hasTheme {
  return protobufBuilderResult.hasTheme;
}
- (NSString*) theme {
  return protobufBuilderResult.theme;
}
- (MUser_Builder*) setTheme:(NSString*) _value {
  protobufBuilderResult.hasTheme = YES;
  protobufBuilderResult.theme = _value;
  return self;
}
- (MUser_Builder*) clearTheme {
  protobufBuilderResult.hasTheme = NO;
  protobufBuilderResult.theme = @"";
  return self;
}
- (BOOL) hasTime {
  return protobufBuilderResult.hasTime;
}
- (NSString*) time {
  return protobufBuilderResult.time;
}
- (MUser_Builder*) setTime:(NSString*) _value {
  protobufBuilderResult.hasTime = YES;
  protobufBuilderResult.time = _value;
  return self;
}
- (MUser_Builder*) clearTime {
  protobufBuilderResult.hasTime = NO;
  protobufBuilderResult.time = @"";
  return self;
}
- (BOOL) hasDistance {
  return protobufBuilderResult.hasDistance;
}
- (NSString*) distance {
  return protobufBuilderResult.distance;
}
- (MUser_Builder*) setDistance:(NSString*) _value {
  protobufBuilderResult.hasDistance = YES;
  protobufBuilderResult.distance = _value;
  return self;
}
- (MUser_Builder*) clearDistance {
  protobufBuilderResult.hasDistance = NO;
  protobufBuilderResult.distance = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return protobufBuilderResult.hasCreateTime;
}
- (NSString*) createTime {
  return protobufBuilderResult.createTime;
}
- (MUser_Builder*) setCreateTime:(NSString*) _value {
  protobufBuilderResult.hasCreateTime = YES;
  protobufBuilderResult.createTime = _value;
  return self;
}
- (MUser_Builder*) clearCreateTime {
  protobufBuilderResult.hasCreateTime = NO;
  protobufBuilderResult.createTime = @"";
  return self;
}
- (BOOL) hasAge {
  return protobufBuilderResult.hasAge;
}
- (int32_t) age {
  return protobufBuilderResult.age;
}
- (MUser_Builder*) setAge:(int32_t) _value {
  protobufBuilderResult.hasAge = YES;
  protobufBuilderResult.age = _value;
  return self;
}
- (MUser_Builder*) clearAge {
  protobufBuilderResult.hasAge = NO;
  protobufBuilderResult.age = 0;
  return self;
}
@end

@interface MUserList ()
@property (retain) NSMutableArray* mutableUsersList;
@end

@implementation MUserList

@synthesize mutableUsersList;
- (void) dealloc {
  self.mutableUsersList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MUserList* defaultMUserListInstance = nil;
+ (void) initialize {
  if (self == [MUserList class]) {
    defaultMUserListInstance = [[MUserList alloc] init];
  }
}
+ (MUserList*) defaultInstance {
  return defaultMUserListInstance;
}
- (MUserList*) defaultInstance {
  return defaultMUserListInstance;
}
- (NSArray*) usersList {
  return mutableUsersList;
}
- (MUser*) usersAtIndex:(int32_t) index {
  id _value = [mutableUsersList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MUser* element in self.usersList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MUser* element in self.usersList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MUserList*) parseFromData:(NSData*) data {
  return (MUserList*)[[[MUserList builder] mergeFromData:data] build];
}
+ (MUserList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserList*)[[[MUserList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MUserList*) parseFromInputStream:(NSInputStream*) input {
  return (MUserList*)[[[MUserList builder] mergeFromInputStream:input] build];
}
+ (MUserList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserList*)[[[MUserList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUserList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MUserList*)[[[MUserList builder] mergeFromCodedInputStream:input] build];
}
+ (MUserList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserList*)[[[MUserList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUserList_Builder*) builder {
  return [[[MUserList_Builder alloc] init] autorelease];
}
+ (MUserList_Builder*) builderWithPrototype:(MUserList*) prototype {
  return [[MUserList builder] mergeFrom:prototype];
}
- (MUserList_Builder*) builder {
  return [MUserList builder];
}
@end

@interface MUserList_Builder()
@property (retain) MUserList* protobufBuilderResult;
@end

@implementation MUserList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MUserList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MUserList_Builder*) clear {
  self.protobufBuilderResult = [[[MUserList alloc] init] autorelease];
  return self;
}
- (MUserList_Builder*) clone {
  return [MUserList builderWithPrototype:protobufBuilderResult];
}
- (MUserList*) defaultInstance {
  return [MUserList defaultInstance];
}
- (MUserList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MUserList*) buildPartial {
  MUserList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MUserList_Builder*) mergeFrom:(MUserList*) other {
  if (other == [MUserList defaultInstance]) {
    return self;
  }
  if (other.mutableUsersList.count > 0) {
    if (protobufBuilderResult.mutableUsersList == nil) {
      protobufBuilderResult.mutableUsersList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableUsersList addObjectsFromArray:other.mutableUsersList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MUserList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MUserList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MUser_Builder* subBuilder = [MUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) usersList {
  if (protobufBuilderResult.mutableUsersList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableUsersList;
}
- (MUser*) usersAtIndex:(int32_t) index {
  return [protobufBuilderResult usersAtIndex:index];
}
- (MUserList_Builder*) replaceUsersAtIndex:(int32_t) index with:(MUser*) _value {
  [protobufBuilderResult.mutableUsersList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MUserList_Builder*) addAllUsers:(NSArray*) values {
  if (protobufBuilderResult.mutableUsersList == nil) {
    protobufBuilderResult.mutableUsersList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableUsersList addObjectsFromArray:values];
  return self;
}
- (MUserList_Builder*) clearUsersList {
  protobufBuilderResult.mutableUsersList = nil;
  return self;
}
- (MUserList_Builder*) addUsers:(MUser*) _value {
  if (protobufBuilderResult.mutableUsersList == nil) {
    protobufBuilderResult.mutableUsersList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableUsersList addObject:_value];
  return self;
}
@end

@interface MFriend ()
@property (retain) NSString* id;
@property (retain) NSString* nickname;
@property (retain) NSString* remark;
@property int32_t sex;
@property (retain) NSString* headImg;
@property int32_t star;
@property int32_t lookMe;
@property int32_t look;
@end

@implementation MFriend

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value {
  hasNickname_ = !!_value;
}
@synthesize nickname;
- (BOOL) hasRemark {
  return !!hasRemark_;
}
- (void) setHasRemark:(BOOL) _value {
  hasRemark_ = !!_value;
}
@synthesize remark;
- (BOOL) hasSex {
  return !!hasSex_;
}
- (void) setHasSex:(BOOL) _value {
  hasSex_ = !!_value;
}
@synthesize sex;
- (BOOL) hasHeadImg {
  return !!hasHeadImg_;
}
- (void) setHasHeadImg:(BOOL) _value {
  hasHeadImg_ = !!_value;
}
@synthesize headImg;
- (BOOL) hasStar {
  return !!hasStar_;
}
- (void) setHasStar:(BOOL) _value {
  hasStar_ = !!_value;
}
@synthesize star;
- (BOOL) hasLookMe {
  return !!hasLookMe_;
}
- (void) setHasLookMe:(BOOL) _value {
  hasLookMe_ = !!_value;
}
@synthesize lookMe;
- (BOOL) hasLook {
  return !!hasLook_;
}
- (void) setHasLook:(BOOL) _value {
  hasLook_ = !!_value;
}
@synthesize look;
- (void) dealloc {
  self.id = nil;
  self.nickname = nil;
  self.remark = nil;
  self.headImg = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.nickname = @"";
    self.remark = @"";
    self.sex = 0;
    self.headImg = @"";
    self.star = 0;
    self.lookMe = 0;
    self.look = 0;
  }
  return self;
}
static MFriend* defaultMFriendInstance = nil;
+ (void) initialize {
  if (self == [MFriend class]) {
    defaultMFriendInstance = [[MFriend alloc] init];
  }
}
+ (MFriend*) defaultInstance {
  return defaultMFriendInstance;
}
- (MFriend*) defaultInstance {
  return defaultMFriendInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasNickname) {
    [output writeString:2 value:self.nickname];
  }
  if (self.hasRemark) {
    [output writeString:3 value:self.remark];
  }
  if (self.hasSex) {
    [output writeInt32:4 value:self.sex];
  }
  if (self.hasHeadImg) {
    [output writeString:5 value:self.headImg];
  }
  if (self.hasStar) {
    [output writeInt32:6 value:self.star];
  }
  if (self.hasLookMe) {
    [output writeInt32:7 value:self.lookMe];
  }
  if (self.hasLook) {
    [output writeInt32:8 value:self.look];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasNickname) {
    size += computeStringSize(2, self.nickname);
  }
  if (self.hasRemark) {
    size += computeStringSize(3, self.remark);
  }
  if (self.hasSex) {
    size += computeInt32Size(4, self.sex);
  }
  if (self.hasHeadImg) {
    size += computeStringSize(5, self.headImg);
  }
  if (self.hasStar) {
    size += computeInt32Size(6, self.star);
  }
  if (self.hasLookMe) {
    size += computeInt32Size(7, self.lookMe);
  }
  if (self.hasLook) {
    size += computeInt32Size(8, self.look);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MFriend*) parseFromData:(NSData*) data {
  return (MFriend*)[[[MFriend builder] mergeFromData:data] build];
}
+ (MFriend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFriend*)[[[MFriend builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MFriend*) parseFromInputStream:(NSInputStream*) input {
  return (MFriend*)[[[MFriend builder] mergeFromInputStream:input] build];
}
+ (MFriend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFriend*)[[[MFriend builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MFriend*)[[[MFriend builder] mergeFromCodedInputStream:input] build];
}
+ (MFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFriend*)[[[MFriend builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MFriend_Builder*) builder {
  return [[[MFriend_Builder alloc] init] autorelease];
}
+ (MFriend_Builder*) builderWithPrototype:(MFriend*) prototype {
  return [[MFriend builder] mergeFrom:prototype];
}
- (MFriend_Builder*) builder {
  return [MFriend builder];
}
@end

@interface MFriend_Builder()
@property (retain) MFriend* protobufBuilderResult;
@end

@implementation MFriend_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MFriend alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MFriend_Builder*) clear {
  self.protobufBuilderResult = [[[MFriend alloc] init] autorelease];
  return self;
}
- (MFriend_Builder*) clone {
  return [MFriend builderWithPrototype:protobufBuilderResult];
}
- (MFriend*) defaultInstance {
  return [MFriend defaultInstance];
}
- (MFriend*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MFriend*) buildPartial {
  MFriend* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MFriend_Builder*) mergeFrom:(MFriend*) other {
  if (other == [MFriend defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasRemark) {
    [self setRemark:other.remark];
  }
  if (other.hasSex) {
    [self setSex:other.sex];
  }
  if (other.hasHeadImg) {
    [self setHeadImg:other.headImg];
  }
  if (other.hasStar) {
    [self setStar:other.star];
  }
  if (other.hasLookMe) {
    [self setLookMe:other.lookMe];
  }
  if (other.hasLook) {
    [self setLook:other.look];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MFriend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MFriend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setNickname:[input readString]];
        break;
      }
      case 26: {
        [self setRemark:[input readString]];
        break;
      }
      case 32: {
        [self setSex:[input readInt32]];
        break;
      }
      case 42: {
        [self setHeadImg:[input readString]];
        break;
      }
      case 48: {
        [self setStar:[input readInt32]];
        break;
      }
      case 56: {
        [self setLookMe:[input readInt32]];
        break;
      }
      case 64: {
        [self setLook:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MFriend_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MFriend_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasNickname {
  return protobufBuilderResult.hasNickname;
}
- (NSString*) nickname {
  return protobufBuilderResult.nickname;
}
- (MFriend_Builder*) setNickname:(NSString*) _value {
  protobufBuilderResult.hasNickname = YES;
  protobufBuilderResult.nickname = _value;
  return self;
}
- (MFriend_Builder*) clearNickname {
  protobufBuilderResult.hasNickname = NO;
  protobufBuilderResult.nickname = @"";
  return self;
}
- (BOOL) hasRemark {
  return protobufBuilderResult.hasRemark;
}
- (NSString*) remark {
  return protobufBuilderResult.remark;
}
- (MFriend_Builder*) setRemark:(NSString*) _value {
  protobufBuilderResult.hasRemark = YES;
  protobufBuilderResult.remark = _value;
  return self;
}
- (MFriend_Builder*) clearRemark {
  protobufBuilderResult.hasRemark = NO;
  protobufBuilderResult.remark = @"";
  return self;
}
- (BOOL) hasSex {
  return protobufBuilderResult.hasSex;
}
- (int32_t) sex {
  return protobufBuilderResult.sex;
}
- (MFriend_Builder*) setSex:(int32_t) _value {
  protobufBuilderResult.hasSex = YES;
  protobufBuilderResult.sex = _value;
  return self;
}
- (MFriend_Builder*) clearSex {
  protobufBuilderResult.hasSex = NO;
  protobufBuilderResult.sex = 0;
  return self;
}
- (BOOL) hasHeadImg {
  return protobufBuilderResult.hasHeadImg;
}
- (NSString*) headImg {
  return protobufBuilderResult.headImg;
}
- (MFriend_Builder*) setHeadImg:(NSString*) _value {
  protobufBuilderResult.hasHeadImg = YES;
  protobufBuilderResult.headImg = _value;
  return self;
}
- (MFriend_Builder*) clearHeadImg {
  protobufBuilderResult.hasHeadImg = NO;
  protobufBuilderResult.headImg = @"";
  return self;
}
- (BOOL) hasStar {
  return protobufBuilderResult.hasStar;
}
- (int32_t) star {
  return protobufBuilderResult.star;
}
- (MFriend_Builder*) setStar:(int32_t) _value {
  protobufBuilderResult.hasStar = YES;
  protobufBuilderResult.star = _value;
  return self;
}
- (MFriend_Builder*) clearStar {
  protobufBuilderResult.hasStar = NO;
  protobufBuilderResult.star = 0;
  return self;
}
- (BOOL) hasLookMe {
  return protobufBuilderResult.hasLookMe;
}
- (int32_t) lookMe {
  return protobufBuilderResult.lookMe;
}
- (MFriend_Builder*) setLookMe:(int32_t) _value {
  protobufBuilderResult.hasLookMe = YES;
  protobufBuilderResult.lookMe = _value;
  return self;
}
- (MFriend_Builder*) clearLookMe {
  protobufBuilderResult.hasLookMe = NO;
  protobufBuilderResult.lookMe = 0;
  return self;
}
- (BOOL) hasLook {
  return protobufBuilderResult.hasLook;
}
- (int32_t) look {
  return protobufBuilderResult.look;
}
- (MFriend_Builder*) setLook:(int32_t) _value {
  protobufBuilderResult.hasLook = YES;
  protobufBuilderResult.look = _value;
  return self;
}
- (MFriend_Builder*) clearLook {
  protobufBuilderResult.hasLook = NO;
  protobufBuilderResult.look = 0;
  return self;
}
@end

@interface MFriendList ()
@property (retain) NSMutableArray* mutableListList;
@end

@implementation MFriendList

@synthesize mutableListList;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MFriendList* defaultMFriendListInstance = nil;
+ (void) initialize {
  if (self == [MFriendList class]) {
    defaultMFriendListInstance = [[MFriendList alloc] init];
  }
}
+ (MFriendList*) defaultInstance {
  return defaultMFriendListInstance;
}
- (MFriendList*) defaultInstance {
  return defaultMFriendListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (MFriend*) listAtIndex:(int32_t) index {
  id _value = [mutableListList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MFriend* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MFriend* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MFriendList*) parseFromData:(NSData*) data {
  return (MFriendList*)[[[MFriendList builder] mergeFromData:data] build];
}
+ (MFriendList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFriendList*)[[[MFriendList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MFriendList*) parseFromInputStream:(NSInputStream*) input {
  return (MFriendList*)[[[MFriendList builder] mergeFromInputStream:input] build];
}
+ (MFriendList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFriendList*)[[[MFriendList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MFriendList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MFriendList*)[[[MFriendList builder] mergeFromCodedInputStream:input] build];
}
+ (MFriendList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFriendList*)[[[MFriendList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MFriendList_Builder*) builder {
  return [[[MFriendList_Builder alloc] init] autorelease];
}
+ (MFriendList_Builder*) builderWithPrototype:(MFriendList*) prototype {
  return [[MFriendList builder] mergeFrom:prototype];
}
- (MFriendList_Builder*) builder {
  return [MFriendList builder];
}
@end

@interface MFriendList_Builder()
@property (retain) MFriendList* protobufBuilderResult;
@end

@implementation MFriendList_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MFriendList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MFriendList_Builder*) clear {
  self.protobufBuilderResult = [[[MFriendList alloc] init] autorelease];
  return self;
}
- (MFriendList_Builder*) clone {
  return [MFriendList builderWithPrototype:protobufBuilderResult];
}
- (MFriendList*) defaultInstance {
  return [MFriendList defaultInstance];
}
- (MFriendList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MFriendList*) buildPartial {
  MFriendList* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MFriendList_Builder*) mergeFrom:(MFriendList*) other {
  if (other == [MFriendList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (protobufBuilderResult.mutableListList == nil) {
      protobufBuilderResult.mutableListList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableListList addObjectsFromArray:other.mutableListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MFriendList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MFriendList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MFriend_Builder* subBuilder = [MFriend builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (protobufBuilderResult.mutableListList == nil) { return [NSArray array]; }
  return protobufBuilderResult.mutableListList;
}
- (MFriend*) listAtIndex:(int32_t) index {
  return [protobufBuilderResult listAtIndex:index];
}
- (MFriendList_Builder*) replaceListAtIndex:(int32_t) index with:(MFriend*) _value {
  [protobufBuilderResult.mutableListList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MFriendList_Builder*) addAllList:(NSArray*) values {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObjectsFromArray:values];
  return self;
}
- (MFriendList_Builder*) clearListList {
  protobufBuilderResult.mutableListList = nil;
  return self;
}
- (MFriendList_Builder*) addList:(MFriend*) _value {
  if (protobufBuilderResult.mutableListList == nil) {
    protobufBuilderResult.mutableListList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableListList addObject:_value];
  return self;
}
@end

@interface MUserDetail ()
@property (retain) NSString* id;
@property (retain) NSString* nickname;
@property int32_t isVerify;
@property int32_t marriageSeeking;
@property (retain) NSString* headImg;
@property (retain) NSString* location;
@property int32_t sex;
@property int32_t age;
@property (retain) NSString* voice;
@property int32_t voiceTime;
@property (retain) NSMutableArray* mutableOpenPhotosList;
@property (retain) NSMutableArray* mutablePrivatePhotosList;
@property int32_t canInfo;
@property int32_t canContact;
@property (retain) NSString* info;
@property (retain) NSString* contact;
@property (retain) NSString* loveDeclaration;
@property (retain) NSString* emotionState;
@property (retain) NSString* height;
@property (retain) NSString* weight;
@property (retain) NSString* job;
@property (retain) NSString* income;
@property (retain) NSString* vehicle;
@property (retain) NSString* loveOpinion;
@property (retain) NSString* sexOpinion;
@property (retain) NSString* privacy;
@property (retain) NSString* distance;
@property int32_t isFocus;
@property int32_t isBlack;
@end

@implementation MUserDetail

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value {
  hasId_ = !!_value;
}
@synthesize id;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value {
  hasNickname_ = !!_value;
}
@synthesize nickname;
- (BOOL) hasIsVerify {
  return !!hasIsVerify_;
}
- (void) setHasIsVerify:(BOOL) _value {
  hasIsVerify_ = !!_value;
}
@synthesize isVerify;
- (BOOL) hasMarriageSeeking {
  return !!hasMarriageSeeking_;
}
- (void) setHasMarriageSeeking:(BOOL) _value {
  hasMarriageSeeking_ = !!_value;
}
@synthesize marriageSeeking;
- (BOOL) hasHeadImg {
  return !!hasHeadImg_;
}
- (void) setHasHeadImg:(BOOL) _value {
  hasHeadImg_ = !!_value;
}
@synthesize headImg;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) _value {
  hasLocation_ = !!_value;
}
@synthesize location;
- (BOOL) hasSex {
  return !!hasSex_;
}
- (void) setHasSex:(BOOL) _value {
  hasSex_ = !!_value;
}
@synthesize sex;
- (BOOL) hasAge {
  return !!hasAge_;
}
- (void) setHasAge:(BOOL) _value {
  hasAge_ = !!_value;
}
@synthesize age;
- (BOOL) hasVoice {
  return !!hasVoice_;
}
- (void) setHasVoice:(BOOL) _value {
  hasVoice_ = !!_value;
}
@synthesize voice;
- (BOOL) hasVoiceTime {
  return !!hasVoiceTime_;
}
- (void) setHasVoiceTime:(BOOL) _value {
  hasVoiceTime_ = !!_value;
}
@synthesize voiceTime;
@synthesize mutableOpenPhotosList;
@synthesize mutablePrivatePhotosList;
- (BOOL) hasCanInfo {
  return !!hasCanInfo_;
}
- (void) setHasCanInfo:(BOOL) _value {
  hasCanInfo_ = !!_value;
}
@synthesize canInfo;
- (BOOL) hasCanContact {
  return !!hasCanContact_;
}
- (void) setHasCanContact:(BOOL) _value {
  hasCanContact_ = !!_value;
}
@synthesize canContact;
- (BOOL) hasInfo {
  return !!hasInfo_;
}
- (void) setHasInfo:(BOOL) _value {
  hasInfo_ = !!_value;
}
@synthesize info;
- (BOOL) hasContact {
  return !!hasContact_;
}
- (void) setHasContact:(BOOL) _value {
  hasContact_ = !!_value;
}
@synthesize contact;
- (BOOL) hasLoveDeclaration {
  return !!hasLoveDeclaration_;
}
- (void) setHasLoveDeclaration:(BOOL) _value {
  hasLoveDeclaration_ = !!_value;
}
@synthesize loveDeclaration;
- (BOOL) hasEmotionState {
  return !!hasEmotionState_;
}
- (void) setHasEmotionState:(BOOL) _value {
  hasEmotionState_ = !!_value;
}
@synthesize emotionState;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) _value {
  hasHeight_ = !!_value;
}
@synthesize height;
- (BOOL) hasWeight {
  return !!hasWeight_;
}
- (void) setHasWeight:(BOOL) _value {
  hasWeight_ = !!_value;
}
@synthesize weight;
- (BOOL) hasJob {
  return !!hasJob_;
}
- (void) setHasJob:(BOOL) _value {
  hasJob_ = !!_value;
}
@synthesize job;
- (BOOL) hasIncome {
  return !!hasIncome_;
}
- (void) setHasIncome:(BOOL) _value {
  hasIncome_ = !!_value;
}
@synthesize income;
- (BOOL) hasVehicle {
  return !!hasVehicle_;
}
- (void) setHasVehicle:(BOOL) _value {
  hasVehicle_ = !!_value;
}
@synthesize vehicle;
- (BOOL) hasLoveOpinion {
  return !!hasLoveOpinion_;
}
- (void) setHasLoveOpinion:(BOOL) _value {
  hasLoveOpinion_ = !!_value;
}
@synthesize loveOpinion;
- (BOOL) hasSexOpinion {
  return !!hasSexOpinion_;
}
- (void) setHasSexOpinion:(BOOL) _value {
  hasSexOpinion_ = !!_value;
}
@synthesize sexOpinion;
- (BOOL) hasPrivacy {
  return !!hasPrivacy_;
}
- (void) setHasPrivacy:(BOOL) _value {
  hasPrivacy_ = !!_value;
}
@synthesize privacy;
- (BOOL) hasDistance {
  return !!hasDistance_;
}
- (void) setHasDistance:(BOOL) _value {
  hasDistance_ = !!_value;
}
@synthesize distance;
- (BOOL) hasIsFocus {
  return !!hasIsFocus_;
}
- (void) setHasIsFocus:(BOOL) _value {
  hasIsFocus_ = !!_value;
}
@synthesize isFocus;
- (BOOL) hasIsBlack {
  return !!hasIsBlack_;
}
- (void) setHasIsBlack:(BOOL) _value {
  hasIsBlack_ = !!_value;
}
@synthesize isBlack;
- (void) dealloc {
  self.id = nil;
  self.nickname = nil;
  self.headImg = nil;
  self.location = nil;
  self.voice = nil;
  self.mutableOpenPhotosList = nil;
  self.mutablePrivatePhotosList = nil;
  self.info = nil;
  self.contact = nil;
  self.loveDeclaration = nil;
  self.emotionState = nil;
  self.height = nil;
  self.weight = nil;
  self.job = nil;
  self.income = nil;
  self.vehicle = nil;
  self.loveOpinion = nil;
  self.sexOpinion = nil;
  self.privacy = nil;
  self.distance = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.nickname = @"";
    self.isVerify = 0;
    self.marriageSeeking = 0;
    self.headImg = @"";
    self.location = @"";
    self.sex = 0;
    self.age = 0;
    self.voice = @"";
    self.voiceTime = 0;
    self.canInfo = 0;
    self.canContact = 0;
    self.info = @"";
    self.contact = @"";
    self.loveDeclaration = @"";
    self.emotionState = @"";
    self.height = @"";
    self.weight = @"";
    self.job = @"";
    self.income = @"";
    self.vehicle = @"";
    self.loveOpinion = @"";
    self.sexOpinion = @"";
    self.privacy = @"";
    self.distance = @"";
    self.isFocus = 0;
    self.isBlack = 0;
  }
  return self;
}
static MUserDetail* defaultMUserDetailInstance = nil;
+ (void) initialize {
  if (self == [MUserDetail class]) {
    defaultMUserDetailInstance = [[MUserDetail alloc] init];
  }
}
+ (MUserDetail*) defaultInstance {
  return defaultMUserDetailInstance;
}
- (MUserDetail*) defaultInstance {
  return defaultMUserDetailInstance;
}
- (NSArray*) openPhotosList {
  return mutableOpenPhotosList;
}
- (NSString*) openPhotosAtIndex:(int32_t) index {
  id _value = [mutableOpenPhotosList objectAtIndex:index];
  return _value;
}
- (NSArray*) privatePhotosList {
  return mutablePrivatePhotosList;
}
- (NSString*) privatePhotosAtIndex:(int32_t) index {
  id _value = [mutablePrivatePhotosList objectAtIndex:index];
  return _value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasNickname) {
    [output writeString:2 value:self.nickname];
  }
  if (self.hasIsVerify) {
    [output writeInt32:3 value:self.isVerify];
  }
  if (self.hasMarriageSeeking) {
    [output writeInt32:4 value:self.marriageSeeking];
  }
  if (self.hasHeadImg) {
    [output writeString:5 value:self.headImg];
  }
  if (self.hasLocation) {
    [output writeString:6 value:self.location];
  }
  if (self.hasSex) {
    [output writeInt32:7 value:self.sex];
  }
  if (self.hasAge) {
    [output writeInt32:8 value:self.age];
  }
  if (self.hasVoice) {
    [output writeString:9 value:self.voice];
  }
  if (self.hasVoiceTime) {
    [output writeInt32:10 value:self.voiceTime];
  }
  for (NSString* element in self.mutableOpenPhotosList) {
    [output writeString:11 value:element];
  }
  for (NSString* element in self.mutablePrivatePhotosList) {
    [output writeString:12 value:element];
  }
  if (self.hasCanInfo) {
    [output writeInt32:13 value:self.canInfo];
  }
  if (self.hasCanContact) {
    [output writeInt32:14 value:self.canContact];
  }
  if (self.hasInfo) {
    [output writeString:15 value:self.info];
  }
  if (self.hasContact) {
    [output writeString:16 value:self.contact];
  }
  if (self.hasLoveDeclaration) {
    [output writeString:17 value:self.loveDeclaration];
  }
  if (self.hasEmotionState) {
    [output writeString:18 value:self.emotionState];
  }
  if (self.hasHeight) {
    [output writeString:19 value:self.height];
  }
  if (self.hasWeight) {
    [output writeString:20 value:self.weight];
  }
  if (self.hasJob) {
    [output writeString:21 value:self.job];
  }
  if (self.hasIncome) {
    [output writeString:22 value:self.income];
  }
  if (self.hasVehicle) {
    [output writeString:23 value:self.vehicle];
  }
  if (self.hasLoveOpinion) {
    [output writeString:24 value:self.loveOpinion];
  }
  if (self.hasSexOpinion) {
    [output writeString:25 value:self.sexOpinion];
  }
  if (self.hasPrivacy) {
    [output writeString:26 value:self.privacy];
  }
  if (self.hasDistance) {
    [output writeString:27 value:self.distance];
  }
  if (self.hasIsFocus) {
    [output writeInt32:28 value:self.isFocus];
  }
  if (self.hasIsBlack) {
    [output writeInt32:29 value:self.isBlack];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasNickname) {
    size += computeStringSize(2, self.nickname);
  }
  if (self.hasIsVerify) {
    size += computeInt32Size(3, self.isVerify);
  }
  if (self.hasMarriageSeeking) {
    size += computeInt32Size(4, self.marriageSeeking);
  }
  if (self.hasHeadImg) {
    size += computeStringSize(5, self.headImg);
  }
  if (self.hasLocation) {
    size += computeStringSize(6, self.location);
  }
  if (self.hasSex) {
    size += computeInt32Size(7, self.sex);
  }
  if (self.hasAge) {
    size += computeInt32Size(8, self.age);
  }
  if (self.hasVoice) {
    size += computeStringSize(9, self.voice);
  }
  if (self.hasVoiceTime) {
    size += computeInt32Size(10, self.voiceTime);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableOpenPhotosList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableOpenPhotosList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutablePrivatePhotosList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutablePrivatePhotosList.count;
  }
  if (self.hasCanInfo) {
    size += computeInt32Size(13, self.canInfo);
  }
  if (self.hasCanContact) {
    size += computeInt32Size(14, self.canContact);
  }
  if (self.hasInfo) {
    size += computeStringSize(15, self.info);
  }
  if (self.hasContact) {
    size += computeStringSize(16, self.contact);
  }
  if (self.hasLoveDeclaration) {
    size += computeStringSize(17, self.loveDeclaration);
  }
  if (self.hasEmotionState) {
    size += computeStringSize(18, self.emotionState);
  }
  if (self.hasHeight) {
    size += computeStringSize(19, self.height);
  }
  if (self.hasWeight) {
    size += computeStringSize(20, self.weight);
  }
  if (self.hasJob) {
    size += computeStringSize(21, self.job);
  }
  if (self.hasIncome) {
    size += computeStringSize(22, self.income);
  }
  if (self.hasVehicle) {
    size += computeStringSize(23, self.vehicle);
  }
  if (self.hasLoveOpinion) {
    size += computeStringSize(24, self.loveOpinion);
  }
  if (self.hasSexOpinion) {
    size += computeStringSize(25, self.sexOpinion);
  }
  if (self.hasPrivacy) {
    size += computeStringSize(26, self.privacy);
  }
  if (self.hasDistance) {
    size += computeStringSize(27, self.distance);
  }
  if (self.hasIsFocus) {
    size += computeInt32Size(28, self.isFocus);
  }
  if (self.hasIsBlack) {
    size += computeInt32Size(29, self.isBlack);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MUserDetail*) parseFromData:(NSData*) data {
  return (MUserDetail*)[[[MUserDetail builder] mergeFromData:data] build];
}
+ (MUserDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserDetail*)[[[MUserDetail builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MUserDetail*) parseFromInputStream:(NSInputStream*) input {
  return (MUserDetail*)[[[MUserDetail builder] mergeFromInputStream:input] build];
}
+ (MUserDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserDetail*)[[[MUserDetail builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUserDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MUserDetail*)[[[MUserDetail builder] mergeFromCodedInputStream:input] build];
}
+ (MUserDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUserDetail*)[[[MUserDetail builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUserDetail_Builder*) builder {
  return [[[MUserDetail_Builder alloc] init] autorelease];
}
+ (MUserDetail_Builder*) builderWithPrototype:(MUserDetail*) prototype {
  return [[MUserDetail builder] mergeFrom:prototype];
}
- (MUserDetail_Builder*) builder {
  return [MUserDetail builder];
}
@end

@interface MUserDetail_Builder()
@property (retain) MUserDetail* protobufBuilderResult;
@end

@implementation MUserDetail_Builder
@synthesize protobufBuilderResult;
- (void) dealloc {
  self.protobufBuilderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protobufBuilderResult = [[[MUserDetail alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return protobufBuilderResult;
}
- (MUserDetail_Builder*) clear {
  self.protobufBuilderResult = [[[MUserDetail alloc] init] autorelease];
  return self;
}
- (MUserDetail_Builder*) clone {
  return [MUserDetail builderWithPrototype:protobufBuilderResult];
}
- (MUserDetail*) defaultInstance {
  return [MUserDetail defaultInstance];
}
- (MUserDetail*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MUserDetail*) buildPartial {
  MUserDetail* returnMe = [[protobufBuilderResult retain] autorelease];
  self.protobufBuilderResult = nil;
  return returnMe;
}
- (MUserDetail_Builder*) mergeFrom:(MUserDetail*) other {
  if (other == [MUserDetail defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasIsVerify) {
    [self setIsVerify:other.isVerify];
  }
  if (other.hasMarriageSeeking) {
    [self setMarriageSeeking:other.marriageSeeking];
  }
  if (other.hasHeadImg) {
    [self setHeadImg:other.headImg];
  }
  if (other.hasLocation) {
    [self setLocation:other.location];
  }
  if (other.hasSex) {
    [self setSex:other.sex];
  }
  if (other.hasAge) {
    [self setAge:other.age];
  }
  if (other.hasVoice) {
    [self setVoice:other.voice];
  }
  if (other.hasVoiceTime) {
    [self setVoiceTime:other.voiceTime];
  }
  if (other.mutableOpenPhotosList.count > 0) {
    if (protobufBuilderResult.mutableOpenPhotosList == nil) {
      protobufBuilderResult.mutableOpenPhotosList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutableOpenPhotosList addObjectsFromArray:other.mutableOpenPhotosList];
  }
  if (other.mutablePrivatePhotosList.count > 0) {
    if (protobufBuilderResult.mutablePrivatePhotosList == nil) {
      protobufBuilderResult.mutablePrivatePhotosList = [NSMutableArray array];
    }
    [protobufBuilderResult.mutablePrivatePhotosList addObjectsFromArray:other.mutablePrivatePhotosList];
  }
  if (other.hasCanInfo) {
    [self setCanInfo:other.canInfo];
  }
  if (other.hasCanContact) {
    [self setCanContact:other.canContact];
  }
  if (other.hasInfo) {
    [self setInfo:other.info];
  }
  if (other.hasContact) {
    [self setContact:other.contact];
  }
  if (other.hasLoveDeclaration) {
    [self setLoveDeclaration:other.loveDeclaration];
  }
  if (other.hasEmotionState) {
    [self setEmotionState:other.emotionState];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  if (other.hasWeight) {
    [self setWeight:other.weight];
  }
  if (other.hasJob) {
    [self setJob:other.job];
  }
  if (other.hasIncome) {
    [self setIncome:other.income];
  }
  if (other.hasVehicle) {
    [self setVehicle:other.vehicle];
  }
  if (other.hasLoveOpinion) {
    [self setLoveOpinion:other.loveOpinion];
  }
  if (other.hasSexOpinion) {
    [self setSexOpinion:other.sexOpinion];
  }
  if (other.hasPrivacy) {
    [self setPrivacy:other.privacy];
  }
  if (other.hasDistance) {
    [self setDistance:other.distance];
  }
  if (other.hasIsFocus) {
    [self setIsFocus:other.isFocus];
  }
  if (other.hasIsBlack) {
    [self setIsBlack:other.isBlack];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MUserDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MUserDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setNickname:[input readString]];
        break;
      }
      case 24: {
        [self setIsVerify:[input readInt32]];
        break;
      }
      case 32: {
        [self setMarriageSeeking:[input readInt32]];
        break;
      }
      case 42: {
        [self setHeadImg:[input readString]];
        break;
      }
      case 50: {
        [self setLocation:[input readString]];
        break;
      }
      case 56: {
        [self setSex:[input readInt32]];
        break;
      }
      case 64: {
        [self setAge:[input readInt32]];
        break;
      }
      case 74: {
        [self setVoice:[input readString]];
        break;
      }
      case 80: {
        [self setVoiceTime:[input readInt32]];
        break;
      }
      case 90: {
        [self addOpenPhotos:[input readString]];
        break;
      }
      case 98: {
        [self addPrivatePhotos:[input readString]];
        break;
      }
      case 104: {
        [self setCanInfo:[input readInt32]];
        break;
      }
      case 112: {
        [self setCanContact:[input readInt32]];
        break;
      }
      case 122: {
        [self setInfo:[input readString]];
        break;
      }
      case 130: {
        [self setContact:[input readString]];
        break;
      }
      case 138: {
        [self setLoveDeclaration:[input readString]];
        break;
      }
      case 146: {
        [self setEmotionState:[input readString]];
        break;
      }
      case 154: {
        [self setHeight:[input readString]];
        break;
      }
      case 162: {
        [self setWeight:[input readString]];
        break;
      }
      case 170: {
        [self setJob:[input readString]];
        break;
      }
      case 178: {
        [self setIncome:[input readString]];
        break;
      }
      case 186: {
        [self setVehicle:[input readString]];
        break;
      }
      case 194: {
        [self setLoveOpinion:[input readString]];
        break;
      }
      case 202: {
        [self setSexOpinion:[input readString]];
        break;
      }
      case 210: {
        [self setPrivacy:[input readString]];
        break;
      }
      case 218: {
        [self setDistance:[input readString]];
        break;
      }
      case 224: {
        [self setIsFocus:[input readInt32]];
        break;
      }
      case 232: {
        [self setIsBlack:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return protobufBuilderResult.hasId;
}
- (NSString*) id {
  return protobufBuilderResult.id;
}
- (MUserDetail_Builder*) setId:(NSString*) _value {
  protobufBuilderResult.hasId = YES;
  protobufBuilderResult.id = _value;
  return self;
}
- (MUserDetail_Builder*) clearId {
  protobufBuilderResult.hasId = NO;
  protobufBuilderResult.id = @"";
  return self;
}
- (BOOL) hasNickname {
  return protobufBuilderResult.hasNickname;
}
- (NSString*) nickname {
  return protobufBuilderResult.nickname;
}
- (MUserDetail_Builder*) setNickname:(NSString*) _value {
  protobufBuilderResult.hasNickname = YES;
  protobufBuilderResult.nickname = _value;
  return self;
}
- (MUserDetail_Builder*) clearNickname {
  protobufBuilderResult.hasNickname = NO;
  protobufBuilderResult.nickname = @"";
  return self;
}
- (BOOL) hasIsVerify {
  return protobufBuilderResult.hasIsVerify;
}
- (int32_t) isVerify {
  return protobufBuilderResult.isVerify;
}
- (MUserDetail_Builder*) setIsVerify:(int32_t) _value {
  protobufBuilderResult.hasIsVerify = YES;
  protobufBuilderResult.isVerify = _value;
  return self;
}
- (MUserDetail_Builder*) clearIsVerify {
  protobufBuilderResult.hasIsVerify = NO;
  protobufBuilderResult.isVerify = 0;
  return self;
}
- (BOOL) hasMarriageSeeking {
  return protobufBuilderResult.hasMarriageSeeking;
}
- (int32_t) marriageSeeking {
  return protobufBuilderResult.marriageSeeking;
}
- (MUserDetail_Builder*) setMarriageSeeking:(int32_t) _value {
  protobufBuilderResult.hasMarriageSeeking = YES;
  protobufBuilderResult.marriageSeeking = _value;
  return self;
}
- (MUserDetail_Builder*) clearMarriageSeeking {
  protobufBuilderResult.hasMarriageSeeking = NO;
  protobufBuilderResult.marriageSeeking = 0;
  return self;
}
- (BOOL) hasHeadImg {
  return protobufBuilderResult.hasHeadImg;
}
- (NSString*) headImg {
  return protobufBuilderResult.headImg;
}
- (MUserDetail_Builder*) setHeadImg:(NSString*) _value {
  protobufBuilderResult.hasHeadImg = YES;
  protobufBuilderResult.headImg = _value;
  return self;
}
- (MUserDetail_Builder*) clearHeadImg {
  protobufBuilderResult.hasHeadImg = NO;
  protobufBuilderResult.headImg = @"";
  return self;
}
- (BOOL) hasLocation {
  return protobufBuilderResult.hasLocation;
}
- (NSString*) location {
  return protobufBuilderResult.location;
}
- (MUserDetail_Builder*) setLocation:(NSString*) _value {
  protobufBuilderResult.hasLocation = YES;
  protobufBuilderResult.location = _value;
  return self;
}
- (MUserDetail_Builder*) clearLocation {
  protobufBuilderResult.hasLocation = NO;
  protobufBuilderResult.location = @"";
  return self;
}
- (BOOL) hasSex {
  return protobufBuilderResult.hasSex;
}
- (int32_t) sex {
  return protobufBuilderResult.sex;
}
- (MUserDetail_Builder*) setSex:(int32_t) _value {
  protobufBuilderResult.hasSex = YES;
  protobufBuilderResult.sex = _value;
  return self;
}
- (MUserDetail_Builder*) clearSex {
  protobufBuilderResult.hasSex = NO;
  protobufBuilderResult.sex = 0;
  return self;
}
- (BOOL) hasAge {
  return protobufBuilderResult.hasAge;
}
- (int32_t) age {
  return protobufBuilderResult.age;
}
- (MUserDetail_Builder*) setAge:(int32_t) _value {
  protobufBuilderResult.hasAge = YES;
  protobufBuilderResult.age = _value;
  return self;
}
- (MUserDetail_Builder*) clearAge {
  protobufBuilderResult.hasAge = NO;
  protobufBuilderResult.age = 0;
  return self;
}
- (BOOL) hasVoice {
  return protobufBuilderResult.hasVoice;
}
- (NSString*) voice {
  return protobufBuilderResult.voice;
}
- (MUserDetail_Builder*) setVoice:(NSString*) _value {
  protobufBuilderResult.hasVoice = YES;
  protobufBuilderResult.voice = _value;
  return self;
}
- (MUserDetail_Builder*) clearVoice {
  protobufBuilderResult.hasVoice = NO;
  protobufBuilderResult.voice = @"";
  return self;
}
- (BOOL) hasVoiceTime {
  return protobufBuilderResult.hasVoiceTime;
}
- (int32_t) voiceTime {
  return protobufBuilderResult.voiceTime;
}
- (MUserDetail_Builder*) setVoiceTime:(int32_t) _value {
  protobufBuilderResult.hasVoiceTime = YES;
  protobufBuilderResult.voiceTime = _value;
  return self;
}
- (MUserDetail_Builder*) clearVoiceTime {
  protobufBuilderResult.hasVoiceTime = NO;
  protobufBuilderResult.voiceTime = 0;
  return self;
}
- (NSArray*) openPhotosList {
  if (protobufBuilderResult.mutableOpenPhotosList == nil) {
    return [NSArray array];
  }
  return protobufBuilderResult.mutableOpenPhotosList;
}
- (NSString*) openPhotosAtIndex:(int32_t) index {
  return [protobufBuilderResult openPhotosAtIndex:index];
}
- (MUserDetail_Builder*) replaceOpenPhotosAtIndex:(int32_t) index with:(NSString*) _value {
  [protobufBuilderResult.mutableOpenPhotosList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MUserDetail_Builder*) addOpenPhotos:(NSString*) _value {
  if (protobufBuilderResult.mutableOpenPhotosList == nil) {
    protobufBuilderResult.mutableOpenPhotosList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableOpenPhotosList addObject:_value];
  return self;
}
- (MUserDetail_Builder*) addAllOpenPhotos:(NSArray*) values {
  if (protobufBuilderResult.mutableOpenPhotosList == nil) {
    protobufBuilderResult.mutableOpenPhotosList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutableOpenPhotosList addObjectsFromArray:values];
  return self;
}
- (MUserDetail_Builder*) clearOpenPhotosList {
  protobufBuilderResult.mutableOpenPhotosList = nil;
  return self;
}
- (NSArray*) privatePhotosList {
  if (protobufBuilderResult.mutablePrivatePhotosList == nil) {
    return [NSArray array];
  }
  return protobufBuilderResult.mutablePrivatePhotosList;
}
- (NSString*) privatePhotosAtIndex:(int32_t) index {
  return [protobufBuilderResult privatePhotosAtIndex:index];
}
- (MUserDetail_Builder*) replacePrivatePhotosAtIndex:(int32_t) index with:(NSString*) _value {
  [protobufBuilderResult.mutablePrivatePhotosList replaceObjectAtIndex:index withObject:_value];
  return self;
}
- (MUserDetail_Builder*) addPrivatePhotos:(NSString*) _value {
  if (protobufBuilderResult.mutablePrivatePhotosList == nil) {
    protobufBuilderResult.mutablePrivatePhotosList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutablePrivatePhotosList addObject:_value];
  return self;
}
- (MUserDetail_Builder*) addAllPrivatePhotos:(NSArray*) values {
  if (protobufBuilderResult.mutablePrivatePhotosList == nil) {
    protobufBuilderResult.mutablePrivatePhotosList = [NSMutableArray array];
  }
  [protobufBuilderResult.mutablePrivatePhotosList addObjectsFromArray:values];
  return self;
}
- (MUserDetail_Builder*) clearPrivatePhotosList {
  protobufBuilderResult.mutablePrivatePhotosList = nil;
  return self;
}
- (BOOL) hasCanInfo {
  return protobufBuilderResult.hasCanInfo;
}
- (int32_t) canInfo {
  return protobufBuilderResult.canInfo;
}
- (MUserDetail_Builder*) setCanInfo:(int32_t) _value {
  protobufBuilderResult.hasCanInfo = YES;
  protobufBuilderResult.canInfo = _value;
  return self;
}
- (MUserDetail_Builder*) clearCanInfo {
  protobufBuilderResult.hasCanInfo = NO;
  protobufBuilderResult.canInfo = 0;
  return self;
}
- (BOOL) hasCanContact {
  return protobufBuilderResult.hasCanContact;
}
- (int32_t) canContact {
  return protobufBuilderResult.canContact;
}
- (MUserDetail_Builder*) setCanContact:(int32_t) _value {
  protobufBuilderResult.hasCanContact = YES;
  protobufBuilderResult.canContact = _value;
  return self;
}
- (MUserDetail_Builder*) clearCanContact {
  protobufBuilderResult.hasCanContact = NO;
  protobufBuilderResult.canContact = 0;
  return self;
}
- (BOOL) hasInfo {
  return protobufBuilderResult.hasInfo;
}
- (NSString*) info {
  return protobufBuilderResult.info;
}
- (MUserDetail_Builder*) setInfo:(NSString*) _value {
  protobufBuilderResult.hasInfo = YES;
  protobufBuilderResult.info = _value;
  return self;
}
- (MUserDetail_Builder*) clearInfo {
  protobufBuilderResult.hasInfo = NO;
  protobufBuilderResult.info = @"";
  return self;
}
- (BOOL) hasContact {
  return protobufBuilderResult.hasContact;
}
- (NSString*) contact {
  return protobufBuilderResult.contact;
}
- (MUserDetail_Builder*) setContact:(NSString*) _value {
  protobufBuilderResult.hasContact = YES;
  protobufBuilderResult.contact = _value;
  return self;
}
- (MUserDetail_Builder*) clearContact {
  protobufBuilderResult.hasContact = NO;
  protobufBuilderResult.contact = @"";
  return self;
}
- (BOOL) hasLoveDeclaration {
  return protobufBuilderResult.hasLoveDeclaration;
}
- (NSString*) loveDeclaration {
  return protobufBuilderResult.loveDeclaration;
}
- (MUserDetail_Builder*) setLoveDeclaration:(NSString*) _value {
  protobufBuilderResult.hasLoveDeclaration = YES;
  protobufBuilderResult.loveDeclaration = _value;
  return self;
}
- (MUserDetail_Builder*) clearLoveDeclaration {
  protobufBuilderResult.hasLoveDeclaration = NO;
  protobufBuilderResult.loveDeclaration = @"";
  return self;
}
- (BOOL) hasEmotionState {
  return protobufBuilderResult.hasEmotionState;
}
- (NSString*) emotionState {
  return protobufBuilderResult.emotionState;
}
- (MUserDetail_Builder*) setEmotionState:(NSString*) _value {
  protobufBuilderResult.hasEmotionState = YES;
  protobufBuilderResult.emotionState = _value;
  return self;
}
- (MUserDetail_Builder*) clearEmotionState {
  protobufBuilderResult.hasEmotionState = NO;
  protobufBuilderResult.emotionState = @"";
  return self;
}
- (BOOL) hasHeight {
  return protobufBuilderResult.hasHeight;
}
- (NSString*) height {
  return protobufBuilderResult.height;
}
- (MUserDetail_Builder*) setHeight:(NSString*) _value {
  protobufBuilderResult.hasHeight = YES;
  protobufBuilderResult.height = _value;
  return self;
}
- (MUserDetail_Builder*) clearHeight {
  protobufBuilderResult.hasHeight = NO;
  protobufBuilderResult.height = @"";
  return self;
}
- (BOOL) hasWeight {
  return protobufBuilderResult.hasWeight;
}
- (NSString*) weight {
  return protobufBuilderResult.weight;
}
- (MUserDetail_Builder*) setWeight:(NSString*) _value {
  protobufBuilderResult.hasWeight = YES;
  protobufBuilderResult.weight = _value;
  return self;
}
- (MUserDetail_Builder*) clearWeight {
  protobufBuilderResult.hasWeight = NO;
  protobufBuilderResult.weight = @"";
  return self;
}
- (BOOL) hasJob {
  return protobufBuilderResult.hasJob;
}
- (NSString*) job {
  return protobufBuilderResult.job;
}
- (MUserDetail_Builder*) setJob:(NSString*) _value {
  protobufBuilderResult.hasJob = YES;
  protobufBuilderResult.job = _value;
  return self;
}
- (MUserDetail_Builder*) clearJob {
  protobufBuilderResult.hasJob = NO;
  protobufBuilderResult.job = @"";
  return self;
}
- (BOOL) hasIncome {
  return protobufBuilderResult.hasIncome;
}
- (NSString*) income {
  return protobufBuilderResult.income;
}
- (MUserDetail_Builder*) setIncome:(NSString*) _value {
  protobufBuilderResult.hasIncome = YES;
  protobufBuilderResult.income = _value;
  return self;
}
- (MUserDetail_Builder*) clearIncome {
  protobufBuilderResult.hasIncome = NO;
  protobufBuilderResult.income = @"";
  return self;
}
- (BOOL) hasVehicle {
  return protobufBuilderResult.hasVehicle;
}
- (NSString*) vehicle {
  return protobufBuilderResult.vehicle;
}
- (MUserDetail_Builder*) setVehicle:(NSString*) _value {
  protobufBuilderResult.hasVehicle = YES;
  protobufBuilderResult.vehicle = _value;
  return self;
}
- (MUserDetail_Builder*) clearVehicle {
  protobufBuilderResult.hasVehicle = NO;
  protobufBuilderResult.vehicle = @"";
  return self;
}
- (BOOL) hasLoveOpinion {
  return protobufBuilderResult.hasLoveOpinion;
}
- (NSString*) loveOpinion {
  return protobufBuilderResult.loveOpinion;
}
- (MUserDetail_Builder*) setLoveOpinion:(NSString*) _value {
  protobufBuilderResult.hasLoveOpinion = YES;
  protobufBuilderResult.loveOpinion = _value;
  return self;
}
- (MUserDetail_Builder*) clearLoveOpinion {
  protobufBuilderResult.hasLoveOpinion = NO;
  protobufBuilderResult.loveOpinion = @"";
  return self;
}
- (BOOL) hasSexOpinion {
  return protobufBuilderResult.hasSexOpinion;
}
- (NSString*) sexOpinion {
  return protobufBuilderResult.sexOpinion;
}
- (MUserDetail_Builder*) setSexOpinion:(NSString*) _value {
  protobufBuilderResult.hasSexOpinion = YES;
  protobufBuilderResult.sexOpinion = _value;
  return self;
}
- (MUserDetail_Builder*) clearSexOpinion {
  protobufBuilderResult.hasSexOpinion = NO;
  protobufBuilderResult.sexOpinion = @"";
  return self;
}
- (BOOL) hasPrivacy {
  return protobufBuilderResult.hasPrivacy;
}
- (NSString*) privacy {
  return protobufBuilderResult.privacy;
}
- (MUserDetail_Builder*) setPrivacy:(NSString*) _value {
  protobufBuilderResult.hasPrivacy = YES;
  protobufBuilderResult.privacy = _value;
  return self;
}
- (MUserDetail_Builder*) clearPrivacy {
  protobufBuilderResult.hasPrivacy = NO;
  protobufBuilderResult.privacy = @"";
  return self;
}
- (BOOL) hasDistance {
  return protobufBuilderResult.hasDistance;
}
- (NSString*) distance {
  return protobufBuilderResult.distance;
}
- (MUserDetail_Builder*) setDistance:(NSString*) _value {
  protobufBuilderResult.hasDistance = YES;
  protobufBuilderResult.distance = _value;
  return self;
}
- (MUserDetail_Builder*) clearDistance {
  protobufBuilderResult.hasDistance = NO;
  protobufBuilderResult.distance = @"";
  return self;
}
- (BOOL) hasIsFocus {
  return protobufBuilderResult.hasIsFocus;
}
- (int32_t) isFocus {
  return protobufBuilderResult.isFocus;
}
- (MUserDetail_Builder*) setIsFocus:(int32_t) _value {
  protobufBuilderResult.hasIsFocus = YES;
  protobufBuilderResult.isFocus = _value;
  return self;
}
- (MUserDetail_Builder*) clearIsFocus {
  protobufBuilderResult.hasIsFocus = NO;
  protobufBuilderResult.isFocus = 0;
  return self;
}
- (BOOL) hasIsBlack {
  return protobufBuilderResult.hasIsBlack;
}
- (int32_t) isBlack {
  return protobufBuilderResult.isBlack;
}
- (MUserDetail_Builder*) setIsBlack:(int32_t) _value {
  protobufBuilderResult.hasIsBlack = YES;
  protobufBuilderResult.isBlack = _value;
  return self;
}
- (MUserDetail_Builder*) clearIsBlack {
  protobufBuilderResult.hasIsBlack = NO;
  protobufBuilderResult.isBlack = 0;
  return self;
}
@end

